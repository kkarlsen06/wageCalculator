const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/employeeCarousel-BjYjykjS.js","assets/kalkulator-CddgrMNO.js","assets/modulepreload-polyfill-B5Qt9EMX.js","assets/runtime-config-CwEj8XBa.js","assets/kalkulator-BYzzdff5.css","assets/employeeModal-DEG7fEJC.js"])))=>i.map(i=>d[i]);
import{_ as Y}from"./kalkulator-CddgrMNO.js";import"./modulepreload-polyfill-B5Qt9EMX.js";import"./runtime-config-CwEj8XBa.js";const A={progressFill:null,progressLabel:null,monthlyGoalInput:null,init(){this.progressFill=document.querySelector(".chart-progress-fill")||document.querySelector(".progress-fill"),this.progressLabel=document.querySelector(".chart-progress-label")||document.querySelector(".progress-label"),this.monthlyGoalInput=document.getElementById("monthlyGoalInput")},refresh(){this.init()}};function z(){if(typeof window<"u"&&window.app&&window.app.monthlyGoal)return window.app.monthlyGoal;const e=localStorage.getItem("monthlyGoal");return e?parseInt(e,10):2e4}async function X(e){typeof window<"u"&&window.app&&(window.app.monthlyGoal=e,window.app.saveSettingsToSupabase&&await window.app.saveSettingsToSupabase()),localStorage.setItem("monthlyGoal",e),typeof window<"u"&&window.app&&window.app.updateStats&&window.app.updateStats()}function K(){const e=A.monthlyGoalInput||document.getElementById("monthlyGoalInput");e&&(e.value=z(),e.addEventListener("input",t=>{const s=parseInt(t.target.value,10);!isNaN(s)&&s>0&&X(s)}))}typeof window<"u"&&(window.pendingConfetti=!1,document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{A.init(),K()}):(A.init(),K()));function Q(e,t,s=!1){const o=A.progressFill||document.querySelector(".chart-progress-fill")||document.querySelector(".progress-fill"),n=A.progressLabel||document.querySelector(".chart-progress-label")||document.querySelector(".progress-label");if(!o||!n)return;const a=Math.round(e/t*100),i=Math.min(a,100);o.dataset.animating==="true"&&(o.dataset.animating="false"),o.classList.remove("loading"),s?requestAnimationFrame(()=>{o.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)",n.style.transition="all 0.3s cubic-bezier(0.4, 0, 0.2, 1)",o.dataset.animating="true",o.style.width=i+"%",Z(n,a),setTimeout(()=>{o.dataset.animating="false",typeof window<"u"&&window.app&&!window.app.initialAnimationComplete&&(window.app.initialAnimationComplete=!0)},850)}):(o.style.transition="none",n.style.transition="none",o.style.width=i+"%",o.offsetHeight,o.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)",n.style.transition="all 0.3s cubic-bezier(0.4, 0, 0.2, 1)",Z(n,a));const r=o.closest(".progress-card")||o.closest(".chart-progress-bar");a>=100?(o.classList.add("full"),a>100&&r?r.classList.add("overachievement"):r&&r.classList.remove("overachievement")):(o.classList.remove("full"),r&&r.classList.remove("overachievement")),a>0?o.classList.add("active"):o.classList.remove("active");const c=window.app&&window.app.currencyFormat?" NOK":" kr",l=a<10?a.toFixed(1):Math.round(a);n.textContent=`${l}% av ${t.toLocaleString("no-NO")}${c}`,o.title=`${e.toLocaleString("no-NO")}${c} av ${t.toLocaleString("no-NO")}${c}`}function Z(e,t){e.classList.remove("low-progress","medium-progress","high-progress","overachievement"),t>100?(e.classList.add("overachievement"),e.setAttribute("aria-label",`Mål oppnådd! ${t.toFixed(1)}% av målet`)):t>=75?(e.classList.add("high-progress"),e.setAttribute("aria-label",`Nær målet: ${t.toFixed(1)}% av målet`)):t>=25?(e.classList.add("medium-progress"),e.setAttribute("aria-label",`Fremdrift: ${t.toFixed(1)}% av målet`)):(e.classList.add("low-progress"),e.setAttribute("aria-label",`Tidlig fremdrift: ${t.toFixed(1)}% av målet`)),requestAnimationFrame(()=>{e.offsetHeight,window.getComputedStyle(e).textAlign!=="center"&&(e.style.textAlign="center")})}typeof window<"u"&&(window.updateProgressBar=Q,window.getMonthlyGoal=z,window.setMonthlyGoal=X,window.domCache=A);const oe={PAUSE_THRESHOLD:5.5,PAUSE_DEDUCTION:.5,MONTHS:["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"],WEEKDAYS:["søndag","mandag","tirsdag","onsdag","torsdag","fredag","lørdag"],PRESET_WAGE_RATES:{"-1":129.91,"-2":132.9,1:184.54,2:185.38,3:187.46,4:193.05,5:210.81,6:256.14},orgSettings:{break_policy:"fixed_0_5_over_5_5h"},PRESET_BONUSES:{weekday:[{from:"18:00",to:"21:00",rate:22},{from:"21:00",to:"23:59",rate:45}],saturday:[{from:"13:00",to:"15:00",rate:45},{from:"15:00",to:"18:00",rate:55},{from:"18:00",to:"23:59",rate:110}],sunday:[{from:"00:00",to:"23:59",rate:115}]},shifts:[],currentMonth:new Date().getMonth()+1,currentYear:new Date().getFullYear(),currentWageLevel:1,usePreset:!0,customWage:200,customBonuses:{},currentView:"dashboard",pauseDeduction:!0,fullMinuteRange:!1,directTimeInput:!1,monthlyGoal:2e4,shiftView:"list",calendarDisplayMode:"money",selectedDate:null,userShifts:[],formState:{},initialAnimationComplete:!1,drillDownMode:!1,selectedWeek:null,taxDeductionEnabled:!1,taxPercentage:0,payrollDay:15,dashboardView:"default",nextShiftTimer:null,lastRenderedMonth:null,lastRenderedYear:null,lastRenderedShiftsKey:"",monthNavigationTimeout:null,employees:[],selectedEmployeeId:null,employeeCache:new Map,employeesLoading:!1,employeesError:null,async getAuthHeaders(){try{const{data:{session:e}}=await window.supa.auth.getSession(),t=e?.access_token;return{"Content-Type":"application/json",...t?{Authorization:`Bearer ${t}`}:{}}}catch{return{"Content-Type":"application/json"}}},async init(){try{const n=await this.getAuthHeaders?.(),a=await fetch(`${window.CONFIG.apiBase}/org-settings`,{headers:n});if(a.ok){const i=await a.json();i&&i.break_policy&&(this.orgSettings={break_policy:i.break_policy})}}catch{}this.selectedDates=[],A.init();const e=A.progressFill;e&&(e.classList.add("loading"),e.style.width="0%",e.style.transition="none"),this.initializeEmployeeState(),this.loadEmployeesForShiftForms(),this.populateTimeSelects();try{await this.loadFromSupabase()}catch(n){console.error("loadFromSupabase failed:",n),this.loadFromLocalStorage()}const t=localStorage.getItem("dashboardView");t&&(t==="stats"||t==="default")&&(this.dashboardView=t),this.applyDashboardView();const s=document.getElementById("dashboardToggleBtn");if(s){s.classList.toggle("active",this.dashboardView==="stats");const n=s.querySelector(".toggle-text");n&&(n.textContent=this.dashboardView==="stats"?"Std.":"Stat."),s.setAttribute("aria-label",this.dashboardView==="stats"?"Bytt til standardvisning":"Bytt til statistikkvisning")}this.shifts=[...this.userShifts],this.setupBreakDeductionEventListeners(),document.getElementById("fullMinuteRangeToggle").addEventListener("change",n=>{n.target.checked&&this.directTimeInput&&(this.directTimeInput=!1,document.getElementById("directTimeInputToggle").checked=!1),this.fullMinuteRange=n.target.checked;const a={startHour:document.getElementById("startHour")?.value||"",startMinute:document.getElementById("startMinute")?.value||"",endHour:document.getElementById("endHour")?.value||"",endMinute:document.getElementById("endMinute")?.value||""};this.populateTimeSelects(),setTimeout(()=>{if(a.startHour&&(document.getElementById("startHour").value=a.startHour),a.startMinute){const i=document.getElementById("startMinute");i.querySelector(`option[value="${a.startMinute}"]`)&&(i.value=a.startMinute)}if(a.endHour&&(document.getElementById("endHour").value=a.endHour),a.endMinute){const i=document.getElementById("endMinute");i.querySelector(`option[value="${a.endMinute}"]`)&&(i.value=a.endMinute)}},50),this.saveSettingsToSupabase()}),document.getElementById("directTimeInputToggle").addEventListener("change",n=>{n.target.checked&&this.fullMinuteRange&&(this.fullMinuteRange=!1,document.getElementById("fullMinuteRangeToggle").checked=!1),this.directTimeInput=n.target.checked,this.populateTimeSelects(),this.saveSettingsToSupabase()}),this.setupFormStateListeners(),this.setupNewSettingsListeners(),this.restoreFormState(),setTimeout(()=>{this.updateDisplay(!0)},100),this.shiftView=this.defaultShiftsView,this.switchShiftView(this.shiftView),window.addEventListener("resize",()=>{document.body.classList.contains("chatbox-view")||this.updateStats(!1)}),window.visualViewport&&window.visualViewport.addEventListener("resize",()=>{document.body.classList.contains("chatbox-view")||this.updateStats(!1)});const o=document.querySelector(".header");if(o&&window.ResizeObserver){let n=o.getBoundingClientRect().height;new ResizeObserver(i=>{const r=i[0].target.getBoundingClientRect().height;Math.abs(r-n)>1&&(n=r,this.updateStats(!1))}).observe(o)}window.addEventListener("load",()=>{this.initialAnimationComplete||this.updateStats(!1)}),K(),this.checkAndShowRecurringIntro(),window.addEventListener("beforeunload",()=>{this.cleanup()})},async saveOrgSettings(){try{const e=document.getElementById("breakPolicySelect");if(!e)return;const t=e.value,s=await this.getAuthHeaders(),o=await fetch(`${window.CONFIG.apiBase}/org-settings`,{method:"PUT",headers:s,body:JSON.stringify({break_policy:t})});if(o.ok){const n=await o.json();this.orgSettings={break_policy:n.break_policy},window.showToast&&window.showToast("Lagret","success"),this.updateOrgSettingsUI(),this.currentView==="employees"&&await this.fetchAndDisplayEmployeeShifts?.()}else{const n=await o.json().catch(()=>({}));throw new Error(n.error||"Kunne ikke lagre")}}catch(e){console.error("saveOrgSettings error",e),window.showToast&&window.showToast("Kunne ikke lagre","error")}},onOrgWageCaregiverToggle(){const e=document.getElementById("orgIsWageCaregiverToggle");this.isWageCaregiver=!!(e&&e.checked),this.updateOrgSettingsUI(),this.updateTabBarVisibility();const t=document.getElementById("isWageCaregiverToggle");t&&(t.checked=this.isWageCaregiver),this.saveSettingsToSupabase()},updateOrgSettingsUI(){const e=!this.isWageCaregiver,t=document.getElementById("orgBreakPolicySection"),s=document.getElementById("breakPolicySelect");[t].forEach(o=>{o&&(o.style.opacity=e?"0.5":"1")}),s&&(s.disabled=e)},populateTimeSelects(){const e=document.getElementById("startHour"),t=document.getElementById("endHour"),s=document.getElementById("startMinute"),o=document.getElementById("endMinute"),n=document.getElementById("recurringStartHour"),a=document.getElementById("recurringEndHour"),i=document.getElementById("recurringStartMinute"),r=document.getElementById("recurringEndMinute");if(this.directTimeInput)this.replaceTimeDropdownsWithInputs();else{this.ensureTimeDropdowns(),e.innerHTML='<option value="">Fra time</option>',t.innerHTML='<option value="">Til time</option>',s.innerHTML='<option value="">Fra minutt</option>',o.innerHTML='<option value="">Til minutt</option>',n&&(n.innerHTML='<option value="">Fra time</option>',a.innerHTML='<option value="">Til time</option>',i.innerHTML='<option value="">Fra minutt</option>',r.innerHTML='<option value="">Til minutt</option>');for(let c=0;c<=23;c++){const l=String(c).padStart(2,"0");e.innerHTML+=`<option value="${l}">${l}</option>`,t.innerHTML+=`<option value="${l}">${l}</option>`,n&&(n.innerHTML+=`<option value="${l}">${l}</option>`,a.innerHTML+=`<option value="${l}">${l}</option>`)}if(this.fullMinuteRange)for(let c=0;c<60;c++){const l=String(c).padStart(2,"0"),d=c===0?" selected":"";s.innerHTML+=`<option value="${l}"${d}>${l}</option>`,o.innerHTML+=`<option value="${l}"${d}>${l}</option>`,i&&(i.innerHTML+=`<option value="${l}"${d}>${l}</option>`,r.innerHTML+=`<option value="${l}"${d}>${l}</option>`)}else["00","15","30","45"].forEach((c,l)=>{const d=l===0?" selected":"";s.innerHTML+=`<option value="${c}"${d}>${c}</option>`,o.innerHTML+=`<option value="${c}"${d}>${c}</option>`,i&&(i.innerHTML+=`<option value="${c}"${d}>${c}</option>`,r.innerHTML+=`<option value="${c}"${d}>${c}</option>`)})}},replaceTimeDropdownsWithInputs(){[{id:"startHour",placeholder:"Fra time (HH)"},{id:"startMinute",placeholder:"Fra minutt (MM)"},{id:"endHour",placeholder:"Til time (HH)"},{id:"endMinute",placeholder:"Til minutt (MM)"},{id:"recurringStartHour",placeholder:"Fra time (HH)"},{id:"recurringStartMinute",placeholder:"Fra minutt (MM)"},{id:"recurringEndHour",placeholder:"Til time (HH)"},{id:"recurringEndMinute",placeholder:"Til minutt (MM)"}].forEach(t=>{const s=document.getElementById(t.id);if(s&&s.tagName==="SELECT"){const o=s.value,n=document.createElement("input");n.type="text",n.id=t.id,n.className="form-control time-input",n.placeholder=t.placeholder,n.maxLength=2,n.pattern="[0-9]{2}",n.value=o,n.addEventListener("input",a=>{let i=a.target.value.replace(/\D/g,"");if(i.length>2&&(i=i.slice(0,2)),t.id.includes("Hour")){const r=parseInt(i);i.length===2&&r>23&&(i=i.slice(0,1))}else{const r=parseInt(i);i.length===2&&r>59&&(i=i.slice(0,1))}a.target.value=i}),n.addEventListener("blur",a=>{a.target.value.length===1&&(a.target.value="0"+a.target.value)}),s.replaceWith(n)}})},ensureTimeDropdowns(){["startHour","startMinute","endHour","endMinute","recurringStartHour","recurringStartMinute","recurringEndHour","recurringEndMinute"].forEach(t=>{const s=document.getElementById(t);if(s&&s.tagName==="INPUT"){s.value;const o=document.createElement("select");o.id=t,o.className="form-control",s.replaceWith(o)}})},async loadEmployeesForShiftForms(){try{this.employees.length===0&&await this.loadEmployees(),this.populateEmployeeSelectors(),this.populateEmployeeFilterBar()}catch(e){console.error("Error loading employees for shift forms:",e)}},populateEmployeeSelectors(){["employeeSelect","recurringEmployeeSelect","editEmployeeSelect"].forEach(t=>{const s=document.getElementById(t);if(s){for(;s.children.length>1;)s.removeChild(s.lastChild);this.employees.forEach(o=>{if(o.archived_at)return;const n=document.createElement("option");n.value=o.id,n.textContent=o.name,s.appendChild(n)})}}),this.toggleEmployeeSelectorsVisibility(this.currentView==="employees")},toggleEmployeeSelectorsVisibility(e){["employeeSelect","recurringEmployeeSelect"].forEach(t=>{const s=document.getElementById(t);if(!s)return;const o=s.closest(".form-group")||s.parentElement;o&&(o.style.display="none")})},populateEmployeeFilterBar(){const e=document.getElementById("employeeFilterBar");if(e){e.style.display="none";const t=e.querySelector(".filter-scroll-container");t&&(t.innerHTML="")}},createFilterChip(e,t,s,o){const n=document.createElement("button");n.className=`filter-chip ${o?"active":""}`,n.setAttribute("data-employee-id",e),n.setAttribute("aria-label",`Filter by ${t}`);const a=document.createElement("span");if(a.textContent=t,n.appendChild(a),s&&e){const i=document.createElement("span");i.className="filter-chip-color",i.style.backgroundColor=s,n.insertBefore(i,a)}return n.addEventListener("click",()=>{this.handleEmployeeFilter(e)}),n},handleEmployeeFilter(e){const t=e||null;this.selectedEmployeeId=t,document.querySelectorAll(".filter-chip").forEach(o=>{const n=o.getAttribute("data-employee-id");o.classList.toggle("active",n===(t||""))}),this.currentView==="employees"?this.fetchAndDisplayEmployeeShifts?.():this.applyEmployeeFilter(),t?localStorage.setItem("selectedEmployeeId",t):localStorage.removeItem("selectedEmployeeId"),this.updateEmployeeAssignmentUIInModal?.()},updateEmployeeAssignmentUIInModal(){const e="selectedEmployeePill",t=document.getElementById(e),s=document.getElementById("employeeSelect"),o=document.getElementById("recurringEmployeeSelect"),n=s?.closest(".form-group"),a=o?.closest(".form-group"),i=this.currentView==="employees",r=this.selectedEmployeeId!==null;if(r&&(s&&(s.value=this.selectedEmployeeId),o&&(o.value=this.selectedEmployeeId)),n&&(n.style.display="none"),a&&(a.style.display="none"),!i){t&&t.remove();return}const c=document.getElementById("addShiftModal");if(!c)return;let l=t;if(!l){l=document.createElement("div"),l.id=e,l.style.display="none",l.style.marginBottom="16px",l.innerHTML=`
                <div class="form-group">
                  <label>Ansatt</label>
                  <div class="selected-employee-pill" style="display:flex;align-items:center;gap:8px;padding:8px 10px;border:1px solid var(--border);border-radius:8px;background:var(--surface)">
                    <span class="color-dot" style="display:inline-block;width:12px;height:12px;border-radius:50%;background:#888"></span>
                    <span class="name"></span>
                  </div>
                </div>`;const u=c.querySelector("#shiftForm");u?.insertBefore(l,u.firstChild?.nextSibling?.nextSibling||u.firstChild)}const d=this.getSelectedEmployee?.()||null;if(r&&d){l.style.display="";const u=l.querySelector(".name"),h=l.querySelector(".color-dot");u&&(u.textContent=d.name),h&&(h.style.background=d.display_color||"#888");const v=l.querySelector(".selected-employee-pill");v&&!v.dataset.boundEdit&&(v.style.cursor="pointer",v.setAttribute("role","button"),v.setAttribute("tabindex","0"),v.title="Rediger ansatt",v.addEventListener("click",m=>{try{m.preventDefault(),m.stopPropagation()}catch{}const y=this.getSelectedEmployee?.();y&&this.showEditEmployeeModal(y)}),v.addEventListener("keydown",m=>{if(m.key==="Enter"||m.key===" "){m.preventDefault();const y=this.getSelectedEmployee?.();y&&this.showEditEmployeeModal(y)}}),v.dataset.boundEdit="1")}else l.style.display="none"},applyEmployeeFilter(){if(this.currentView==="employees"){this.fetchAndDisplayEmployeeShifts?.(),this.updateEmployeeAssignmentUIInModal?.();return}this.shifts=[...this.userShifts],this.updateDisplay()},initializeEmployeeState(){const e=localStorage.getItem("selectedEmployeeId");e&&(this.selectedEmployeeId=e)},openAddShiftModal(e=null,t=null){this.closeShiftDetails(),this.closeSettings(!1),this.closeProfile(),this.closeProfileDropdown();const s=document.querySelector(".floating-action-bar"),o=document.querySelector(".floating-action-bar-backdrop");s&&(s.style.display="none"),o&&(o.style.display="none");const n=document.getElementById("startHour");n&&n.tagName==="SELECT"&&!n.options.length?this.populateTimeSelects():n||this.populateTimeSelects(),document.getElementById("dateGrid").childElementCount?e!==null||t!==null?this.populateDateGrid(e,t):this.populateDateGrid(e,t):this.populateDateGrid(e,t);const a=document.getElementById("addShiftModal");a.style.display="flex",a.classList.add("active"),this.selectedDates=[],document.querySelectorAll("#dateGrid .date-cell").forEach(r=>r.classList.remove("selected")),this.updateSelectedDatesInfo(),document.getElementById("shiftForm").reset(),this.switchAddShiftTab("simple"),this.populateEmployeeSelectors(),this.updateEmployeeAssignmentUIInModal()},updateSelectedDatesInfo(){const e=document.getElementById("selectedDatesInfo"),t=document.getElementById("selectedDatesCount");if(!e||!t)return;const s=this.selectedDates?this.selectedDates.length:0;s>0?(t.textContent=s,e.style.display="block"):e.style.display="none"},switchAddShiftTab(e){document.getElementById("addShiftModal").querySelectorAll(".tab-btn").forEach((a,i)=>{const r=i===0,c=e==="simple"&&r||e==="recurring"&&!r;a.classList.toggle("active",c)});const o=document.getElementById("simpleFields"),n=document.getElementById("recurringFields");e==="simple"?(o.classList.add("active"),n.classList.remove("active")):(o.classList.remove("active"),n.classList.add("active")),this.toggleEmployeeSelectorsVisibility(this.currentView==="employees"),this.updateEmployeeAssignmentUIInModal?.()},closeAddShiftModal(){const e=document.getElementById("addShiftModal");e.style.display="none",e.classList.remove("active");const t=document.querySelector(".floating-action-bar"),s=document.querySelector(".floating-action-bar-backdrop");t&&(t.style.display=""),s&&(s.style.display="")},async addShift(){const e=document.getElementById("recurringFields");if(e&&e.classList.contains("active")){const s=uuidv4(),o=parseInt(document.getElementById("recurringFrequency").value,10),n=document.getElementById("recurringStartDate").value,a=parseFloat(document.getElementById("recurringDurationYears").value),i=document.getElementById("recurringStartHour").value,r=document.getElementById("recurringStartMinute").value||"00",c=document.getElementById("recurringEndHour").value,l=document.getElementById("recurringEndMinute").value||"00",d=this.selectedEmployeeId;if(!n||!o||!a||!i||!c){window.ErrorHelper?window.ErrorHelper.showError("Vennligst fyll ut alle påkrevde felt for å opprette en vaktserie.",{type:"warning",duration:4e3}):alert("Vennligst fyll ut alle påkrevde felt for å opprette en vaktserie.");const w=document.querySelector('.btn-primary[onclick="app.addShift()"]');w&&(w.style.background="var(--danger)",w.style.transform="scale(0.95)",w.style.transition="all 0.2s ease",setTimeout(()=>{w.style.background="",w.style.transform="scale(1)"},1e3));return}const u=new Date(n),h=u.getDay(),v=[new Date(u)];let m=new Date(u);const y=new Date(u);for(y.setMonth(y.getMonth()+Math.floor(a*12));m=new Date(m),m.setDate(m.getDate()+o*7),!(m>y);)v.push(new Date(m));const D=`Du er i ferd med å opprette ${v.length} gjentakende vakter.

Vil du fortsette?`;if(!confirm(D)){const w=document.querySelector('.btn-primary[onclick="app.addShift()"]');w&&(w.style.transform="scale(1)",w.style.transition="transform 0.1s ease");return}const S=document.querySelector('.btn-primary[onclick="app.addShift()"]');S&&(S.style.transform="scale(0.95)",S.style.transition="transform 0.1s ease",setTimeout(()=>{S.style.transform="scale(1)"},100));const{data:p}=await window.supa.auth.getClaims();if(!!!p){alert("Autentiseringsfeil");return}const E=await guardedUserId();for(const w of v){const b=`${w.getFullYear()}-${(w.getMonth()+1).toString().padStart(2,"0")}-${w.getDate().toString().padStart(2,"0")}`;if(d){const{data:{session:C}}=await window.supa.auth.getSession(),T={Authorization:`Bearer ${C.access_token}`,"Content-Type":"application/json"},I=await fetch(`${window.CONFIG.apiBase}/employee-shifts`,{method:"POST",headers:T,body:JSON.stringify({employee_id:d,shift_date:b,start_time:`${i}:${r}`,end_time:`${c}:${l}`})});if(!I.ok){const x=await I.json().catch(()=>({}));console.error("Gjentakende API-feil:",x);continue}}else{const C={user_id:E,shift_date:b,start_time:`${i}:${r}`,end_time:`${c}:${l}`,shift_type:h===0?2:h===6?1:0,series_id:s},{data:T,error:I}=await window.supa.from("user_shifts").insert(C).select().single();if(I){console.error("Gjentakende feil:",I);continue}this.userShifts.push({id:T.id,date:new Date(w),startTime:`${i}:${r}`,endTime:`${c}:${l}`,type:h===0?2:h===6?1:0,seriesId:s})}}this.shifts=[...this.userShifts],this.refreshUI(this.shifts),this.closeAddShiftModal();const k=document.querySelector(".add-btn");k&&(k.style.transform="scale(1.1)",k.style.background="var(--success)",k.style.transition="all 0.3s ease",setTimeout(()=>{k.style.transform="scale(1)",k.style.background=""},500));return}try{if(!this.selectedDates||this.selectedDates.length===0){window.ErrorHelper?window.ErrorHelper.showError("Vennligst velg en dato før du lagrer vakten.",{type:"warning",duration:4e3}):alert("Vennligst velg en dato før du lagrer vakten.");const u=document.querySelector('.btn-primary[onclick="app.addShift()"]');u&&(u.style.background="var(--danger)",u.style.transform="scale(0.95)",u.style.transition="all 0.2s ease",setTimeout(()=>{u.style.background="",u.style.transform="scale(1)"},1e3));return}const s=document.getElementById("startHour").value,o=document.getElementById("startMinute").value||"00",n=document.getElementById("endHour").value,a=document.getElementById("endMinute").value||"00",i=this.selectedEmployeeId;if(!s||!n){window.ErrorHelper?window.ErrorHelper.showError("Vennligst fyll ut arbeidstid (start- og sluttidspunkt).",{type:"warning",duration:4e3}):alert("Vennligst fyll ut arbeidstid (start- og sluttidspunkt).");const u=document.querySelector('.btn-primary[onclick="app.addShift()"]');u&&(u.style.background="var(--danger)",u.style.transform="scale(0.95)",u.style.transition="all 0.2s ease",setTimeout(()=>{u.style.background="",u.style.transform="scale(1)"},1e3));return}const{data:r}=await window.supa.auth.getClaims();if(!!!r){console.error("addShift: Authentication error"),alert("Feil ved autentisering");return}const l=await guardedUserId(),d=[];for(const u of this.selectedDates){const h=u.getDay(),v=h===0?2:h===6?1:0,m={date:new Date(u),startTime:`${s}:${o}`,endTime:`${n}:${a}`,type:v},y=`${m.date.getFullYear()}-${(m.date.getMonth()+1).toString().padStart(2,"0")}-${m.date.getDate().toString().padStart(2,"0")}`;if(i){const{data:{session:f}}=await window.supa.auth.getSession(),D={Authorization:`Bearer ${f.access_token}`,"Content-Type":"application/json"},S=await fetch(`${window.CONFIG.apiBase}/employee-shifts`,{method:"POST",headers:D,body:JSON.stringify({employee_id:i,shift_date:y,start_time:m.startTime,end_time:m.endTime})});if(!S.ok){const p=await S.json().catch(()=>({}));console.error("addShift: Employee-shift API error:",p),alert(`Kunne ikke lagre vakt for ${y}: ${p.error||S.statusText}`);continue}}else{const f={user_id:l,shift_date:y,start_time:m.startTime,end_time:m.endTime,shift_type:m.type},{data:D,error:S}=await window.supa.from("user_shifts").insert(f).select().single();if(S){console.error("addShift: Database error when saving shift:",S),alert(`Kunne ikke lagre vakt for ${y}: ${S.message}`);continue}m.id=D.id,this.userShifts.push(m),d.push(m)}m.employee_id=i,m.employee=i?this.employees.find(f=>f.id===i):null}if(i?await this.fetchAndDisplayEmployeeShifts?.():(this.shifts=[...this.userShifts],this.refreshUI(this.shifts)),document.getElementById("shiftForm").reset(),this.selectedDates=[],document.querySelectorAll(".date-cell").forEach(u=>{u.classList.remove("selected")}),this.updateSelectedDatesInfo(),this.clearFormState(),d.length>0){const u=document.querySelector(".add-btn");u&&(u.style.transform="scale(1.1)",u.style.background="var(--success)",u.style.transition="all 0.3s ease",setTimeout(()=>{u.style.transform="scale(1)",u.style.background=""},500))}}catch(s){console.error("addShift: Critical error:",s),alert(`En uventet feil oppstod: ${s.message}`)}},getISOWeekNumber(e){const t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate())),s=t.getUTCDay()||7;t.setUTCDate(t.getUTCDate()+4-s);const o=new Date(Date.UTC(t.getUTCFullYear(),0,1));return Math.ceil(((t-o)/864e5+1)/7)},getWeekDateRange(e,t){const s=new Date(Date.UTC(t,0,4)),o=s.getUTCDay()||7,n=new Date(s);n.setUTCDate(s.getUTCDate()-o+1);const a=new Date(n);a.setUTCDate(n.getUTCDate()+(e-1)*7);const i=new Date(a);i.setUTCDate(a.getUTCDate()+6);const r=new Date(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate()),c=new Date(i.getUTCFullYear(),i.getUTCMonth(),i.getUTCDate());return{startDate:r,endDate:c}},enterDrillDownMode(e){console.log("Entering drill-down mode for week:",e),this.clearAllTooltips(),this.drillDownMode=!0,this.selectedWeek=e,this.updateWeeklyHoursChart(),this.updateDisplay(!1)},exitDrillDownMode(){console.log("Exiting drill-down mode"),this.clearAllTooltips();const e=document.querySelector(".chart-hours-value-card"),t=document.querySelector(".chart-shifts-count-card");e&&(e.classList.remove("has-tooltip","tooltip-active"),e.removeAttribute("data-tooltip"),this.removeWageCardTooltip(e)),t&&(t.classList.remove("has-tooltip","tooltip-active"),t.removeAttribute("data-tooltip"),this.removeWageCardTooltip(t));const s=document.getElementById("wageCardTooltip");s&&s.classList.remove("show"),this.drillDownMode=!1,this.selectedWeek=null,this.removeBackButton(),this.updateWeeklyHoursChart(),this.updateDisplay(!1)},isInDrillDownMode(){return this.drillDownMode&&this.selectedWeek!==null},clearAllTooltips(){this.hideChartTooltip&&this.hideChartTooltip();const e=document.getElementById("chartTooltip");e&&e.classList.remove("show"),document.querySelectorAll(".chart-bar.tooltip-active").forEach(s=>{s.classList.remove("tooltip-active")})},addBackButton(){this.removeBackButton();const e=document.querySelector(".chart-progress-bar");if(!e)return;const t=document.createElement("div");t.className="progress-bar-wrapper",t.id="progressBarWrapper",e.parentNode.insertBefore(t,e),t.appendChild(e);const o=document.createElement("button");o.id="drillDownBackButton",o.className="drill-down-back-button",o.innerHTML=`
            <svg class="back-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="15 18 9 12 15 6"></polyline>
            </svg>
            <span>Uke ${this.selectedWeek}</span>
        `,o.setAttribute("aria-label",`Tilbake til ukeoversikt fra uke ${this.selectedWeek}`),o.addEventListener("click",n=>{n.stopPropagation(),this.exitDrillDownMode()}),t.appendChild(o)},removeBackButton(){const e=document.getElementById("progressBarWrapper"),t=document.getElementById("drillDownBackButton");if(e){const s=e.querySelector(".chart-progress-bar"),o=e.parentNode;s&&o&&o.insertBefore(s,e),e.remove()}else t&&t.remove()},getShiftsForWeek(e){const{startDate:t,endDate:s}=this.getWeekDateRange(e,this.currentYear);return this.shifts.filter(n=>{const a=new Date(n.date);return a>=t&&a<=s}).map(n=>{const a=n.date.getMonth()===this.currentMonth-1&&n.date.getFullYear()===this.currentYear;return{...n,isCurrentMonth:a}})},getDailyDataForWeek(e){const t=this.getShiftsForWeek(e),s={};let o=0,n=0,a=0,i=0;return t.forEach(r=>{const c=r.date.getDay();s[c]||(s[c]={hours:0,earnings:0,shifts:[],date:new Date(r.date),hasCurrentMonthShifts:!1,hasAdjacentMonthShifts:!1});const l=this.calculateShift(r);s[c].hours+=l.hours,s[c].earnings+=l.total,s[c].shifts.push(r),r.isCurrentMonth?(s[c].hasCurrentMonthShifts=!0,a+=l.hours,i+=l.total):s[c].hasAdjacentMonthShifts=!0,o+=l.hours,n+=l.total}),{dailyData:s,totalWeekHours:o,totalWeekEarnings:n,totalCurrentMonthHours:a,totalCurrentMonthEarnings:i,weekNumber:e}},getDaysWithShifts(e){const{dailyData:t}=this.getDailyDataForWeek(e);return Object.keys(t).map(s=>parseInt(s)).sort((s,o)=>s===0?1:o===0?-1:s-o)},populateDateGrid(e=null,t=null){const s=document.getElementById("dateGrid");if(!s)return;const o=t!==null?t:this.currentYear,n=e!==null?e-1:this.currentMonth-1,a=new Date(o,n,1),i=new Date(a),r=a.getDay()===0?6:a.getDay()-1;i.setDate(i.getDate()-r),s.innerHTML="";const c=this.shifts.filter(u=>u.date.getMonth()===n&&u.date.getFullYear()===o),l=new Set;c.forEach(u=>{l.add(u.date.getDate())});const d=document.createElement("div");d.textContent="",d.className="week-number header",s.appendChild(d),["M","T","O","T","F","L","S"].forEach(u=>{const h=document.createElement("div");h.textContent=u,h.style.cssText="font-weight:600;font-size:12px;color:var(--text-secondary);text-align:center;padding:8px;",s.appendChild(h)});for(let u=0;u<42;u++){if(u%7===0){const f=new Date(i);f.setDate(i.getDate()+u);const D=this.getISOWeekNumber(f),S=document.createElement("div");S.className="week-number",S.textContent=D,s.appendChild(S)}const h=new Date(i);h.setDate(i.getDate()+u);const v=document.createElement("div");v.className="date-cell";const m=document.createElement("div");if(m.className="date-cell-content",m.textContent=h.getDate(),h.getMonth()===n&&l.has(h.getDate())){const f=document.createElement("div");f.className="shift-indicator-dot",m.appendChild(f),v.classList.add("has-shift")}const y=new Date;if(h.getDate()===y.getDate()&&h.getMonth()===y.getMonth()&&h.getFullYear()===y.getFullYear()&&v.classList.add("current-date"),v.appendChild(m),h.getMonth()!==n)v.classList.add("disabled");else{if(this.selectedDates&&this.selectedDates.length>0){const f=h.toDateString();this.selectedDates.some(S=>S.toDateString()===f)&&v.classList.add("selected")}v.addEventListener("click",()=>{this.selectedDates||(this.selectedDates=[]);const f=h.toDateString(),D=this.selectedDates.findIndex(S=>S.toDateString()===f);D>=0?(this.selectedDates.splice(D,1),v.classList.remove("selected")):(this.selectedDates.push(new Date(h)),v.classList.add("selected")),this.updateSelectedDatesInfo(),this.saveFormState()})}s.appendChild(v)}},changeMonth(e){this.currentMonth=e,this.debouncedUpdateDisplay(!0)},navigateToPreviousMonth(){let e=this.currentMonth-1,t=this.currentYear;e<1&&(e=12,t=this.currentYear-1),this.currentMonth=e,this.currentYear=t,this.debouncedUpdateDisplay(!0)},navigateToNextMonth(){let e=this.currentMonth+1,t=this.currentYear;e>12&&(e=1,t=this.currentYear+1),this.currentMonth=e,this.currentYear=t,this.debouncedUpdateDisplay(!0)},debouncedUpdateDisplay(e=!1){this.monthNavigationTimeout&&clearTimeout(this.monthNavigationTimeout),A.refresh();const t=document.querySelector(".chart-progress-fill")||document.querySelector(".progress-fill");t&&(t.dataset.animating="false",t.classList.remove("loading"));const o=window.innerWidth<=768?150:100;this.monthNavigationTimeout=setTimeout(()=>{this.updateDisplay(e),this.monthNavigationTimeout=null},o)},async loadFromSupabase(){const{data:e}=await window.supa.auth.getClaims();if(!!!e){this.setDefaultSettings(),this.updateDisplay();return}const s=await guardedUserId();try{const{data:o,error:n}=await window.supa.from("user_shifts").select("*").eq("user_id",s);n?console.error("Error fetching shifts from Supabase:",n):(this.userShifts=(o||[]).map(r=>({id:r.id,date:new Date(r.shift_date+"T00:00:00.000Z"),startTime:r.start_time,endTime:r.end_time,type:r.shift_type,seriesId:r.series_id||null,employee_id:null,employee:null})),this.shifts=[...this.userShifts]);const{data:a,error:i}=await window.supa.from("user_settings").select("*").eq("user_id",s).single();if(i&&i.code!=="PGRST116")console.error("Error fetching settings from Supabase:",i),this.setDefaultSettings();else if(a){this.usePreset=a.use_preset!==!1,this.customWage=a.custom_wage||200,this.currentWageLevel=a.wage_level||a.current_wage_level||1;const r=a.custom_bonuses||{};this.customBonuses={weekday:r.weekday||[],saturday:r.saturday||[],sunday:r.sunday||[]},this.currentMonth=new Date().getMonth()+1,this.currentYear=a.current_year||new Date().getFullYear(),this.pauseDeduction=a.pause_deduction||!1,this.pauseDeductionEnabled=a.pause_deduction_enabled!==!1,this.pauseDeductionMethod=a.pause_deduction_method||"proportional",this.pauseThresholdHours=parseFloat(a.pause_threshold_hours)||5.5,this.pauseDeductionMinutes=parseInt(a.pause_deduction_minutes)||30,this.auditBreakCalculations=!0,this.fullMinuteRange=a.full_minute_range||!1,this.directTimeInput=a.direct_time_input||!1,this.monthlyGoal=a.monthly_goal||2e4,this.hasSeenRecurringIntro=a.has_seen_recurring_intro||!1,this.currencyFormat=a.currency_format||!1,this.defaultShiftsView=a.default_shifts_view||"list",this.taxDeductionEnabled=a.tax_deduction_enabled===!0,this.taxPercentage=parseFloat(a.tax_percentage)||0,this.payrollDay=parseInt(a.payroll_day)||15,this.isWageCaregiver=a.is_wage_caregiver===!0}else this.setDefaultSettings();this.updateSettingsUI(),this.updateTabBarVisibility()}catch(o){console.error("Error in loadFromSupabase:",o),this.setDefaultSettings()}},setDefaultSettings(){this.usePreset=!0,this.customWage=200,this.currentWageLevel=1,this.customBonuses={weekday:[],saturday:[],sunday:[]},this.taxDeductionEnabled=!1,this.taxPercentage=0,this.payrollDay=15,this.isWageCaregiver=!1,this.currentMonth=new Date().getMonth()+1,this.currentYear=new Date().getFullYear(),this.pauseDeduction=!1,this.pauseDeductionEnabled=!0,this.pauseDeductionMethod="proportional",this.pauseThresholdHours=5.5,this.pauseDeductionMinutes=30,this.auditBreakCalculations=!0,this.fullMinuteRange=!1,this.directTimeInput=!1,this.monthlyGoal=2e4,this.hasSeenRecurringIntro=!1,this.currencyFormat=!1,this.defaultShiftsView="list"},setTestCustomBonuses(){this.customBonuses={weekday:[{from:"18:00",to:"22:00",rate:25}],saturday:[{from:"13:00",to:"18:00",rate:50}],sunday:[{from:"00:00",to:"23:59",rate:100}]},this.populateCustomBonusSlots()},updateSettingsUI(){const e=document.getElementById("usePresetToggle");e&&(e.checked=this.usePreset);const t=document.getElementById("wageSelect");t&&(t.value=this.currentWageLevel);const s=document.getElementById("customWageInput");s&&(s.value=this.customWage);const o=document.getElementById("pauseDeductionEnabledToggle");o&&(o.checked=this.pauseDeductionEnabled);const n=document.getElementById("pauseDeductionMethodSelect");if(n){const y=this.orgSettings?.break_policy,f=y==="fixed_0_5_over_5_5h"?"end_of_shift":y==="none"?"none":this.pauseDeductionMethod;n.value=f}const a=document.getElementById("pauseThresholdInput");a&&(a.value=this.pauseThresholdHours);const i=document.getElementById("pauseDeductionMinutesInput");i&&(i.value=this.pauseDeductionMinutes),this.toggleBreakDeductionSections(),this.updateMethodExplanation();const r=document.getElementById("taxDeductionToggle");r&&(r.checked=this.taxDeductionEnabled);const c=document.getElementById("taxPercentageInput");c&&(c.value=this.taxPercentage);const l=document.getElementById("payrollDayInput");l&&(l.value=this.payrollDay),this.toggleTaxPercentageSection();const d=document.getElementById("fullMinuteRangeToggle");d&&(d.checked=this.fullMinuteRange);const u=document.getElementById("directTimeInputToggle");u&&(u.checked=this.directTimeInput);const h=document.getElementById("currencyFormatToggle");h&&(h.checked=this.currencyFormat);const v=document.getElementById("defaultShiftsViewToggle");v&&(v.checked=this.defaultShiftsView==="calendar");const m=document.getElementById("isWageCaregiverToggle");m&&(m.checked=this.isWageCaregiver),this.updateTabBarVisibility(),this.togglePresetSections(),this.usePreset||setTimeout(()=>{this.populateCustomBonusSlots()},100)},togglePresetSections(){const e=document.getElementById("presetWageSection"),t=document.getElementById("customWageSection");e&&t&&(this.usePreset?(e.style.display="block",t.style.display="none"):(e.style.display="none",t.style.display="block",setTimeout(()=>{this.populateCustomBonusSlots()},100)))},async saveSettingsToSupabase(){const{data:e}=await window.supa.auth.getClaims();if(!!!e)return;const s=await guardedUserId();try{const{data:o}=await window.supa.from("user_settings").select("*").eq("user_id",s).single(),n={user_id:s,updated_at:new Date().toISOString()};o?("use_preset"in o&&(n.use_preset=this.usePreset),"wage_level"in o&&(n.wage_level=this.currentWageLevel),"current_wage_level"in o&&(n.current_wage_level=this.currentWageLevel),"custom_wage"in o&&(n.custom_wage=this.customWage),"current_year"in o&&(n.current_year=this.currentYear),"pause_deduction"in o&&(n.pause_deduction=this.pauseDeduction),"full_minute_range"in o&&(n.full_minute_range=this.fullMinuteRange),"direct_time_input"in o&&(n.direct_time_input=this.directTimeInput),"monthly_goal"in o&&(n.monthly_goal=this.monthlyGoal),"has_seen_recurring_intro"in o&&(n.has_seen_recurring_intro=this.hasSeenRecurringIntro),"currency_format"in o&&(n.currency_format=this.currencyFormat),"default_shifts_view"in o&&(n.default_shifts_view=this.defaultShiftsView),"custom_bonuses"in o&&(n.custom_bonuses=this.customBonuses||{}),"tax_deduction_enabled"in o&&(n.tax_deduction_enabled=this.taxDeductionEnabled),"tax_percentage"in o&&(n.tax_percentage=this.taxPercentage),"payroll_day"in o&&(n.payroll_day=this.payrollDay),"is_wage_caregiver"in o&&(n.is_wage_caregiver=this.isWageCaregiver),n.pause_deduction_enabled=this.pauseDeductionEnabled,n.pause_deduction_method=this.pauseDeductionMethod,n.pause_threshold_hours=this.pauseThresholdHours,n.pause_deduction_minutes=this.pauseDeductionMinutes,n.audit_break_calculations=this.auditBreakCalculations,n.is_wage_caregiver=this.isWageCaregiver,console.log("Saving tax deduction settings:",{has_tax_enabled_column:"tax_deduction_enabled"in o,has_tax_percentage_column:"tax_percentage"in o,saving_enabled:this.taxDeductionEnabled,saving_percentage:this.taxPercentage})):(n.use_preset=this.usePreset,n.wage_level=this.currentWageLevel,n.custom_wage=this.customWage,n.current_year=this.currentYear,n.pause_deduction=this.pauseDeduction,n.pause_deduction_enabled=this.pauseDeductionEnabled,n.pause_deduction_method=this.pauseDeductionMethod,n.pause_threshold_hours=this.pauseThresholdHours,n.pause_deduction_minutes=this.pauseDeductionMinutes,n.audit_break_calculations=this.auditBreakCalculations,n.full_minute_range=this.fullMinuteRange,n.direct_time_input=this.directTimeInput,n.monthly_goal=this.monthlyGoal,n.has_seen_recurring_intro=this.hasSeenRecurringIntro,n.currency_format=this.currencyFormat,n.default_shifts_view=this.defaultShiftsView,n.custom_bonuses=this.customBonuses||{},n.tax_deduction_enabled=this.taxDeductionEnabled,n.tax_percentage=this.taxPercentage,n.payroll_day=this.payrollDay,n.is_wage_caregiver=this.isWageCaregiver);const{error:a}=await window.supa.from("user_settings").upsert(n,{onConflict:"user_id"});if(a){console.error("Error saving settings to Supabase:",a);const i={user_id:s,updated_at:new Date().toISOString()},{error:r}=await window.supa.from("user_settings").upsert(i,{onConflict:"user_id"});r&&console.error("Even minimal save failed:",r)}}catch(o){console.error("Error in saveSettingsToSupabase:",o)}},loadFromLocalStorage(){try{const e=localStorage.getItem("lønnsberegnerSettings");if(e){const t=JSON.parse(e);this.usePreset=t.usePreset!==!1,this.customWage=t.customWage||200,this.currentWageLevel=t.currentWageLevel||1,this.customBonuses=t.customBonuses||{},this.currentMonth=new Date().getMonth()+1,this.pauseDeduction=t.pauseDeduction!==!1,this.pauseDeductionEnabled=t.pauseDeductionEnabled!==!1,this.pauseDeductionMethod=t.pauseDeductionMethod||"proportional",this.pauseThresholdHours=parseFloat(t.pauseThresholdHours)||5.5,this.pauseDeductionMinutes=parseInt(t.pauseDeductionMinutes)||30,this.auditBreakCalculations=!0,this.fullMinuteRange=t.fullMinuteRange||!1,this.directTimeInput=t.directTimeInput||!1,this.monthlyGoal=t.monthlyGoal||2e4,this.hasSeenRecurringIntro=t.hasSeenRecurringIntro||!1,this.currencyFormat=t.currencyFormat||!1,this.defaultShiftsView=t.defaultShiftsView||"list",this.taxDeductionEnabled=t.taxDeductionEnabled||!1,this.taxPercentage=t.taxPercentage||0,this.payrollDay=parseInt(t.payrollDay)||15,this.isWageCaregiver=t.isWageCaregiver||!1,this.updateSettingsUI(),this.updateTabBarVisibility()}else this.setDefaultSettings()}catch(e){console.error("Error loading from localStorage:",e),this.setDefaultSettings()}},saveFormState(){const e={selectedDates:this.selectedDates?this.selectedDates.map(t=>t.toISOString()):[],startHour:document.getElementById("startHour")?.value||"",startMinute:document.getElementById("startMinute")?.value||"",endHour:document.getElementById("endHour")?.value||"",endMinute:document.getElementById("endMinute")?.value||""};this.formState=e,localStorage.setItem("vaktberegnerFormState",JSON.stringify(e))},restoreFormState(){try{const e=localStorage.getItem("vaktberegnerFormState");if(e){const t=JSON.parse(e);if(t.selectedDates&&t.selectedDates.length>0?(this.selectedDates=[],t.selectedDates.forEach(s=>{const o=new Date(s),n=o.getMonth()+1,a=o.getFullYear();if(n===this.currentMonth&&a===this.currentYear){this.selectedDates.push(o);const i=o.getDate();document.querySelectorAll(".date-cell").forEach(c=>{const l=c.querySelector(".date-cell-content");l&&l.textContent==i&&!c.classList.contains("disabled")&&c.classList.add("selected")})}})):this.selectedDates=[],t.selectedDate&&(!t.selectedDates||t.selectedDates.length===0)){const s=new Date(t.selectedDate),o=s.getMonth()+1,n=s.getFullYear();if(o===this.currentMonth&&n===this.currentYear){this.selectedDates=[s];const a=s.getDate();document.querySelectorAll(".date-cell").forEach(r=>{const c=r.querySelector(".date-cell-content");c&&c.textContent==a&&!r.classList.contains("disabled")&&r.classList.add("selected")})}}setTimeout(()=>{const s=document.getElementById("startHour"),o=document.getElementById("startMinute"),n=document.getElementById("endHour"),a=document.getElementById("endMinute");s&&t.startHour&&(s.value=t.startHour),o&&t.startMinute&&(o.value=t.startMinute),n&&t.endHour&&(n.value=t.endHour),a&&t.endMinute&&(a.value=t.endMinute)},100),this.formState=t,this.updateSelectedDatesInfo()}}catch(e){console.error("Error restoring form state:",e)}},clearFormState(){this.formState={},localStorage.removeItem("vaktberegnerFormState")},setupFormStateListeners(){["startHour","startMinute","endHour","endMinute"].forEach(t=>{const s=document.getElementById(t);s&&s.addEventListener("change",()=>{this.saveFormState()})})},async switchSettingsTab(e){const t=document.getElementById("settingsModal");if(!t)return;const s=t.querySelector(".tab-nav .tab-btn.active");if((s?.dataset?.tab||(s?.textContent?.trim()==="Lønn"?"wage":s?.textContent?.trim()==="UI"?"interface":s?.textContent?.trim()==="Bedrift"?"org":s?.textContent?.trim()==="Data"?"data":null))==="wage"&&!this.usePreset&&e!=="wage"&&await this.saveCustomBonusesSilent(),t.querySelectorAll(".tab-nav .tab-btn").forEach(i=>{const r=i.dataset?.tab||(i.textContent?.trim()==="Lønn"?"wage":i.textContent?.trim()==="UI"?"interface":i.textContent?.trim()==="Bedrift"?"org":i.textContent?.trim()==="Data"?"data":"");i.classList.toggle("active",r===e)}),["wageTab","interfaceTab","orgTab","dataTab"].forEach(i=>{const r=document.getElementById(i);r&&r.classList.toggle("active",i===`${e}Tab`)}),e==="wage"&&!this.usePreset&&setTimeout(()=>this.populateCustomBonusSlots(),100),e==="data"&&setTimeout(()=>this.setupExportPeriodOptions(),100),e==="org"){const i=document.getElementById("breakPolicySelect");i&&this.orgSettings?.break_policy&&(i.value=this.orgSettings.break_policy),i&&!i._immediateSaveBound&&(i.addEventListener("change",async()=>{await this.saveOrgSettings()}),i._immediateSaveBound=!0);const r=document.getElementById("orgIsWageCaregiverToggle");if(r){r.checked=!!this.isWageCaregiver,r.disabled=!1,r.onchange=()=>this.onOrgWageCaregiverToggle();const c=document.querySelector("#orgIsWageCaregiverToggle + .toggle-slider");c&&(c.style.cursor="pointer",c.onclick=l=>{l.preventDefault(),r.checked=!r.checked,this.onOrgWageCaregiverToggle()})}this.updateOrgSettingsUI()}},switchSettingsTabSync(e){this.switchSettingsTab(e).catch(console.error)},async togglePreset(){const e=!this.usePreset;this.usePreset=document.getElementById("usePresetToggle").checked,e&&this.usePreset&&await this.saveCustomBonusesSilent(),this.togglePresetSections(),this.saveSettingsToSupabase(),this.updateDisplay()},toggleTaxDeduction(){const e=document.getElementById("taxDeductionToggle");this.taxDeductionEnabled=e.checked,this.toggleTaxPercentageSection(),this.saveSettingsToSupabase(),this.updateDisplay()},toggleTaxPercentageSection(){const e=document.getElementById("taxPercentageSection");e?this.taxDeductionEnabled?e.style.display="block":e.style.display="none":console.log("Tax percentage section element not found - modal may not be loaded yet")},updateTaxPercentage(e){const t=parseFloat(e)||0;t<0?this.taxPercentage=0:t>100?this.taxPercentage=100:this.taxPercentage=t;const s=document.getElementById("taxPercentageInput");s&&(s.value=this.taxPercentage),this.saveSettingsToSupabase(),this.updateDisplay()},updateTaxDeductionUI(){const e=document.getElementById("taxDeductionToggle"),t=document.getElementById("taxPercentageInput"),s=document.getElementById("taxPercentageSection");if(e&&(e.checked=this.taxDeductionEnabled),t&&(t.value=this.taxPercentage,console.log("Set input to:",this.taxPercentage)),s){const o=this.taxDeductionEnabled;s.style.display=o?"block":"none",console.log("Set section visibility to:",o?"visible":"hidden")}},updatePayrollDay(e){const t=parseInt(e);isNaN(t)||t<1||t>31?(console.warn("Invalid payroll day:",e,"Using default value 15"),this.payrollDay=15):this.payrollDay=t;const s=document.getElementById("payrollDayInput");s&&(s.value=this.payrollDay),this.saveSettingsToSupabase(),this.updateDisplay()},getNextPayrollDate(){const e=new Date,t=e.getFullYear(),s=e.getMonth();e.getDate();let o=new Date(t,s,this.payrollDay);o<=e&&(o=new Date(t,s+1,this.payrollDay));const n=o.getMonth(),a=new Date(o.getFullYear(),n+1,0).getDate();this.payrollDay>a&&o.setDate(a);const i=o.getDay();return i===0?o.setDate(o.getDate()-2):i===6&&o.setDate(o.getDate()-1),o},getLastPayrollDate(e){const t=new Date(e);t.setMonth(t.getMonth()-1);const s=t.getMonth(),o=new Date(t.getFullYear(),s+1,0).getDate();this.payrollDay>o&&t.setDate(o);const n=t.getDay();return n===0?t.setDate(t.getDate()-2):n===6&&t.setDate(t.getDate()-1),t},getPayrollDateForMonth(e,t){let s=new Date(t,e-1,this.payrollDay);const o=s.getMonth(),n=new Date(s.getFullYear(),o+1,0).getDate();this.payrollDay>n&&s.setDate(n);const a=s.getDay();return a===0?s.setDate(s.getDate()-2):a===6&&s.setDate(s.getDate()-1),s},populateCustomBonusSlots(){["weekday","saturday","sunday"].forEach(t=>{const s=document.getElementById(`${t}BonusSlots`);if(!s){console.error(`Container ${t}BonusSlots not found`);return}s.innerHTML="",(this.customBonuses&&this.customBonuses[t]||[]).forEach(n=>{const a=document.createElement("div");a.className="bonus-slot",a.innerHTML=`
                    <input type="time" class="form-control" value="${n.from}">
                    <input type="time" class="form-control" value="${n.to}">
                    <input type="number" class="form-control" placeholder="kr/t" value="${n.rate}">
                    <button class="btn btn-icon btn-danger remove-bonus" title="Fjern dette tillegget">×</button>
                `,a.querySelectorAll("input").forEach(c=>{c.addEventListener("change",()=>{this.autoSaveCustomBonuses()})});const r=a.querySelector(".remove-bonus");r&&r.addEventListener("click",c=>{c.stopPropagation(),this.removeBonusSlot(r)}),s.appendChild(a)})})},addBonusSlot(e){const t=document.getElementById(`${e}BonusSlots`);if(!t){console.error(`Container ${e}BonusSlots not found`);return}const s=document.createElement("div");s.className="bonus-slot",s.innerHTML=`
            <div class="time-input-group">
                <label class="time-label">Fra:</label>
                <input type="time" class="form-control" placeholder="--:--" title="Angi starttid (timer:minutter)">
            </div>
            <div class="time-input-group">
                <label class="time-label">Til:</label>
                <input type="time" class="form-control" placeholder="--:--" title="Angi sluttid (timer:minutter)">
            </div>
            <div class="rate-input-group">
                <input type="number" class="form-control" placeholder="kr/t" title="Angi tilleggssats i kroner per time">
            </div>
            <button class="btn btn-icon btn-danger remove-bonus" title="Fjern dette tillegget">×</button>
        `,s.querySelectorAll("input").forEach(a=>{a.addEventListener("change",()=>{this.autoSaveCustomBonuses()})});const n=s.querySelector(".remove-bonus");n&&n.addEventListener("click",a=>{a.stopPropagation(),this.removeBonusSlot(n)}),t.appendChild(s)},removeBonusSlot(e){e.closest(".bonus-slot").remove(),this.usePreset||this.saveCustomBonusesSilent().catch(console.error)},autoSaveCustomBonuses(){this.usePreset||(this.autoSaveTimeout&&(clearTimeout(this.autoSaveTimeout),this.autoSaveTimeout=null),this.autoSaveTimeout=setTimeout(()=>{this.saveCustomBonusesSilent().catch(console.error),this.autoSaveTimeout=null},5e3))},showSaveStatus(e){let t=document.getElementById("bonus-save-status");t||(t=document.createElement("div"),t.id="bonus-save-status",t.style.cssText=`
                position: fixed;
                top: 20px;
                right: 20px;
                background: var(--bg-primary);
                border: 1px solid var(--border);
                border-radius: 8px;
                padding: 12px 16px;
                font-size: 14px;
                font-weight: 500;
                z-index: 10000;
                box-shadow: 0 4px 12px var(--shadow-blue);
                transition: all 0.3s var(--ease-default);
                opacity: 0;
                transform: translateX(100%);
            `,document.body.appendChild(t)),t.textContent=e,t.style.opacity="1",t.style.transform="translateX(0)",setTimeout(()=>{t.style.opacity="0",t.style.transform="translateX(100%)"},3e3)},async openSettings(){this.closeShiftDetails(),this.closeProfileDropdown(),this.closeProfile();const e=document.querySelector(".floating-action-bar"),t=document.querySelector(".floating-action-bar-backdrop");e&&(e.style.display="none"),t&&(t.style.display="none");const s=document.getElementById("settingsModal");s&&(this.updateSettingsUI(),this.switchSettingsTabSync("wage"),setTimeout(()=>{this.updateTaxDeductionUI()},50),s.style.display="flex",this.usePreset||setTimeout(()=>{this.populateCustomBonusSlots()},100))},async openPaydateSettings(){this.closeShiftDetails(),this.closeProfileDropdown(),this.closeProfile();const e=document.querySelector(".floating-action-bar"),t=document.querySelector(".floating-action-bar-backdrop");e&&(e.style.display="none"),t&&(t.style.display="none");const s=document.getElementById("settingsModal");s&&(this.updateSettingsUI(),this.switchSettingsTabSync("wage"),setTimeout(()=>{this.updateTaxDeductionUI()},50),s.style.display="flex",this.usePreset||setTimeout(()=>{this.populateCustomBonusSlots()},100),setTimeout(()=>{const o=document.getElementById("payrollDayInput");o&&(o.scrollIntoView({behavior:"smooth",block:"center"}),setTimeout(()=>{o.focus(),o.select()},300))},150))},async closeSettings(e=!0){const t=document.getElementById("settingsModal");t&&t.style.display!=="none"&&e&&(this.usePreset||await this.saveCustomBonusesSilent(),this.saveSettingsToSupabase()),t&&(t.style.display="none");const o=document.querySelector(".floating-action-bar"),n=document.querySelector(".floating-action-bar-backdrop");o&&(o.style.display=""),n&&(n.style.display=""),this.closeProfileDropdown()},toggleDashboardView(){const e=document.getElementById("dashboardToggleBtn");if(!e)return;this.dashboardView=this.dashboardView==="default"?"stats":"default",e.classList.toggle("active",this.dashboardView==="stats");const t=e.querySelector(".toggle-text");t&&(t.textContent=this.dashboardView==="stats"?"Std.":"Stat."),e.setAttribute("aria-label",this.dashboardView==="stats"?"Bytt til standardvisning":"Bytt til statistikkvisning"),this.applyDashboardView(),localStorage.setItem("dashboardView",this.dashboardView)},applyDashboardView(){const e=document.body,t=document.querySelector(".dashboard-content"),s=document.querySelector(".statistics-section"),o=document.getElementById("weeklyHoursChart");if(this.dashboardView==="stats"){e.classList.add("stats-view"),console.log("Body classes after adding stats-view:",e.className);const n=document.querySelector(".total-card"),a=document.querySelector(".next-shift-card"),i=document.querySelector(".next-payroll-card");if(n&&(n.style.display="none",console.log("Manually hid total card")),a&&(a.style.display="none",console.log("Manually hid next shift card")),i&&(i.style.display="none",console.log("Manually hid next payroll card")),o&&t&&!t.contains(o)){const r=document.createElement("div");r.className="dashboard-stats-container",r.style.order="1",r.appendChild(o),t.appendChild(r)}console.log("Applied stats view - stats card replaces dashboard content")}else{e.classList.remove("stats-view");const n=document.querySelector(".total-card"),a=document.querySelector(".next-shift-card"),i=document.querySelector(".next-payroll-card");if(n&&(n.style.display="",console.log("Showed total card")),a&&(a.style.display="",console.log("Showed next shift card")),i&&(i.style.display="",console.log("Showed next payroll card")),o&&s){const r=s.querySelector(".statistics-content"),c=document.querySelector(".dashboard-stats-container");c&&r&&(r.appendChild(o),c.remove())}console.log("Applied default view - stats card moved back to statistics section")}},toggleProfileDropdown(){const e=document.getElementById("profileDropdown");if(!e)return;e.classList.contains("show")?this.closeProfileDropdown():this.openProfileDropdown()},openProfileDropdown(){const e=document.getElementById("profileDropdown");e&&(this.closeShiftDetails(),e.style.display="block",e.offsetHeight,e.classList.add("show"),setTimeout(()=>{document.addEventListener("click",this.handleClickOutside.bind(this)),document.addEventListener("keydown",this.handleDropdownKeydown.bind(this))},0))},closeProfileDropdown(){const e=document.getElementById("profileDropdown");e&&(e.classList.remove("show"),setTimeout(()=>{e.classList.contains("show")||(e.style.display="none")},200),document.removeEventListener("click",this.handleClickOutside.bind(this)),document.removeEventListener("keydown",this.handleDropdownKeydown.bind(this)))},handleClickOutside(e){const t=document.getElementById("profileDropdown"),s=document.querySelector(".user-profile-btn");!t||!s||!t.contains(e.target)&&!s.contains(e.target)&&this.closeProfileDropdown()},handleDropdownKeydown(e){const t=document.getElementById("profileDropdown");if(!(!t||!t.classList.contains("show"))&&e.key==="Escape"){this.closeProfileDropdown();const s=document.querySelector(".user-profile-btn");s&&s.focus()}},openProfile(){this.closeProfileDropdown(),this.closeSettings(!1),this.closeShiftDetails();const e=document.querySelector(".floating-action-bar"),t=document.querySelector(".floating-action-bar-backdrop");e&&(e.style.display="none"),t&&(t.style.display="none");const s=document.getElementById("profileModal");if(s){this.loadProfileData(),this.initProfileAvatarControls(),s.style.display="flex",s.classList.add("active");const o=a=>{a.key==="Escape"&&this.closeProfile()};document.addEventListener("keydown",o),s.keydownHandler=o;const n=a=>{a.target===s&&this.closeProfile()};s.addEventListener("click",n),s.clickOutsideHandler=n}},closeProfile(){const e=document.getElementById("profileModal");if(e){e.style.display="none",e.classList.remove("active"),e.keydownHandler&&(document.removeEventListener("keydown",e.keydownHandler),e.keydownHandler=null),e.clickOutsideHandler&&(e.removeEventListener("click",e.clickOutsideHandler),e.clickOutsideHandler=null);const t=document.querySelector(".floating-action-bar"),s=document.querySelector(".floating-action-bar-backdrop");t&&(t.style.display=""),s&&(s.style.display="")}},closeStatDetails(){const e=document.querySelector(".stat-detail-modal"),t=document.querySelector(".stat-expanded"),s=document.querySelector(".stat-backdrop");e&&(e.style.display="none",e.remove()),t&&t.classList.remove("expanded"),s&&s.remove(),this.statDetailsKeydownHandler&&(document.removeEventListener("keydown",this.statDetailsKeydownHandler),this.statDetailsKeydownHandler=null)},handleLogout(){this.closeProfileDropdown(),window.chatbox&&window.chatbox.clear&&window.chatbox.clear(),typeof window.logout=="function"&&window.logout()},async loadUserNickname(){try{const{data:{user:e}}=await window.supa.auth.getUser();if(!e)return;const t=document.getElementById("userNickname");if(t){const s=e.user_metadata?.first_name||e.email?.split("@")[0]||"Bruker";t.textContent=s}window.chatbox&&window.chatbox.updatePlaceholder&&window.chatbox.updatePlaceholder()}catch(e){console.error("Error loading user nickname:",e);const t=document.getElementById("userNickname");t&&(t.textContent="Bruker"),window.chatbox&&window.chatbox.updatePlaceholder&&window.chatbox.updatePlaceholder()}},saveToLocalStorage(){try{const e={usePreset:this.usePreset,customWage:this.customWage,currentWageLevel:this.currentWageLevel,customBonuses:this.customBonuses,pauseDeduction:this.pauseDeduction,pauseDeductionEnabled:this.pauseDeductionEnabled,pauseDeductionMethod:this.pauseDeductionMethod,pauseThresholdHours:this.pauseThresholdHours,pauseDeductionMinutes:this.pauseDeductionMinutes,auditBreakCalculations:this.auditBreakCalculations,fullMinuteRange:this.fullMinuteRange,directTimeInput:this.directTimeInput,hasSeenRecurringIntro:this.hasSeenRecurringIntro,currencyFormat:this.currencyFormat,defaultShiftsView:this.defaultShiftsView,taxDeductionEnabled:this.taxDeductionEnabled,taxPercentage:this.taxPercentage,isWageCaregiver:this.isWageCaregiver};localStorage.setItem("lønnsberegnerSettings",JSON.stringify(e))}catch(e){console.error("Error saving to localStorage",e)}},getCurrentWageRate(){return this.usePreset?this.PRESET_WAGE_RATES[this.currentWageLevel]:this.customWage},getWageRateForShift(e){const t=Number(e?.hourly_wage_snapshot);return!Number.isNaN(t)&&t>0?t:this.getCurrentWageRate()},getCurrentBonuses(){if(this.usePreset)return this.PRESET_BONUSES;{const e=this.customBonuses||{};return{weekday:e.weekday||[],saturday:e.saturday||[],sunday:e.sunday||[]}}},refreshUI(e){console.log("Refreshing all UI components after shift changes"),this.showUIRefreshLoading(),setTimeout(()=>{try{this.renderShiftTable(e),this.updateWeekCards(e),this.updatePayrollCard(e),this.updateStats(),this.updateWeeklyHoursChart(),this.updateShiftCalendar(),this.updateNextShiftCard(),this.populateDateGrid(),this.updateHeader(),this.startNextShiftTimer(),console.log("UI refresh completed successfully")}catch(t){console.error("Error during UI refresh:",t)}finally{this.hideUIRefreshLoading()}},50)},updateDisplay(e=!1){this.updateHeader(),this.updateNextShiftCard(),this.updateNextPayrollCard(),this.updateStats(e),this.updateWeeklyHoursChart(),this.updateShiftList(),this.updateShiftCalendar(),this.populateDateGrid(),this.startNextShiftTimer(),this.currentView==="employees"&&(this.fetchAndDisplayEmployeeShifts?.(),this.renderEmployeeWorkSummary?.()),this.currentView==="stats"&&this.renderCurrentUserWorkSummary?.()},showUIRefreshLoading(){const e=document.querySelector(".dashboard-content"),t=document.querySelector(".statistics-content");if(e&&!e.querySelector(".refresh-loading-overlay")){const s=this.createLoadingOverlay("Oppdaterer...");s.classList.add("refresh-loading-overlay"),e.appendChild(s)}if(t&&!t.querySelector(".refresh-loading-overlay")){const s=this.createLoadingOverlay("Oppdaterer...");s.classList.add("refresh-loading-overlay"),t.appendChild(s)}},hideUIRefreshLoading(){document.querySelectorAll(".refresh-loading-overlay").forEach(t=>t.remove())},createLoadingOverlay(e="Laster..."){const t=document.createElement("div");t.className="loading-overlay",t.style.cssText=`
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(4px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            border-radius: inherit;
        `;const s=document.createElement("div");s.className="loading-spinner",s.style.cssText=`
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
        `;const o=document.createElement("div");o.style.cssText=`
            width: 24px;
            height: 24px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        `;const n=document.createElement("span");return n.textContent=e,s.appendChild(o),s.appendChild(n),t.appendChild(s),t},renderShiftTable(e){this.updateShiftList()},updateWeekCards(e){const t=this.shifts.filter(o=>o.date.getMonth()===this.currentMonth-1&&o.date.getFullYear()===this.currentYear),s={};t.forEach(o=>{const n=this.getISOWeekNumber(o.date);s[n]||(s[n]={hours:0,earnings:0,shifts:[]});const a=this.calculateShift(o);s[n].hours+=a.hours,s[n].earnings+=a.total,s[n].shifts.push(o)}),this.updateWeeklyHoursChart(),console.log("Week cards updated with data for",Object.keys(s).length,"weeks")},updatePayrollCard(e){this.updateNextPayrollCard(),console.log("Payroll card updated via existing updateNextPayrollCard function")},updateHeader(){const e=this.MONTHS[this.currentMonth-1].charAt(0).toUpperCase()+this.MONTHS[this.currentMonth-1].slice(1);document.getElementById("currentMonth").textContent=`${e} ${this.currentYear}`;const t=document.getElementById("currentMonthDashboard");t&&(t.textContent=`${e} ${this.currentYear}`);const s=document.getElementById("monthNavDisplayNav");s&&(s.textContent=`${e} ${this.currentYear}`);const o=document.querySelector(".total-label");if(o){const n=new Date;this.currentMonth===n.getMonth()+1&&this.currentYear===n.getFullYear()?o.textContent="Brutto":o.textContent=`Brutto (${e.toLowerCase()})`}this.updateCurrentMonthLabel()},updateStats(e=!1){if(this.isInDrillDownMode()){this.updateDrillDownStats(e);return}let t=0,s=0,o=0;const n=this.shifts.filter(y=>y.date.getMonth()===this.currentMonth-1&&y.date.getFullYear()===this.currentYear);n.forEach(y=>{const f=this.calculateShift(y);t+=f.hours,s+=f.baseWage,o+=f.bonus});const a=s+o,i=this.taxDeductionEnabled?a*(1-this.taxPercentage/100):a,r=document.getElementById("totalAmount"),c=document.getElementById("totalHours");r&&(r.textContent=this.formatCurrency(i)),c&&(c.textContent=t.toFixed(1));const l=document.getElementById("shiftCount");l&&(l.textContent=n.length);const d=document.querySelector(".shifts-count-label");d&&(d.textContent="vakter");const u=document.getElementById("totalSecondaryInfo");u&&(this.taxDeductionEnabled?u.innerHTML=`
                    <div class="secondary-info-content">
                        <span class="bonus-amount">${this.formatCurrency(a)}</span>
                        <span class="before-tax-text">før skatt</span>
                    </div>
                `:u.innerHTML=`
                    <div class="secondary-info-content">
                        <span class="bonus-amount">${this.formatCurrency(o)}</span>
                        <span class="before-tax-text">i tillegg</span>
                    </div>
                `);const h=document.getElementById("headerShiftCount");h&&(h.textContent=n.length),this.updateLastUpdatedTime();const v=document.querySelector(".total-label");if(v){const y=this.taxDeductionEnabled?"Netto":"Brutto",f=this.currentMonth===1?12:this.currentMonth-1,D=this.currentMonth===1?this.currentYear-1:this.currentYear,S=this.shifts.filter(k=>k.date.getMonth()===f-1&&k.date.getFullYear()===D);let p=0;S.forEach(k=>{p+=this.calculateShift(k).total});const g=this.taxDeductionEnabled?p*(1-this.taxPercentage/100):p;let E=0;if(g>0&&(E=(i-g)/g*100),Math.abs(E)>.1){const k=E>=0?"▲":"▼",w=this.MONTHS[f-1];v.textContent=`${y} ${k} ${Math.abs(E).toFixed(1)}% vs. ${w}`}else v.textContent=y}const m=z();Q(i,m,e)},updateDrillDownStats(e=!1){const{totalCurrentMonthHours:t,totalCurrentMonthEarnings:s,totalWeekHours:o,totalWeekEarnings:n}=this.getDailyDataForWeek(this.selectedWeek),a=o>t||n>s,i=this.shifts.filter(y=>y.date.getMonth()===this.currentMonth-1&&y.date.getFullYear()===this.currentYear);let r=0;i.forEach(y=>{const f=this.calculateShift(y);r+=f.hours}),document.getElementById("totalHours").textContent=t.toFixed(2);const c=document.querySelector(".chart-hours-value-card");if(c)if(a){const y=o-t,f=`Kun timer for ${this.MONTHS[this.currentMonth-1]} er med i utregningen. Ekskludert: ${y.toFixed(1)} timer fra andre måneder.`;c.classList.add("has-tooltip"),c.setAttribute("data-tooltip",f),this.setupWageCardTooltip(c)}else c.classList.remove("has-tooltip"),c.removeAttribute("data-tooltip"),this.removeWageCardTooltip(c);const l=document.getElementById("shiftCount"),d=document.querySelector(".shifts-count-label"),u=document.querySelector(".chart-shifts-count-card");if(l&&d&&u){const y=this.taxDeductionEnabled?s*(1-this.taxPercentage/100):s;if(l.textContent=this.formatCurrency(y).replace(" kr",""),d.textContent="kroner",a){const f=o-t,D=n-s,S=this.taxDeductionEnabled?D*(1-this.taxPercentage/100):D,p=`Kun vakter for ${this.MONTHS[this.currentMonth-1]} er med i utregningen. Ekskludert: ${f.toFixed(1)} timer (${this.formatCurrency(S)}) fra andre måneder.`;u.classList.add("has-tooltip"),u.setAttribute("data-tooltip",p),this.setupWageCardTooltip(u)}else u.classList.remove("has-tooltip"),u.removeAttribute("data-tooltip"),this.removeWageCardTooltip(u)}const h=r>0?t/r*100:0,v=document.querySelector(".chart-progress-label");if(v){const y=h<10?h.toFixed(1):Math.round(h);v.textContent=`${y}% av ${r.toFixed(1)} timer`}const m=document.querySelector(".chart-progress-fill");if(m){const y=Math.min(h,100);e?requestAnimationFrame(()=>{m.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)",m.style.width=y+"%"}):(m.style.transition="none",m.style.width=y+"%",m.offsetHeight,m.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)"),h>=100?m.classList.add("full"):m.classList.remove("full"),h>0?m.classList.add("active"):m.classList.remove("active")}},setupWageCardTooltip(e){if(!e||e.hasTooltipListener)return;const t=document.getElementById("wageCardTooltip");if(!t)return;const s=n=>{const a=e.getAttribute("data-tooltip");if(!a)return;const i=document.getElementById("wageTooltipContent");i&&(i.textContent=a);const r=e.getBoundingClientRect(),c=window.innerWidth,l=window.innerHeight,d=document.querySelector(".chart-stats-section")||document.querySelector(".chart-hours-section")||e.closest(".weekly-hours-chart-card"),u=d?d.getBoundingClientRect():r,v=c>768?Math.min(240,u.width-32):Math.min(280,c-32),m=70,y=12,f=document.querySelector(".chart-hours-value-card"),D=document.querySelector(".chart-shifts-count-card");let S=r.left+r.width/2-v/2,p;if(f&&D){const I=f.getBoundingClientRect(),L=D.getBoundingClientRect().top-I.bottom,M=I.bottom+L/2-m/2;L>=m+y*2?p=M:p=I.bottom+y}else p=r.top-m-y;const g=u.left+y,E=u.right-y;S<g?S=g:S+v>E&&(S=E-v),p<y&&(p=y),p+m>l-y&&(p=l-m-y);const k=document.querySelector(".back-button");if(k){const I=k.getBoundingClientRect();p+m>I.top-y&&(p=I.top-m-y,p<y&&f&&(p=f.getBoundingClientRect().top-m-y,p<y&&(p=y)))}const b=t.parentElement.getBoundingClientRect(),C=S-b.left,T=p-b.top;t.style.left=`${C}px`,t.style.top=`${T}px`,t.classList.add("show"),e.classList.add("tooltip-active")},o=()=>{t.classList.remove("show"),e.classList.remove("tooltip-active")};e.addEventListener("click",n=>{n.stopPropagation(),e.classList.contains("tooltip-active")?o():(document.querySelectorAll(".chart-hours-value-card.tooltip-active, .chart-shifts-count-card.tooltip-active").forEach(a=>{a!==e&&a.classList.remove("tooltip-active")}),s())}),e.hasTooltipListener=!0,e.wageTooltipHideFunction=o,this.wageTooltipGlobalListener||(this.wageTooltipGlobalListener=n=>{const a=n.target.closest(".chart-hours-value-card, .chart-shifts-count-card"),i=n.target.closest(".wage-card-tooltip");a||i||document.querySelectorAll(".chart-hours-value-card.tooltip-active, .chart-shifts-count-card.tooltip-active").forEach(r=>{r.wageTooltipHideFunction&&r.wageTooltipHideFunction()})},document.addEventListener("click",this.wageTooltipGlobalListener))},removeWageCardTooltip(e){!e||!e.hasTooltipListener||(e.wageTooltipHideFunction&&e.wageTooltipHideFunction(),e.hasTooltipListener=!1,e.wageTooltipHideFunction=null)},updateWeeklyHoursChart(){const e=document.getElementById("chartBars"),t=document.getElementById("chartLabels"),s=document.getElementById("chartTooltip");if(!e||!t)return;if(this.isInDrillDownMode()){this.renderDailyChart(e,t,s);return}const o=this.shifts.filter(f=>f.date.getMonth()===this.currentMonth-1&&f.date.getFullYear()===this.currentYear),n={};let a=0;o.forEach(f=>{const D=this.getISOWeekNumber(f.date);n[D]||(n[D]={hours:0,earnings:0,shifts:[]});const S=this.calculateShift(f);n[D].hours+=S.hours,n[D].earnings+=S.total,n[D].shifts.push(f),a+=S.hours});const i=new Date(this.currentYear,this.currentMonth-1,1),r=new Date(this.currentYear,this.currentMonth,0),c=new Set;for(let f=new Date(i);f<=r;f.setDate(f.getDate()+1))c.add(this.getISOWeekNumber(f));const l=Array.from(c).sort((f,D)=>f-D);if(l.length===0){const f=new Date(this.currentYear,this.currentMonth-1,1),D=new Date(this.currentYear,this.currentMonth,0);for(let S=new Date(f);S<=D;S.setDate(S.getDate()+1)){const p=this.getISOWeekNumber(S);l.includes(p)||l.push(p)}l.sort((S,p)=>S-p)}const d=Math.max(...l.map(f=>n[f]?.hours||0),1),u=new Date,h=this.getISOWeekNumber(u),v=this.currentMonth===u.getMonth()+1&&this.currentYear===u.getFullYear(),m=l.reduce((f,D)=>{const S=n[D]?.hours||0,p=n[f]?.hours||0;return S>p?D:f},l[0]);this.removeBackButton(),this.clearAllTooltips(),e.innerHTML="",t.innerHTML="",e.style.setProperty("--total-weeks",l.length),t.style.setProperty("--total-weeks",l.length),e.offsetHeight;const y=()=>{s.classList.remove("show")};if(this.hideChartTooltip=y,l.forEach((f,D)=>{const S=n[f]||{hours:0,earnings:0},p=S.hours,g=S.earnings,E=d>0?p/d*100:0,k=a>0?p/a*100:0,w=document.createElement("div");w.className="chart-bar",p>0&&w.classList.add("has-data"),f===m&&p>0&&w.classList.add("highest"),v&&f===h?(w.classList.add("current-week"),w.setAttribute("aria-label",`Uke ${f} (Inneværende uke): ${p.toFixed(1)} timer, ${this.formatCurrency(g)}`)):w.setAttribute("aria-label",`Uke ${f}: ${p.toFixed(1)} timer, ${this.formatCurrency(g)}`);let b=136;window.innerWidth<=360?b=86:window.innerWidth<=480?b=102:window.innerWidth<=767?b=116:window.innerWidth>=768&&(b=150);const C=Math.max(2,E/100*b);w.style.setProperty("--bar-height",`${C}px`),w.setAttribute("data-week",f),w.setAttribute("data-hours",p.toFixed(1)),w.setAttribute("data-earnings",g.toFixed(0)),w.setAttribute("data-percentage",k.toFixed(1)),e.appendChild(w),requestAnimationFrame(()=>{w.style.animation="none",w.offsetHeight,w.style.animation="barGrowth 0.25s ease-out forwards"});const T=document.createElement("div");T.className="chart-bar-value";let I;if(p>0?window.innerWidth<=429?I=`${Math.round(p)}t`:I=`${p.toFixed(1)}t`:I="",T.textContent=I,w.appendChild(T),p>0){const L=this;w.addEventListener("click",M=>{M.stopPropagation(),y(),L.enterDrillDownMode(f)})}const x=document.createElement("div");x.className="chart-label",v&&f===h&&x.classList.add("current-week"),x.textContent=f.toString(),t.appendChild(x)}),d===0){const f=document.createElement("div");f.className="chart-empty-message",f.style.cssText=`
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                color: var(--text-secondary);
                font-size: 12px;
                font-weight: 500;
                opacity: 0.6;
                text-align: center;
                pointer-events: none;
            `,f.textContent="Ingen vakter registrert denne måneden",e.appendChild(f)}if(!this.chartTooltipGlobalListener){const f=this;this.chartTooltipGlobalListener=D=>{const S=document.querySelector(".chart-container"),p=D.target.closest(".chart-bar");D.target.closest(".chart-tooltip")||p||S&&!S.contains(D.target)&&f.hideChartTooltip&&f.hideChartTooltip()},document.addEventListener("click",this.chartTooltipGlobalListener)}},renderDailyChart(e,t,s){const{dailyData:o,totalWeekHours:n,totalWeekEarnings:a}=this.getDailyDataForWeek(this.selectedWeek);this.addBackButton();const i=this.getDaysWithShifts(this.selectedWeek);if(i.length===0){e.innerHTML='<div class="chart-empty-message" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: var(--text-secondary); font-size: 12px; font-weight: 500; opacity: 0.6; text-align: center; pointer-events: none;">Ingen vakter denne uken</div>',t.innerHTML="";return}e.innerHTML="",t.innerHTML="",this.clearAllTooltips(),e.style.setProperty("--total-weeks",i.length),t.style.setProperty("--total-weeks",i.length),e.offsetHeight;const r=Math.max(...i.map(m=>o[m]?.hours||0),1),c=new Date;this.currentMonth===c.getMonth()+1&&(this.currentYear,c.getFullYear());const{startDate:l,endDate:d}=this.getWeekDateRange(this.selectedWeek,this.currentYear),u=["S","M","T","O","T","F","L"];let h=null;const v=()=>{s.classList.remove("show"),h&&(h.classList.remove("tooltip-active"),h=null)};this.hideChartTooltip=v,i.forEach((m,y)=>{const f=o[m],D=f.hours,S=f.earnings,p=r>0?D/r*100:0,g=document.createElement("div");g.className="chart-bar",g.classList.add("has-data"),f.hasAdjacentMonthShifts&&!f.hasCurrentMonthShifts&&g.classList.add("adjacent-month");const E=new Date(l);m===0?E.setDate(l.getDate()+6):E.setDate(l.getDate()+(m-1));const k=E.getDate()===c.getDate()&&E.getMonth()===c.getMonth()&&E.getFullYear()===c.getFullYear();k?(g.classList.add("current-week"),g.setAttribute("aria-label",`${this.WEEKDAYS[m]} (I dag): ${D.toFixed(2)} timer, ${this.formatCurrency(S)}`)):g.setAttribute("aria-label",`${this.WEEKDAYS[m]}: ${D.toFixed(2)} timer, ${this.formatCurrency(S)}`);let w=136;window.innerWidth<=360?w=86:window.innerWidth<=480?w=102:window.innerWidth<=767?w=116:window.innerWidth>=768&&(w=150);const b=Math.max(2,p/100*w);g.style.setProperty("--bar-height",`${b}px`),g.setAttribute("data-day",m),g.setAttribute("data-hours",D.toFixed(1)),g.setAttribute("data-earnings",S.toFixed(0)),e.appendChild(g),requestAnimationFrame(()=>{g.style.animation="none",g.offsetHeight,g.style.animation="barGrowth 0.25s ease-out forwards"});const C=document.createElement("div");C.className="chart-bar-value";let T;window.innerWidth<=429?T=`${D.toFixed(2)}t`:T=`${D.toFixed(2)}t`,C.textContent=T,g.appendChild(C);const I=B=>{const H=g.querySelector(".chart-bar-value"),$=g.getBoundingClientRect(),_=s.parentElement.getBoundingClientRect(),P=document.getElementById("tooltipContent");if(P){const V=this.WEEKDAYS[m],j=f.date.toLocaleDateString("no-NO",{day:"numeric",month:"short"});P.innerHTML=`
                        <span class="chart-tooltip-line">${V} ${j}</span>
                        <span class="chart-tooltip-line">${D.toFixed(2).replace(".",",")}t</span>
                        <span class="chart-tooltip-line">${this.formatCurrency(S)}</span>
                    `}const R=140,U=80,W=6;let F=null;H&&(F=H.getBoundingClientRect());let O;F?O=F.left-_.left+F.width/2-R/2:O=$.left-_.left+$.width/2-R/2,O=Math.max(W,Math.min(O,_.width-R-W));let N;F?N=F.top-_.top-U-W:N=$.top-_.top-U-W,N<W&&(F?N=F.bottom-_.top+W:N=$.bottom-_.top+W),s.style.left=`${O}px`,s.style.top=`${N}px`,s.classList.add("show"),g.classList.add("tooltip-active"),h=g};let x=0,L=null;g.addEventListener("click",B=>{if(B.stopPropagation(),x++,x===1)L=setTimeout(()=>{g.classList.contains("tooltip-active")?v():(h&&h!==g&&h.classList.remove("tooltip-active"),I()),x=0},300);else if(x===2){clearTimeout(L),x=0,console.log("Double-click detected on daily chart bar for day:",m),v();const H=f.shifts;H&&H.length>0?(console.log("Opening shift details for shift ID:",H[0].id),this.showShiftDetails(H[0].id)):console.log("No shifts found for this day")}});const M=document.createElement("div");M.className="chart-label",k&&M.classList.add("current-week"),M.textContent=u[m],t.appendChild(M)})},updateShiftList(){this.shifts.forEach((i,r)=>{});const e=document.getElementById("shiftList"),t=this.shifts.filter(i=>i.date.getMonth()===this.currentMonth-1&&i.date.getFullYear()===this.currentYear);if(t.length===0){e.innerHTML=`
                <div class="empty-state">
                    <div class="empty-icon">
                        <svg class="icon-lg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                            <polyline points="14 2 14 8 20 8"></polyline>
                            <line x1="16" y1="13" x2="8" y2="13"></line>
                            <line x1="16" y1="17" x2="8" y2="17"></line>
                            <polyline points="10 9 9 9 8 9"></polyline>
                        </svg>
                    </div>
                    <p>Ingen vakter registrert ennå</p>
                </div>
            `;return}const s=t.sort((i,r)=>i.date-r.date),o={};s.forEach(i=>{const r=this.getISOWeekNumber(i.date);o[r]||(o[r]=[]),o[r].push(i)});const n=[];Object.keys(o).sort((i,r)=>i-r).forEach((i,r)=>{const c=o[i];let l=0;c.forEach(d=>{const u=this.calculateShift(d);l+=u.total}),n.push(`
                <div class="week-separator">
                    <div class="week-separator-line"></div>
                    <div class="week-separator-content">
                        <div class="week-separator-left">
                            <span class="week-separator-week">Uke ${i}</span>
                            <svg class="week-separator-arrow" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="6 9 12 15 18 9"></polyline>
                            </svg>
                        </div>
                        <div class="week-separator-right">
                            <svg class="week-separator-arrow" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="6 9 12 15 18 9"></polyline>
                            </svg>
                            <span class="week-separator-total">${this.formatCurrency(l)}</span>
                        </div>
                    </div>
                    <div class="week-separator-line"></div>
                </div>
            `),c.forEach(d=>{const u=this.calculateShift(d),h=d.date.getDate(),v=this.WEEKDAYS[d.date.getDay()],m=d.type===0?"weekday":d.type===1?"saturday":"sunday",y=d.seriesId?'<span class="series-badge">Serie</span>':"",D=this.shiftHasOverlaps(d)?`
                    <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                            <line x1="12" y1="9" x2="12" y2="13"></line>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                    </span>
                `:"",S=new Date,g=d.date.getDate()===S.getDate()&&d.date.getMonth()===S.getMonth()&&d.date.getFullYear()===S.getFullYear()?" current-date":"",E=d.employee?`
                    <span class="employee-chip" style="background-color: ${d.employee.display_color||"#6b7280"}">
                        <span class="employee-chip-color" style="background-color: ${d.employee.display_color||"#6b7280"}"></span>
                        <span class="employee-chip-name">${d.employee.name}</span>
                    </span>
                `:"";n.push(`
                    <div class="shift-item ${m}${g}" data-shift-id="${d.id}" style="cursor: pointer;">
                        <div class="shift-info">
                            <div class="shift-date">
                                <span class="shift-date-number">${h}. ${this.MONTHS[d.date.getMonth()]}</span>
                                <span class="shift-date-separator"></span>
                                <span class="shift-date-weekday">${v}${y}${D}</span>
                            </div>
                            <div class="shift-details">
                                <div class="shift-time-with-hours">
                                    <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <polyline points="12 6 12 12 16 14"></polyline>
                                    </svg>
                                    <span>${d.startTime} - ${d.endTime}</span>
                                    <span class="shift-time-arrow">→</span>
                                    <span>${this.formatHours(u.totalHours)}</span>
                                    ${E}
                                </div>
                            </div>
                        </div>
                        <div class="shift-amount-wrapper">
                            <div class="shift-total">${this.formatCurrency(u.total)}</div>
                            <div class="shift-breakdown">
                                ${this.formatCurrencyShort(u.baseWage)} + ${this.formatCurrencyShort(u.bonus)}
                            </div>
                        </div>
                    </div>
                `)})}),e.innerHTML=n.join("")},updateShiftCalendar(){if(this.shiftView!=="calendar")return;const e=this.getMonthShiftsKey();this.lastRenderedMonth!==this.currentMonth||this.lastRenderedYear!==this.currentYear||this.lastRenderedShiftsKey!==e?this.renderShiftCalendar():this.updateCalendarCells()},updateLastUpdatedTime(){const e=document.getElementById("lastUpdatedTime");if(e){const s=new Date().toLocaleTimeString("no-NO",{hour:"2-digit",minute:"2-digit"});e.textContent=s}},updateNextShiftCard(){const e=document.getElementById("nextShiftCard");if(!e)return;if(this.currentView==="employees"){e.style.display="none";return}const t=new Date,s=t.getMonth()+1,o=t.getFullYear();e.style.display="block";const n=document.getElementById("nextShiftContent");if(n&&!n.dataset.populated){const l=n.querySelector(".skeleton");l&&(l.style.display="block")}if(this.currentMonth!==s||this.currentYear!==o){this.displayBestShiftCard(),this.stopNextShiftTimer();return}const a=this.shifts.find(l=>{const d=new Date(l.date);if(d.toDateString()===t.toDateString()){const[u,h]=l.startTime.split(":").map(Number),[v,m]=l.endTime.split(":").map(Number),y=new Date(d);y.setHours(u,h,0,0);const f=new Date(d);return f.setHours(v,m,0,0),f<y&&f.setDate(f.getDate()+1),t>=y&&t<=f}return!1});if(a){this.displayCurrentShiftCard(a,t);return}const i=this.shifts.filter(l=>{const d=new Date(l.date);if(d>t)return!0;if(d.toDateString()===t.toDateString()){const[u,h]=l.startTime.split(":").map(Number),v=new Date(d);return v.setHours(u,h,0,0),v>t}return!1});i.sort((l,d)=>{const u=new Date(l.date),h=new Date(d.date);if(u.getTime()!==h.getTime())return u-h;const[v,m]=l.startTime.split(":").map(Number),[y,f]=d.startTime.split(":").map(Number);return v*60+m-(y*60+f)});const r=document.getElementById("nextShiftContent"),c=document.getElementById("nextShiftEmpty");if(i.length===0){const l=this.shifts.filter(d=>{const u=new Date(d.date);if(u<t)return!0;if(u.toDateString()===t.toDateString()){const[h,v]=d.endTime.split(":").map(Number),m=new Date(u);return m.setHours(h,v,0,0),h<parseInt(d.startTime.split(":")[0])&&m.setDate(m.getDate()+1),t>m}return!1});if(l.sort((d,u)=>{const h=new Date(d.date),v=new Date(u.date);if(h.getTime()!==v.getTime())return v-h;const[m,y]=d.endTime.split(":").map(Number),[f,D]=u.endTime.split(":").map(Number);return f*60+D-(m*60+y)}),l.length===0){r.style.display="none",c.style.display="flex";const d=c.querySelector(".empty-message");d&&(d.textContent="Ingen kommende vakter"),this.stopNextShiftTimer()}else{r.style.display="flex",c.style.display="none";const d=l[0],u=this.calculateShift(d),h=new Date(d.date),v=this.WEEKDAYS[h.getDay()],m=h.getDate(),y=this.MONTHS[h.getMonth()],f=d.seriesId?'<span class="series-badge">Serie</span>':"",D=this.getISOWeekNumber(t),S=this.getISOWeekNumber(h),p=D===S&&h.getFullYear()===t.getFullYear();let g;if(h.toDateString()===t.toDateString())g=`I dag${f}`;else{const b=new Date(t);b.setDate(t.getDate()+1),h.toDateString()===b.toDateString()?g=`I morgen${f}`:p?g=`${v.charAt(0).toUpperCase()+v.slice(1)}${f}`:g=`${m}. ${y}${f}`}const E=d.type===0?"weekday":d.type===1?"saturday":"sunday",w=this.shiftHasOverlaps(d)?`
                    <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                            <line x1="12" y1="9" x2="12" y2="13"></line>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                    </span>
                `:"";r.innerHTML=`
                    <div class="shift-item ${E}" data-shift-id="${d.id}" style="cursor: pointer; position: relative;">
                        <div class="next-shift-badge">Siste</div>
                        <div class="shift-info">
                            <div class="shift-date">
                                <span class="shift-date-weekday">${g}${w}</span>
                            </div>
                            <div class="shift-details">
                                <div class="shift-time-with-hours">
                                    <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <polyline points="12 6 12 12 16 14"></polyline>
                                    </svg>
                                    <span>${d.startTime} - ${d.endTime}</span>
                                    <span class="shift-time-arrow">→</span>
                                    <span>${this.formatHours(u.totalHours)}</span>
                                </div>
                            </div>
                        </div>
                        <div class="shift-amount-wrapper">
                            <div class="shift-total">${this.formatCurrency(u.total)}</div>
                            <div class="shift-breakdown">
                                ${this.formatCurrencyShort(u.baseWage)} + ${this.formatCurrencyShort(u.bonus)}
                            </div>
                        </div>
                    </div>
                `,this.stopNextShiftTimer()}}else{r.style.display="flex",c.style.display="none";const l=r.querySelector(".skeleton");l&&(l.style.display="none"),r.dataset.populated="1";const d=i[0],u=this.calculateShift(d),h=new Date(d.date),v=this.WEEKDAYS[h.getDay()],m=h.getDate(),y=this.MONTHS[h.getMonth()],f=new Date(t),D=new Date(t);D.setDate(t.getDate()+1);const S=d.type===0?"weekday":d.type===1?"saturday":"sunday",p=d.seriesId?'<span class="series-badge">Serie</span>':"",g=this.getISOWeekNumber(t),E=this.getISOWeekNumber(h),k=g===E&&h.getFullYear()===t.getFullYear();let w;h.toDateString()===f.toDateString()?w=`I dag${p}`:h.toDateString()===D.toDateString()?w=`I morgen${p}`:k?w=`${v.charAt(0).toUpperCase()+v.slice(1)}${p}`:w=`${m}. ${y}${p}`;let b="";if(h.toDateString()===f.toDateString()){const[M,B]=d.startTime.split(":").map(Number),H=new Date(h);H.setHours(M,B,0,0);const $=H-t,q=Math.floor($/(1e3*60*60)),_=Math.floor($%(1e3*60*60)/(1e3*60)),P=Math.floor($%(1e3*60)/1e3);q>0?b=` <span class="countdown-wrapper">(<span class="countdown-hours">${q}t</span> <span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-hours">${q}t</span> <span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span></span>`:_>0?b=` <span class="countdown-wrapper">(<span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span></span>`:P>0?b=` <span class="countdown-wrapper">(<span class="countdown-seconds">${P}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-seconds">${P}s</span></span>`:(b=' <span class="countdown-wrapper">(starter nå)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens">starter nå</span>',this.stopNextShiftTimer())}const T=this.shiftHasOverlaps(d)?`
                <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                        <line x1="12" y1="9" x2="12" y2="13"></line>
                        <line x1="12" y1="17" x2="12.01" y2="17"></line>
                    </svg>
                </span>
            `:"",I=h.toDateString()===f.toDateString(),x=h.toDateString()===D.toDateString(),L=I||x?" active":"";r.innerHTML=`
                <div class="shift-item ${S}${L}" data-shift-id="${d.id}" style="cursor: pointer; position: relative;">
                    <div class="next-shift-badge">Neste</div>
                    <div class="shift-info">
                        <div class="shift-date">
                            <span class="shift-date-weekday">${w}${T}</span>
                            <span class="shift-countdown-timer">  ${b}</span>
                        </div>
                        <div class="shift-details">
                            <div class="shift-time-with-hours">
                                <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <polyline points="12 6 12 12 16 14"></polyline>
                                </svg>
                                <span>${d.startTime} - ${d.endTime}</span>
                                <span class="shift-time-arrow">→</span>
                                <span>${this.formatHours(u.totalHours)}</span>
                            </div>
                        </div>
                    </div>
                    <div class="shift-amount-wrapper">
                        <div class="shift-total">${this.formatCurrency(u.total)}</div>
                        <div class="shift-breakdown">
                            ${this.formatCurrencyShort(u.baseWage)} + ${this.formatCurrencyShort(u.bonus)}
                        </div>
                    </div>
                </div>
            `}},displayCurrentShiftCard(e,t){const s=document.getElementById("nextShiftContent"),o=document.getElementById("nextShiftEmpty");s.style.display="flex",o.style.display="none";const n=this.calculateCurrentShiftEarnings(e,t),a=this.calculateShift(e),i=new Date(e.date),r=this.WEEKDAYS[i.getDay()],c=i.getDate(),l=this.MONTHS[i.getMonth()],d=this.getISOWeekNumber(t),u=this.getISOWeekNumber(i),h=d===u&&i.getFullYear()===t.getFullYear();let v;i.toDateString()===t.toDateString()?v="I dag":h?v=`${r.charAt(0).toUpperCase()+r.slice(1)}`:v=`${c}. ${l}`;const[m,y]=e.startTime.split(":").map(Number),[f,D]=e.endTime.split(":").map(Number),S=new Date(i);S.setHours(m,y,0,0);const p=new Date(i);p.setHours(f,D,0,0),p<S&&p.setDate(p.getDate()+1);const g=p-t,E=Math.floor(g/(1e3*60*60)),k=Math.floor(g%(1e3*60*60)/(1e3*60)),w=Math.floor(g%(1e3*60)/1e3);let b="";E>0?b=`<span class="countdown-wrapper">(<span class="countdown-hours">${E}t</span> <span class="countdown-minutes">${k}m</span> <span class="countdown-seconds">${w}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-hours">${E}t</span><span class="countdown-minutes">${k}m</span><span class="countdown-seconds">${w}s</span></span>`:k>0?b=`<span class="countdown-wrapper">(<span class="countdown-minutes">${k}m</span> <span class="countdown-seconds">${w}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-minutes">${k}m</span><span class="countdown-seconds">${w}s</span></span>`:w>0?b=`<span class="countdown-wrapper">(<span class="countdown-seconds">${w}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-seconds">${w}s</span></span>`:b='<span class="countdown-wrapper">(Ferdig)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens">Ferdig</span>';const C=e.type===0?"weekday":e.type===1?"saturday":"sunday",T=e.seriesId?'<span class="series-badge">Serie</span>':"",x=this.shiftHasOverlaps(e)?`
            <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                    <line x1="12" y1="9" x2="12" y2="13"></line>
                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
            </span>
        `:"";s.innerHTML=`
            <div class="shift-item ${C} active" data-shift-id="${e.id}" style="cursor: pointer; position: relative;">
                <div class="next-shift-badge">NÅ</div>
                <div class="shift-info">
                    <div class="shift-date">
                        <span class="shift-date-weekday">${v}${T}${x}</span>
                        <span class="shift-countdown-timer">  ${b}</span>
                    </div>
                    <div class="shift-details">
                        <div class="shift-time-with-hours">
                            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <polyline points="12 6 12 12 16 14"></polyline>
                            </svg>
                            <span>${e.startTime} - ${e.endTime}</span>
                            <span class="shift-time-arrow">→</span>
                            <span>${this.formatHours(a.totalHours)}</span>
                        </div>
                    </div>
                </div>
                <div class="shift-amount-wrapper">
                    <div class="shift-total">${this.formatCurrencyDetailed(n.totalEarned)}</div>
                    <div class="shift-breakdown">
                        ${this.formatCurrencyDetailed(n.baseEarned)} + ${this.formatCurrencyDetailed(n.bonusEarned)}
                    </div>
                </div>
            </div>
        `},calculateCurrentShiftEarnings(e,t){const s=new Date(e.date),[o,n]=e.startTime.split(":").map(Number),a=new Date(s);a.setHours(o,n,0,0);const r=(t-a)/(1e3*60*60),c=this.getWageRateForShift(e),d=typeof e?.hourly_wage_snapshot=="number"||!!e?.employee_id||!!e?.employee?this.PRESET_BONUSES:this.getCurrentBonuses(),u=e.type===0?"weekday":e.type===1?"saturday":"sunday",h=d[u]||[],v=r*c,m=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}`,y=this.calculateBonusWithSeconds(e.startTime,m,h);return{totalHours:r,baseEarned:v,bonusEarned:y,totalEarned:v+y}},startNextShiftTimer(){this.stopNextShiftTimer();const e=new Date,t=e.getMonth()+1,s=e.getFullYear();if(this.currentMonth===t&&this.currentYear===s){const o=new Date;this.shifts.filter(a=>{const i=new Date(a.date);if(i.toDateString()===o.toDateString()){const[r,c]=a.startTime.split(":").map(Number),[l,d]=a.endTime.split(":").map(Number),u=new Date(i);u.setHours(r,c,0,0);const h=new Date(i);return h.setHours(l,d,0,0),h<u&&h.setDate(h.getDate()+1),e>=u&&e<=h||u>e}return!1}).length>0&&(this.nextShiftTimer=setInterval(()=>{this.updateNextShiftCard()},1e3))}},stopNextShiftTimer(){this.nextShiftTimer&&(clearInterval(this.nextShiftTimer),this.nextShiftTimer=null)},displayBestShiftCard(){const e=document.getElementById("nextShiftContent"),t=document.getElementById("nextShiftEmpty");if(!e||!t)return;const s=this.shifts.filter(g=>g.date.getMonth()===this.currentMonth-1&&g.date.getFullYear()===this.currentYear);if(s.length===0){e.style.display="none",t.style.display="flex";const g=t.querySelector(".empty-message");g&&(g.textContent="Ingen vakter registrert");return}const o=s.map(g=>{const E=this.calculateShift(g);return{shift:g,earnings:E.total,calculation:E}});o.sort((g,E)=>{if(E.earnings!==g.earnings)return E.earnings-g.earnings;const k=new Date(g.shift.date),w=new Date(E.shift.date);if(k.getTime()!==w.getTime())return k-w;const[b,C]=g.shift.startTime.split(":").map(Number),[T,I]=E.shift.startTime.split(":").map(Number);return b*60+C-(T*60+I)});const n=o[0],a=n.shift,i=n.calculation;e.style.display="flex",t.style.display="none";const r=new Date(a.date),c=this.WEEKDAYS[r.getDay()],l=r.getDate(),d=this.MONTHS[r.getMonth()],u=new Date,h=this.getISOWeekNumber(u),v=this.getISOWeekNumber(r),m=h===v&&r.getFullYear()===u.getFullYear();let y;if(r.toDateString()===u.toDateString())y="I dag";else{const g=new Date(u);g.setDate(u.getDate()+1),r.toDateString()===g.toDateString()?y="I morgen":m?y=`${c.charAt(0).toUpperCase()+c.slice(1)}`:y=`${l}. ${d}`}const f=a.type===0?"weekday":a.type===1?"saturday":"sunday",D=a.seriesId?'<span class="series-badge">Serie</span>':"",p=this.shiftHasOverlaps(a)?`
            <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                    <line x1="12" y1="9" x2="12" y2="13"></line>
                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
            </span>
        `:"";e.innerHTML=`
            <div class="shift-item ${f}" data-shift-id="${a.id}" style="cursor: pointer; position: relative;">
                <div class="next-shift-badge">Beste</div>
                <div class="shift-info">
                    <div class="shift-date">
                        <span class="shift-date-weekday">${y}${D}${p}</span>
                    </div>
                    <div class="shift-details">
                        <div class="shift-time-with-hours">
                            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <polyline points="12 6 12 12 16 14"></polyline>
                            </svg>
                            <span>${a.startTime} - ${a.endTime}</span>
                            <span class="shift-time-arrow">→</span>
                            <span>${this.formatHours(i.totalHours)}</span>
                        </div>
                    </div>
                </div>
                <div class="shift-amount-wrapper">
                    <div class="shift-total">${this.formatCurrency(i.total)}</div>
                    <div class="shift-breakdown">
                        ${this.formatCurrencyShort(i.baseWage)} + ${this.formatCurrencyShort(i.bonus)}
                    </div>
                </div>
            </div>
        `},updateNextPayrollCard(){const e=document.getElementById("nextPayrollCard");if(!e)return;const t=document.getElementById("nextPayrollContent"),s=document.getElementById("nextPayrollEmpty");if(!t||!s)return;if(this.currentView==="employees"){e.style.display="none";return}const o=t.querySelector(".skeleton");if(o&&!t.dataset.populated&&(o.style.display="block"),t&&!t.dataset.populated){const B=t.querySelector(".skeleton");B&&(B.style.display="block")}const n=this.currentMonth,a=this.currentYear,i=new Date,r=i.getMonth()+1,c=i.getFullYear(),l=n===r&&a===c;let d,u=n;l?(d=this.getNextPayrollDate(),u=d.getMonth()+1,d.getFullYear()):d=this.getPayrollDateForMonth(n,a);let h=n-1,v=a;h<1&&(h=12,v=a-1);let m=h,y=v;l&&u!==n&&(m=n,y=a);const f=this.shifts.filter(B=>B.date.getMonth()===m-1&&B.date.getFullYear()===y);if(f.length===0){t.style.display="none",s.style.display="flex";return}let D=0,S=0,p=0;f.forEach(B=>{const H=this.calculateShift(B);D+=H.total,S+=H.baseWage,p+=H.bonus});const g=this.taxDeductionEnabled?D*(1-this.taxPercentage/100):D,k=`Opptjent i ${this.MONTHS[m-1]}`,w=d.getDate(),b=this.MONTHS[d.getMonth()],C=`${w}. ${b}`;let T;if(l){const B=Math.ceil((d-i)/864e5);B===0?T="I dag":B===1?T="I morgen":T=`Om ${B} dager`}else T=C;const x=!(d<i)&&l&&Math.ceil((d-i)/(1e3*60*60*24))<=7?" active":"";t.style.display="flex",s.style.display="none";const L=t.querySelector(".skeleton");L&&(L.style.display="none"),t.dataset.populated="1",t.innerHTML=`
            <div class="payroll-item${x}" style="cursor: pointer; position: relative;">
                <div class="next-payroll-badge">Lønn</div>
                <div class="shift-info">
                    <div class="shift-date">
                        <span class="shift-countdown-timer">${k}</span>
                    </div>
                    <div class="shift-details">
                        <div class="shift-time-with-hours">
                            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <path d="M12 6v6l4 2"></path>
                            </svg>
                            <span>${T}</span>
                        </div>
                    </div>
                </div>
                <div class="shift-amount-wrapper">
                    <div class="shift-total">${this.formatCurrency(g)}</div>
                    <div class="shift-breakdown">
                        ${this.taxDeductionEnabled?`${this.formatCurrencyShort(D)} - ${this.formatCurrencyShort(D-g)}`:`${this.formatCurrencyShort(S)} + ${this.formatCurrencyShort(p)}`}
                    </div>
                </div>
            </div>
        `;const M=t.querySelector(".payroll-item");M&&M.addEventListener("click",B=>{B.stopPropagation(),this.openPaydateSettings()})},cleanup(){this.stopNextShiftTimer(),this.monthNavigationTimeout&&(clearTimeout(this.monthNavigationTimeout),this.monthNavigationTimeout=null),this.chartTooltipGlobalListener&&(document.removeEventListener("click",this.chartTooltipGlobalListener),this.chartTooltipGlobalListener=null),this.wageTooltipGlobalListener&&(document.removeEventListener("click",this.wageTooltipGlobalListener),this.wageTooltipGlobalListener=null)},getPerformanceStats(){return{monthNavigationActive:!!this.monthNavigationTimeout,currentMonth:this.currentMonth,currentYear:this.currentYear}},renderShiftCalendar(){const e=document.getElementById("shiftCalendar");if(!e)return;const t=this.currentYear,s=this.currentMonth-1,o=new Date(t,s,1),n=new Date(t,s+1,0),a=new Date(o),i=o.getDay()===0?6:o.getDay()-1;a.setDate(a.getDate()-i),e.innerHTML="";const r=document.createElement("div");r.className="calendar-header",["M","T","O","T","F","L","S"].forEach(v=>{const m=document.createElement("div");m.textContent=v,m.className="calendar-day-header",r.appendChild(m)}),e.appendChild(r);const c=this.shifts.filter(v=>v.date.getMonth()===s&&v.date.getFullYear()===t),l={};c.forEach(v=>{const m=v.date.getDate();l[m]||(l[m]=[]),l[m].push(v)});const d=new Date(n),u=Math.ceil((d.getTime()-a.getTime())/(1e3*60*60*24))+1,h=Math.ceil(u/7);for(let v=0;v<h;v++){const m=new Date(a);m.setDate(a.getDate()+v*7);const y=this.getISOWeekNumber(m),f=document.createElement("div");f.className="week-separator";const D=document.createElement("div");D.className="week-number-on-separator",D.textContent=y,f.appendChild(D),e.appendChild(f);const S=document.createElement("div");S.className="calendar-grid";for(let p=0;p<7;p++){const g=new Date(a);g.setDate(a.getDate()+v*7+p);const E=document.createElement("div");E.className="calendar-cell";const k=`${g.getFullYear()}-${String(g.getMonth()+1).padStart(2,"0")}-${String(g.getDate()).padStart(2,"0")}`;E.setAttribute("data-date",k),g.getMonth()!==s&&E.classList.add("other-month"),this.calendarDisplayMode==="hours"&&E.classList.add("hours-mode");const w=new Date;g.getDate()===w.getDate()&&g.getMonth()===w.getMonth()&&g.getFullYear()===w.getFullYear()&&E.classList.add("current-date");const b=document.createElement("div");b.className="calendar-cell-content";const C=document.createElement("div");C.className="calendar-day-number",C.textContent=g.getDate(),b.appendChild(C);const T=l[g.getDate()]||[];let I=0,x=0,L=0;if(T.forEach(M=>{if(g.getMonth()===s){const B=this.calculateShift(M);I+=B.baseWage,x+=B.bonus,L+=B.totalHours}}),this.calendarDisplayMode==="money"&&I+x>0||this.calendarDisplayMode==="hours"&&T.length>0){const M=document.createElement("div");if(M.className="calendar-shift-data",this.calendarDisplayMode==="money"){const _=document.createElement("div");_.className="calendar-total",_.textContent=this.formatCurrencyCalendar(I+x),M.appendChild(_)}else{const _=document.createElement("div");_.className="calendar-hours-display";let P=1/0,R=-1/0,U="",W="",F=!1;T.forEach(V=>{const j=this.timeToMinutes(V.startTime);let G=this.timeToMinutes(V.endTime),J=!1;G<j&&(G+=1440,J=!0),j<P&&(P=j,U=V.startTime),G>R&&(R=G,W=V.endTime,F=J)});let O=this.formatTimeShort(W);F&&(O+="*");const N=document.createElement("div");N.className="calendar-total calendar-hours-total",F&&(N.title="* indicates the shift ends the next day"),N.innerHTML=`${this.formatTimeShort(U)} -<br>${O}`,_.appendChild(N),M.appendChild(_)}const B=document.createElement("div");B.className="calendar-employee-chips";const H=new Map;T.forEach(_=>{_.employee&&!H.has(_.employee.id)&&H.set(_.employee.id,_.employee)}),H.forEach(_=>{const P=document.createElement("div");P.className="calendar-employee-chip",P.style.backgroundColor=_.display_color||"#6b7280",P.textContent=_.name.substring(0,2).toUpperCase(),P.title=_.name,B.appendChild(P)}),H.size>0&&b.appendChild(B),b.appendChild(M),E.classList.add("has-shifts"),E.style.cursor="pointer";let $=0,q=null;E.onclick=_=>{_.stopPropagation(),$++,$===1?q=setTimeout(()=>{T.length>0&&this.showShiftDetails(T[0].id),$=0},300):$===2&&(clearTimeout(q),$=0,console.log("Double-click detected on calendar cell with shifts"),T.length>0?(console.log("Opening shift details for shift ID:",T[0].id),this.showShiftDetails(T[0].id)):console.log("No shifts found for this calendar cell"))}}else g.getMonth()===s&&(E.classList.add("empty-date"),E.style.cursor="pointer",E.onclick=M=>{M.stopPropagation(),this.openAddShiftModalWithDate(g)});E.appendChild(b),S.appendChild(E)}e.appendChild(S)}this.lastRenderedMonth=this.currentMonth,this.lastRenderedYear=this.currentYear,this.lastRenderedShiftsKey=this.getMonthShiftsKey()},updateCalendarCells(){const e=document.querySelectorAll(".calendar-cell"),t=this.currentMonth-1,s=this.currentYear,o=this.shifts.filter(a=>a.date.getMonth()===t&&a.date.getFullYear()===s),n={};o.forEach(a=>{const i=a.date.getDate();n[i]||(n[i]=[]),n[i].push(a)}),e.forEach(a=>{const i=a.getAttribute("data-date");if(!i)return;const[r,c,l]=i.split("-").map(p=>parseInt(p,10)),d=new Date(r,c-1,l),u=a.querySelector(".calendar-cell-content");if(!u)return;const h=u.querySelector(".calendar-shift-data");h&&h.remove(),a.classList.remove("has-shifts","empty-date");const v=n[d.getDate()]||[],m=d.getMonth()===t,y=m?v:[];this.calendarDisplayMode==="hours"?a.classList.add("hours-mode"):a.classList.remove("hours-mode");let f=0,D=0,S=0;if(y.forEach(p=>{const g=this.calculateShift(p);f+=g.baseWage,D+=g.bonus,S+=g.totalHours}),this.calendarDisplayMode==="money"&&f+D>0||this.calendarDisplayMode==="hours"&&y.length>0){const p=document.createElement("div");if(p.className="calendar-shift-data",this.calendarDisplayMode==="money"){const k=document.createElement("div");k.className="calendar-total",k.textContent=this.formatCurrencyCalendar(f+D),p.appendChild(k)}else{const k=document.createElement("div");k.className="calendar-hours-display";let w=1/0,b=-1/0,C="",T="",I=!1;y.forEach(M=>{const B=this.timeToMinutes(M.startTime);let H=this.timeToMinutes(M.endTime),$=!1;H<B&&(H+=1440,$=!0),B<w&&(w=B,C=M.startTime),H>b&&(b=H,T=M.endTime,I=$)});let x=this.formatTimeShort(T);I&&(x+="*");const L=document.createElement("div");L.className="calendar-total calendar-hours-total",I&&(L.title="* indicates the shift ends the next day"),L.innerHTML=`${this.formatTimeShort(C)} -<br>${x}`,k.appendChild(L),p.appendChild(k)}u.appendChild(p),a.classList.add("has-shifts"),a.style.cursor="pointer";let g=0,E=null;a.onclick=k=>{k.stopPropagation(),g++,g===1?E=setTimeout(()=>{y.length>0&&this.showShiftDetails(y[0].id),g=0},300):g===2&&(clearTimeout(E),g=0,console.log("Double-click detected on updated calendar cell with shifts"),y.length>0?(console.log("Opening shift details for shift ID:",y[0].id),this.showShiftDetails(y[0].id)):console.log("No shifts found for this updated calendar cell"))}}else m?(a.classList.add("empty-date"),a.style.cursor="pointer",a.onclick=p=>{p.stopPropagation(),this.openAddShiftModalWithDate(d)}):(a.onclick=null,a.style.cursor="default")})},switchShiftView(e){this.shiftView=e,document.querySelectorAll(".view-toggle .tab-btn").forEach((a,i)=>{const r=i===0,c=e==="list"&&r||e==="calendar"&&!r;a.classList.toggle("active",c)});const s=document.getElementById("shiftList"),o=document.getElementById("shiftCalendar"),n=document.querySelector(".calendar-display-toggle");if(!(!s||!o)&&(e==="calendar"?(s.style.display="none",o.style.display="flex",n&&(n.style.display="flex"),this.updateShiftCalendar()):(s.style.display="flex",o.style.display="none",n&&(n.style.display="none")),this.currentView==="employees")){this.ensureMonthPickerVisibility?.();const a=document.querySelector(".employees-container");a&&(a.style.display="block");const i=document.getElementById("employeeCarouselContainer");i&&(i.style.display="block")}},switchCalendarDisplay(e){this.calendarDisplayMode=e,document.querySelectorAll(".calendar-toggle-btn").forEach(s=>{const o=e==="money"&&s.textContent==="Lønn"||e==="hours"&&s.textContent==="Varighet";s.classList.toggle("active",o)}),this.shiftView==="calendar"&&this.updateCalendarCells()},showShiftDetails(e){const t=this.shifts.find(b=>b.id===e);if(!t)return;this.closeStatDetails(),this.closeSettings(!1);const s=document.querySelector(".floating-action-bar"),o=document.querySelector(".floating-action-bar-backdrop");s&&(s.style.display="none"),o&&(o.style.display="none");const n=document.querySelector(".header");n&&n.classList.add("hidden");const a=document.createElement("div");a.className="backdrop-blur",a.onclick=()=>this.closeShiftDetails(),document.body.appendChild(a),a.offsetHeight,a.classList.add("active"),this.shiftDetailsKeydownHandler=b=>{b.key==="Escape"&&this.closeShiftDetails()},document.addEventListener("keydown",this.shiftDetailsKeydownHandler);const i=document.createElement("div");i.className="breakdown-modal shift-detail-modal",i.style.cssText=`
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0.8);
            width: min(95vw, 500px);
            max-height: 85vh;
            background: var(--bg-primary);
            border-radius: 24px;
            box-shadow: 0 20px 60px var(--shadow-blue);
            z-index: 1200;
            opacity: 0;
            transition: all 0.4s var(--ease-default);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        `;const r=document.createElement("div");r.className="breakdown-title-container",r.style.cssText=`
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
            margin-bottom: 20px;
            padding: 24px 24px 0 24px;
            flex-shrink: 0;
        `;const c=document.createElement("div");c.className="breakdown-title-icon",c.innerHTML='<svg class="icon-lg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><path d="M12 6v6l4 2"></path></svg>',c.style.cssText=`
            color: var(--accent3);
            opacity: 0.8;
        `;const l=document.createElement("h3");l.className="breakdown-title",l.textContent="Vaktdetaljer",l.style.cssText=`
            color: var(--accent3);
            margin: 0;
            font-size: 24px;
            font-weight: 600;
        `,r.appendChild(c),r.appendChild(l),i.appendChild(r);const d=document.createElement("div");d.className="shift-detail-content";const u=`
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 0 24px 24px 24px;
            padding-bottom: 80px;
            gap: 16px;
            overflow-y: auto;
        `,h=`
            opacity: 0;
            animation: slideInFromBottom 0.6s var(--ease-default) 0.3s forwards;
        `;d.style.cssText=`${h} ${u}`;const v=this.calculateShift(t),m=this.WEEKDAYS[t.date.getDay()],y=this.MONTHS[t.date.getMonth()],f=`${m} ${t.date.getDate()}. ${y}`,D=this.shifts.indexOf(t),S=this.getWageRateForShift(t);d.innerHTML=`
            <div class="detail-section">
                <div class="detail-label">Dato</div>
                <div class="detail-value">${f}</div>
            </div>

            <div class="detail-section">
                <div class="detail-label">Tid</div>
                <div class="detail-value">${t.startTime} - ${t.endTime} (${v.totalHours.toFixed(2)}t)</div>
            </div>

            <div class="detail-section">
                <div class="detail-label">Timelønn for denne vakten</div>
                <div class="detail-value">${this.formatCurrency(S)}</div>
            </div>

            <div class="detail-section">
                <div class="detail-label">Grunnlønn</div>
                <div class="detail-value accent">${this.formatCurrency(v.baseWage)}</div>
            </div>

            ${v.bonus>0?`
            <div class="detail-section">
                <div class="detail-label">Tillegg</div>
                <div class="detail-value accent">${this.formatCurrency(v.bonus)}</div>
            </div>
            `:""}

            <div class="detail-section total">
                <div class="detail-label">Total</div>
                <div class="detail-value accent large">${this.formatCurrency(v.total)}</div>
            </div>


        `,i.appendChild(d);const p=document.createElement("div");p.className="modal-fixed-footer",p.style.cssText=`
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 16px 24px;
            background: linear-gradient(135deg, var(--bg-secondary), var(--bg-tertiary));
            border-top: 1px solid var(--border);
            display: flex;
            justify-content: space-between;
            align-items: center;
            z-index: 10;
            border-radius: 0 0 24px 24px;
        `;const g=document.createElement("div");g.style.cssText=`
            display: flex;
            gap: 12px;
            align-items: center;
        `;const E=document.createElement("button");E.className="btn btn-secondary edit-shift-btn",E.setAttribute("data-shift-id",t.id),E.style.cssText=`
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 12px 16px;
        `,E.innerHTML=`
            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
            </svg>
            Rediger
        `;const k=document.createElement("button");if(k.className="btn btn-danger delete-shift-btn",k.setAttribute("data-shift-index",D),k.style.cssText=`
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 12px 16px;
        `,k.innerHTML=`
            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3 6h18"></path>
                <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
            </svg>
            Vakt
        `,E.addEventListener("click",b=>{b.stopPropagation();const C=b.target.closest("button").getAttribute("data-shift-id");this.editShift(C)}),k.addEventListener("click",async b=>{b.stopPropagation();const C=parseInt(b.target.closest("button").getAttribute("data-shift-index"));await this.deleteShift(C)&&this.closeShiftDetails()}),g.appendChild(E),g.appendChild(k),t.seriesId){const b=document.createElement("button");b.className="btn btn-warning delete-series-btn",b.style.cssText=`
                display: flex;
                align-items: center;
                gap: 8px;
                padding: 12px 16px;
            `,b.innerHTML=`
                <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M3 6h18"></path>
                    <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                    <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                </svg>
                Serie
            `,b.addEventListener("click",async C=>{C.stopPropagation(),confirm("Vil du slette hele serien?")&&await this.deleteSeries(t.seriesId)&&this.closeShiftDetails()}),g.appendChild(b)}const w=document.createElement("button");w.className="btn btn-secondary modal-close-bottom",w.style.cssText=`
            background: rgba(255, 102, 153, 0.1);
            border: 1px solid rgba(255, 102, 153, 0.3);
            color: var(--danger);
            transition: all 0.2s var(--ease-default);
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            font-size: 0;
            font-weight: 500;
            padding: 0;
            gap: 0;
        `,w.innerHTML=`
            <svg style="width: 16px; height: 16px;" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        `,w.onclick=b=>{b.stopPropagation(),this.closeShiftDetails()},p.appendChild(g),p.appendChild(w),i.appendChild(p),document.body.appendChild(i),requestAnimationFrame(()=>{i.style.opacity="1",i.style.transform="translate(-50%, -50%) scale(1)"})},closeShiftDetails(){const e=document.querySelector(".shift-detail-modal"),t=document.querySelector(".backdrop-blur"),s=document.querySelector(".header");s&&s.classList.remove("hidden"),this.shiftDetailsKeydownHandler&&(document.removeEventListener("keydown",this.shiftDetailsKeydownHandler),this.shiftDetailsKeydownHandler=null);const o=document.querySelector(".floating-action-bar"),n=document.querySelector(".floating-action-bar-backdrop");o&&(o.style.display=""),n&&(n.style.display=""),t&&(t.style.pointerEvents="none",t.onclick=null),e&&(e.style.opacity="0",e.style.transform="translate(-50%, -50%) scale(0.8)",setTimeout(()=>{e.parentNode&&e.remove()},300)),t&&setTimeout(()=>{t.classList.remove("active"),setTimeout(()=>{t.parentNode&&t.remove()},350)},100)},async deleteSeries(e){try{const{data:t,error:s}=await window.supa.from("user_shifts").delete().match({series_id:e});return s?(console.error("Feil ved sletting av serie:",s),alert("Kunne ikke slette serien"),!1):(this.userShifts=this.userShifts.filter(o=>o.seriesId!==e),this.shifts=this.shifts.filter(o=>o.seriesId!==e),this.updateDisplay(),alert("Serien er slettet"),!0)}catch(t){return console.error("deleteSeries error:",t),alert("En uventet feil oppstod"),!1}},async loadProfileData(){try{const{data:{user:e}}=await window.supa.auth.getUser();if(!e)return;const t=document.getElementById("profileName"),s=document.getElementById("profileEmail");t&&(t.value=e.user_metadata?.first_name||""),s&&(s.value=e.email||"");let o="";try{const{data:{session:c}}=await window.supa.auth.getSession(),l=c?.access_token;if(l){const d=await fetch(`${window.CONFIG.apiBase}/settings`,{headers:{Authorization:`Bearer ${l}`}});d.ok&&(o=(await d.json())?.profile_picture_url||"")}}catch{}if(!o)try{const{data:c}=await window.supa.from("user_settings").select("profile_picture_url").eq("user_id",e.id).maybeSingle();o=c?.profile_picture_url||""}catch{}o||(o=e.user_metadata?.avatar_url||"");const n=document.getElementById("profileAvatarImage"),a=document.getElementById("profileAvatarPlaceholder"),i=document.getElementById("userAvatarImg"),r=document.querySelector(".profile-icon");o&&n?(n.src=o,n.onload=()=>{n.style.display="block",a&&(a.style.display="none")},i&&(i.src=o,i.style.display="block"),r&&(r.style.display="none")):(n&&(n.style.display="none"),a&&(a.style.display=""),i&&(i.style.display="none"),r&&(r.style.display=""))}catch(e){console.error("Error loading profile data:",e)}},async updateProfile(){try{const{data:{user:e}}=await window.supa.auth.getUser();if(!e)return;const t=document.getElementById("profileName"),s=document.getElementById("profile-update-msg"),o=t?.value||"";if(!o.trim()){s&&(s.style.color="var(--danger)",s.textContent="Fornavn er påkrevd");return}const{error:n}=await window.supa.auth.updateUser({data:{first_name:o.trim()}});if(n){console.error("Error updating profile:",n),s&&(s.style.color="var(--danger)",s.textContent="Feil ved oppdatering av profil");return}s&&(s.style.color="var(--success)",s.textContent="Profil oppdatert!",setTimeout(()=>{s.textContent=""},3e3)),this.loadUserNickname()}catch(e){console.error("Error updating profile:",e);const t=document.getElementById("profile-update-msg");t&&(t.style.color="var(--danger)",t.textContent="Kunne ikke oppdatere profil")}},initProfileAvatarControls(){const e=document.getElementById("profileAvatarChooseBtn"),t=document.getElementById("profileAvatarRemoveBtn"),s=document.getElementById("profileAvatarInput");e&&s&&(e.onclick=()=>s.click()),s&&(s.onchange=async o=>{const n=o.target.files&&o.target.files[0];n&&(await this.openCropperWithFile(n),s.value="")}),t&&(t.onclick=()=>this.removeProfileAvatar())},async openCropperWithFile(e){try{const t=document.getElementById("cropModal"),s=document.getElementById("cropImage");if(!t||!s)return;this._cropObjectUrl&&(URL.revokeObjectURL(this._cropObjectUrl),this._cropObjectUrl=null);const o=URL.createObjectURL(e);this._cropObjectUrl=o,s.src=o,t.style.display="flex",t.classList.add("active"),await new Promise(r=>setTimeout(r,10)),this.cropper&&(this.cropper.destroy(),this.cropper=null);const n=window.Cropper||await(async()=>{try{const r=await Y(()=>import("https://unpkg.com/cropperjs@1.6.2/dist/cropper.esm.js"),[]);return r?.default||r?.Cropper||null}catch{return null}})();if(!n)throw new Error("Cropper library not available");this.cropper=new n(s,{aspectRatio:1,viewMode:1,dragMode:"move",guides:!0,background:!1,autoCropArea:1,responsive:!0,checkOrientation:!1,movable:!0,zoomable:!0,scalable:!1,rotatable:!1,minCropBoxWidth:64,minCropBoxHeight:64,ready:()=>{const r=document.getElementById("cropZoomSlider");if(r){const d=this.cropper.getImageData().ratio||1;r.value=d,r.oninput=()=>this.cropper.zoomTo(parseFloat(r.value))}const c=document.getElementById("zoomInBtn"),l=document.getElementById("zoomOutBtn");c&&(c.onclick=()=>this.cropper.zoom(.05)),l&&(l.onclick=()=>this.cropper.zoom(-.05)),s.classList.add("loaded"),this.addMobileTouchEnhancements()}});const a=document.getElementById("confirmCropBtn"),i=document.getElementById("cancelCropBtn");a&&(a.onclick=()=>this.confirmAvatarCrop()),i&&(i.onclick=()=>this.cancelAvatarCrop())}catch(t){console.error("openCropperWithFile error",t),this.showUploadError("Kunne ikke åpne beskjæring")}},async confirmAvatarCrop(){try{if(!this.cropper)return;this.showProfilePictureProgress(!0),this.updateProfilePictureProgress(10,"Behandler...");const e=this.cropper.getCroppedCanvas({width:512,height:512,imageSmoothingQuality:"high"});if(!e)throw new Error("Canvas not available");const t=await new Promise(r=>e.toBlob(r,"image/jpeg",.9));if(!t)throw new Error("Kunne ikke lage bilde");this.updateProfilePictureProgress(30,"Lagrer...");const s=await this.saveAvatarBlob(t);this.updateProfilePictureProgress(90,"Oppdaterer profil...");try{const{data:{session:r}}=await window.supa.auth.getSession(),c=r?.access_token;c&&await fetch(`${window.CONFIG.apiBase}/settings`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${c}`},body:JSON.stringify({profile_picture_url:s})})}catch{}try{const{data:r}=await window.supa.auth.getClaims(),c=await guardedUserId();if(c){const{error:l}=await window.supa.from("user_settings").update({profile_picture_url:s}).eq("user_id",c);l&&await window.supa.from("user_settings").upsert({user_id:c,profile_picture_url:s},{onConflict:"user_id"})}}catch{}await window.supa.auth.updateUser({data:{avatar_url:s}});const o=document.getElementById("profileAvatarImage"),n=document.getElementById("profileAvatarPlaceholder"),a=document.getElementById("userAvatarImg");o&&(o.onload=()=>{o.style.display="block"},o.onerror=()=>{o.style.display="none"},o.src=s),n&&(n.style.display="none"),a&&(a.onload=()=>{a.style.display="block"},a.onerror=()=>{a.style.display="none"},a.src=s);const i=document.querySelector(".profile-icon");i&&(i.style.display="none"),this.updateProfilePictureProgress(100,"Ferdig"),this.cancelAvatarCrop(!0)}catch(e){console.error("confirmAvatarCrop error",e),this.showUploadError("Kunne ikke lagre profilbilde")}finally{this.showProfilePictureProgress(!1)}},cancelAvatarCrop(e=!1){const t=document.getElementById("cropModal");if(this.cropper){try{this.cropper.destroy()}catch{}this.cropper=null}(!e&&t||t)&&(t.classList.remove("active"),t.style.display="none"),this._cropObjectUrl&&(URL.revokeObjectURL(this._cropObjectUrl),this._cropObjectUrl=null)},async saveAvatarBlob(e){try{const t=await new Promise((n,a)=>{const i=new FileReader;i.onload=()=>{const c=i.result.split(",")[1]||"";n(c)},i.onerror=()=>a(new Error("Kunne ikke lese bilde")),i.readAsDataURL(e)}),{data:{session:s}}=await window.supa.auth.getSession(),o=s?.access_token;if(o){const n=await fetch(`${window.CONFIG.apiBase}/user/avatar`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({image_base64:t})}),a=await n.json();if(n.ok&&a?.url)return a.url}}catch(t){console.warn("Backend upload failed; trying client storage.",t)}try{const{data:t}=await window.supa.auth.getClaims(),s=await guardedUserId();if(!s)throw new Error("Ingen bruker");if(window.supa.storage&&window.supa.storage.from){const o=window.supa.storage.from("profile-pictures"),n=`${s}/profile_${Date.now()}.jpg`,{error:a}=await o.upload(n,e,{contentType:"image/jpeg",upsert:!0});if(a)throw a;const{data:i}=o.getPublicUrl(n);if(i?.publicUrl)return i.publicUrl}}catch(t){console.warn("Supabase Storage upload failed or not available; using data URL.",t)}return await new Promise((t,s)=>{const o=new FileReader;o.onload=()=>t(o.result),o.onerror=()=>s(new Error("Kunne ikke lese bilde")),o.readAsDataURL(e)})},async removeProfileAvatar(){try{try{const{data:{session:n}}=await window.supa.auth.getSession(),a=n?.access_token;a&&await fetch(`${window.CONFIG.apiBase}/settings`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({profile_picture_url:null})})}catch{}try{const{data:n}=await window.supa.auth.getClaims(),a=await guardedUserId();a&&await window.supa.from("user_settings").update({profile_picture_url:null}).eq("user_id",a)}catch{}await window.supa.auth.updateUser({data:{avatar_url:null}});const e=document.getElementById("profileAvatarImage"),t=document.getElementById("profileAvatarPlaceholder"),s=document.getElementById("userAvatarImg");e&&(e.style.display="none"),t&&(t.style.display=""),s&&(s.style.display="none");const o=document.querySelector(".profile-icon");o&&(o.style.display="")}catch(e){console.error("removeProfileAvatar error",e),this.showUploadError("Kunne ikke fjerne profilbilde")}},showUploadError(e){this.showProfilePictureProgress(!1);const t=document.getElementById("profile-update-msg");t&&(t.style.color="var(--danger)",t.textContent=e,setTimeout(()=>{t.textContent=""},5e3))},showProfilePictureProgress(e){const t=document.getElementById("profilePictureProgress");t&&(t.style.display=e?"flex":"none")},updateProfilePictureProgress(e,t){const s=document.getElementById("profilePictureProgressFill"),o=document.getElementById("profilePictureProgressText");s&&(s.style.width=e+"%"),o&&(o.textContent=t)},addMobileTouchEnhancements(){if(!this.cropper)return;const e=document.querySelector("#cropModal .cropper-container");if(!e)return;let t=0,s=!1;const o=i=>{if(i.touches.length===2){s=!0;const r=i.touches[0],c=i.touches[1];t=Math.sqrt(Math.pow(c.clientX-r.clientX,2)+Math.pow(c.clientY-r.clientY,2)),i.preventDefault()}},n=i=>{if(s&&i.touches.length===2){const r=i.touches[0],c=i.touches[1],l=Math.sqrt(Math.pow(c.clientX-r.clientX,2)+Math.pow(c.clientY-r.clientY,2));if(t>0){const d=l/t,u=this.cropper.getCanvasData(),v=this.cropper.getImageData()?.naturalWidth||1,m=u.width/v,y=Math.max(.2,Math.min(3,m*d));this.cropper.zoomTo(y);const f=document.getElementById("cropZoomSlider");f&&(f.value=String(y))}t=l,i.preventDefault()}},a=i=>{i.touches.length<2&&(s=!1,t=0)};if(e.addEventListener("touchstart",o,{passive:!1}),e.addEventListener("touchmove",n,{passive:!1}),e.addEventListener("touchend",a,{passive:!1}),this.touchEventListeners={touchstart:o,touchmove:n,touchend:a,element:e},"vibrate"in navigator){const i=this.cropper.crop.bind(this.cropper);this.cropper.crop=(...r)=>(navigator.vibrate(10),i(...r))}e.style.touchAction="none",e.style.userSelect="none",e.style.webkitUserSelect="none"},removeMobileTouchEnhancements(){if(this.touchEventListeners){const{element:e,touchstart:t,touchmove:s,touchend:o}=this.touchEventListeners;e.removeEventListener("touchstart",t),e.removeEventListener("touchmove",s),e.removeEventListener("touchend",o),this.touchEventListeners=null}},calculateShift(e){const t=this.timeToMinutes(e.startTime);let s=this.timeToMinutes(e.endTime);s<t?s+=1440:s===t&&(console.warn("Shift has same start and end time",{startTime:e.startTime,endTime:e.endTime}),s+=1440);const o=(s-t)/60;if(o<=0)return console.error("Invalid shift duration",{startTime:e.startTime,endTime:e.endTime,durationHours:o}),{hours:0,totalHours:0,paidHours:0,pauseDeducted:!1,baseWage:0,bonus:0,total:0,breakDeduction:null};const n=this.getWageRateForShift(e),a=this.getCurrentBonuses(),i=this.calculateLegalBreakDeduction(e,n,a,t,s);let r=o,c=s,l=0,d=0;if(i.shouldDeduct&&(i.method==="proportional"||i.method==="base_only")){const u=this.calculateAdjustedWages(i,n);l=u.baseWage,d=u.bonus,r=u.totalHours}else{i.shouldDeduct&&(r-=i.deductionHours,c=i.adjustedEndMinutes),l=r*n;const u=e.type===0?"weekday":e.type===1?"saturday":"sunday",h=a[u]||[],v=Math.floor(c/60)%24,m=`${String(v).padStart(2,"0")}:${(c%60).toString().padStart(2,"0")}`;d=this.calculateBonus(e.startTime,m,h),o>5.5&&console.log("Traditional calculation (client):",{method:i.method,originalHours:o,paidHours:r,baseWage:l,bonus:d,total:l+d})}return{hours:parseFloat(r.toFixed(2)),totalHours:parseFloat(o.toFixed(2)),paidHours:parseFloat(r.toFixed(2)),pauseDeducted:i.shouldDeduct,baseWage:l,bonus:d,total:l+d,breakDeduction:i.auditTrail}},calculateLegalBreakDeduction(e,t,s,o,n){const a=(n-o)/60,i={enabled:this.pauseDeductionEnabled!==!1,method:this.pauseDeductionMethod||"proportional",thresholdHours:this.pauseThresholdHours||5.5,deductionMinutes:this.pauseDeductionMinutes||30,auditEnabled:this.auditBreakCalculations!==!1};if(!i.enabled||a<=i.thresholdHours)return{shouldDeduct:!1,deductionHours:0,adjustedEndMinutes:n,auditTrail:i.auditEnabled?{originalDuration:a,thresholdHours:i.thresholdHours,method:i.method,reason:i.enabled?"Shift duration below threshold":"Break deduction disabled",wagePeriods:[],deductedHours:0,complianceNotes:[]}:null};const r=i.deductionMinutes/60,c=this.calculateWagePeriods(e,t,s,o,n);let l=null;switch(i.method){case"none":l={deductionHours:0,adjustedEndMinutes:n,deductionDetails:"No break deduction applied - paid pause"};break;case"proportional":l=this.applyProportionalDeduction(c,r,o,n);break;case"base_only":l=this.applyBaseOnlyDeduction(c,r,o,n);break;case"end_of_shift":default:l={deductionHours:r,adjustedEndMinutes:n-i.deductionMinutes,deductionDetails:"Break deducted from end of shift (legacy method)"};break}let d=null;return i.auditEnabled&&(d={originalDuration:a,thresholdHours:i.thresholdHours,method:i.method,deductionMinutes:i.deductionMinutes,wagePeriods:c,deductedHours:l.deductionHours,deductionDetails:l.deductionDetails,complianceNotes:[]},i.method==="end_of_shift"&&d.complianceNotes.push("WARNING: End-of-shift deduction may not comply with labor laws in all jurisdictions")),{shouldDeduct:i.method!=="none",deductionHours:l.deductionHours,adjustedEndMinutes:l.adjustedEndMinutes,method:i.method,auditTrail:d}},calculateWagePeriods(e,t,s,o,n){const a=[],i=d=>d===0?"sunday":d===6?"saturday":"weekday",r=(d,u,h)=>{if(u<=d)return;const v=s[h]||[];let m=[{start:d,end:u,bonuses:[]}];for(const y of v){const f=this.timeToMinutes(y.from);let D=this.timeToMinutes(y.to);D<=f&&(D+=1440);const S=Math.max(d,f),p=Math.min(u,D);if(p<=S)continue;const g=[];for(const E of m){if(E.end<=S||E.start>=p){g.push(E);continue}E.start<S&&g.push({start:E.start,end:S,bonuses:[...E.bonuses]});const k=Math.max(E.start,S),w=Math.min(E.end,p);w>k&&g.push({start:k,end:w,bonuses:[...E.bonuses,y]}),E.end>p&&g.push({start:p,end:E.end,bonuses:[...E.bonuses]})}m=g}for(const y of m){const f=(y.end-y.start)/60;if(f<=0)continue;const D=y.bonuses.reduce((S,p)=>S+p.rate,0);a.push({startMinutes:y.start,endMinutes:y.end,durationHours:f,wageRate:t,bonusRate:D,totalRate:t+D,type:D>0?"bonus":"base",bonuses:y.bonuses})}},c=e?.date instanceof Date?e.date.getDay():e?.type===2?0:e?.type===1?6:1,l=Math.min(n,1440);if(r(o,l,i(c)),n>1440){const d=(c+1)%7;r(0,n-1440,i(d))}return a},testBreakDeductionMethods(){console.log("Testing break deduction methods...");const e={startTime:"16:00",endTime:"22:00",type:1},t=["proportional","base_only","end_of_shift","none"],s={};for(const i of t){const r=this.pauseDeductionMethod,c=this.pauseDeductionEnabled;this.pauseDeductionMethod=i,this.pauseDeductionEnabled=i!=="none";const l=this.calculateShift(e);s[i]={total:l.total,baseWage:l.baseWage,bonus:l.bonus,paidHours:l.paidHours,pauseDeducted:l.pauseDeducted},this.pauseDeductionMethod=r,this.pauseDeductionEnabled=c}console.table(s);const o=1400,n=Object.values(s).map(i=>i.total),a=Math.max(...n);return a>o?console.error("❌ DOUBLING DETECTED! Max total:",a,"Expected max:",o):console.log("✅ No doubling detected. Max total:",a,"Expected max:",o),s},async testBreakDeductionColumns(){const{data:e}=await window.supa.auth.getClaims();if(!!!e){console.log("❌ Not logged in");return}try{const{data:s,error:o}=await window.supa.from("user_settings").select("*").eq("user_id",user.id).single();if(o){console.error("❌ Error fetching settings:",o);return}const n=["pause_deduction_enabled","pause_deduction_method","pause_threshold_hours","pause_deduction_minutes","audit_break_calculations"]}catch(s){console.error("❌ Error checking columns:",s)}},applyProportionalDeduction(e,t,s,o){const n=(o-s)/60;let a=t,i=0;const r=[];for(const c of e){if(a<=0)break;const l=c.durationHours/n,d=Math.min(t*l,a);d>0&&(i+=d,a-=d,r.push(`${d.toFixed(2)}h from ${c.type} rate (${c.totalRate} kr/h)`))}return{deductionHours:i,adjustedEndMinutes:o-i*60,deductionDetails:`Proportional deduction: ${r.join(", ")}`}},applyBaseOnlyDeduction(e,t,s,o){let n=t,a=0;const i=e.filter(c=>c.bonusRate===0),r=[];if(i.length===0){const c=[...e].sort((u,h)=>u.bonusRate-h.bonusRate),l=c[0].bonusRate,d=c.filter(u=>u.bonusRate===l);for(const u of d){if(n<=0)break;const h=Math.min(u.durationHours,n);a+=h,n-=h,r.push(`${h.toFixed(2)}h from lowest bonus rate (${u.totalRate} kr/h)`)}}else for(const c of i){if(n<=0)break;const l=Math.min(c.durationHours,n);a+=l,n-=l,r.push(`${l.toFixed(2)}h from base rate (${c.wageRate} kr/h)`)}return{deductionHours:a,adjustedEndMinutes:o-a*60,deductionDetails:`Base-only deduction: ${r.join(", ")}`}},calculateAdjustedWages(e,t){let s=0,o=0,n=0;if(!e.auditTrail||!e.auditTrail.wagePeriods)return{baseWage:0,bonus:0,totalHours:0};const a=e.auditTrail.wagePeriods,i=e.method,r=e.deductionHours;if(i==="proportional"){const c=a.reduce((l,d)=>l+d.durationHours,0);for(const l of a){const d=l.durationHours/c,u=r*d,h=Math.max(0,l.durationHours-u);n+=h,s+=h*l.wageRate,o+=h*l.bonusRate}}else if(i==="base_only"){let c=r;const l=a.filter(u=>u.bonusRate===0),d=a.filter(u=>u.bonusRate>0);for(const u of l){const h=Math.min(u.durationHours,c),v=u.durationHours-h;c-=h,n+=v,s+=v*u.wageRate}for(const u of d)n+=u.durationHours,s+=u.durationHours*u.wageRate,o+=u.durationHours*u.bonusRate}return{baseWage:parseFloat(s.toFixed(2)),bonus:parseFloat(o.toFixed(2)),totalHours:parseFloat(n.toFixed(2))}},setupBreakDeductionEventListeners(){const e=document.getElementById("pauseDeductionEnabledToggle");e?e.addEventListener("change",n=>{this.pauseDeductionEnabled=n.target.checked,this.toggleBreakDeductionSections(),this.updateDisplay(),this.saveSettingsToSupabase()}):console.warn("pauseDeductionEnabledToggle element not found");const t=document.getElementById("pauseDeductionMethodSelect");t?t.addEventListener("change",n=>{this.pauseDeductionMethod=n.target.value,this.updateMethodExplanation(),this.updateDisplay(),this.saveSettingsToSupabase()}):console.warn("pauseDeductionMethodSelect element not found");const s=document.getElementById("pauseThresholdInput");s&&s.addEventListener("change",n=>{this.pauseThresholdHours=parseFloat(n.target.value)||5.5,this.updateDisplay(),this.saveSettingsToSupabase()});const o=document.getElementById("pauseDeductionMinutesInput");o&&o.addEventListener("change",n=>{this.pauseDeductionMinutes=parseInt(n.target.value)||30,this.updateDisplay(),this.saveSettingsToSupabase()})},toggleBreakDeductionSections(){const e=document.getElementById("pauseDeductionEnabledToggle");if(e){const t=e.closest(".form-group");t&&(this.pauseDeductionEnabled?t.classList.remove("break-settings-disabled"):t.classList.add("break-settings-disabled"))}},updateMethodExplanation(){["proportionalInfo","baseOnlyInfo","endOfShiftInfo","noneInfo"].forEach(o=>{const n=document.getElementById(o);n&&(n.style.display="none")});let t="proportionalInfo";switch(this.pauseDeductionMethod){case"proportional":t="proportionalInfo";break;case"base_only":t="baseOnlyInfo";break;case"end_of_shift":t="endOfShiftInfo";break;case"none":t="noneInfo";break}const s=document.getElementById(t);s&&(s.style.display="block")},timeToMinutes(e){const[t,s]=e.split(":").map(Number);return t*60+s},minutesToTime(e){const t=e%1440,s=Math.floor(t/60),o=t%60;return`${s.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`},timeToSeconds(e){const t=e.split(":").map(Number),s=t[0],o=t[1],n=t[2]||0;return s*3600+o*60+n},calculateBonus(e,t,s){let o=0;const n=this.timeToMinutes(e);let a=this.timeToMinutes(t);a<=n&&(a+=1440);for(const i of s){const r=this.timeToMinutes(i.from);let c=this.timeToMinutes(i.to);c<=r&&(c+=1440);const l=this.calculateOverlap(n,a,r,c);o+=l/60*i.rate}return o},calculateBonusWithSeconds(e,t,s){let o=0;const n=this.timeToSeconds(e);let a=this.timeToSeconds(t);a<=n&&(a+=24*3600);for(const i of s){const r=this.timeToSeconds(i.from);let c=this.timeToSeconds(i.to);c<=r&&(c+=24*3600);const l=this.calculateOverlap(n,a,r,c);o+=l/3600*i.rate}return o},calculateOverlap(e,t,s,o){const n=Math.max(e,s),a=Math.min(t,o);return Math.max(0,a-n)},shiftsOverlap(e,t){const s=new Date(e.date),o=new Date(t.date),n=this.timeToMinutes(e.startTime);let a=this.timeToMinutes(e.endTime);const i=this.timeToMinutes(t.startTime);let r=this.timeToMinutes(t.endTime);if(a<n&&(a+=1440),r<i&&(r+=1440),s.getTime()===o.getTime())return this.calculateOverlap(n,a,i,r)>0;const c=new Date(s);if(c.setDate(c.getDate()+1),c.getTime()===o.getTime()&&a>1440)return a-1440>i;const l=new Date(o);return l.setDate(l.getDate()+1),l.getTime()===s.getTime()&&r>1440?r-1440>n:!1},getOverlappingShifts(e){return this.shifts.filter(t=>t.id===e.id?!1:this.shiftsOverlap(e,t))},shiftHasOverlaps(e){return this.getOverlappingShifts(e).length>0},testOverlapDetection(){console.log("Testing overlap detection...");const e={id:"test1",date:new Date("2024-01-15"),startTime:"09:00",endTime:"17:00",type:0},t={id:"test2",date:new Date("2024-01-15"),startTime:"16:00",endTime:"22:00",type:0},s={id:"test3",date:new Date("2024-01-15"),startTime:"23:00",endTime:"07:00",type:0},o={id:"test4",date:new Date("2024-01-16"),startTime:"06:00",endTime:"14:00",type:0};console.log("Shift1 and Shift2 overlap (same day):",this.shiftsOverlap(e,t)),console.log("Shift3 and Shift4 overlap (midnight crossing):",this.shiftsOverlap(s,o)),console.log("Shift1 and Shift4 overlap (no overlap):",this.shiftsOverlap(e,o)),console.log("Overlap detection test completed.")},addTestPayrollShifts(){console.log("Adding test payroll shifts...");const e=new Date,t=e.getMonth(),s=e.getFullYear(),o=t===0?11:t-1,n=t===0?s-1:s,a=[{id:"test-payroll-1",date:new Date(n,o,5),startTime:"09:00",endTime:"17:00",type:0,seriesId:null},{id:"test-payroll-2",date:new Date(n,o,12),startTime:"10:00",endTime:"18:00",type:0,seriesId:null},{id:"test-payroll-3",date:new Date(n,o,19),startTime:"08:00",endTime:"16:00",type:1,seriesId:null},{id:"test-payroll-4",date:new Date(n,o,26),startTime:"09:00",endTime:"17:00",type:0,seriesId:null}];a.forEach(i=>{this.shifts.push(i)}),console.log(`Added ${a.length} test shifts for payroll card testing`),this.updateDisplay()},addTestOverlappingShifts(){console.log("Adding test overlapping shifts...");const e=new Date,t=new Date(e);t.setDate(e.getDate()+1),[{id:"test-overlap-1",date:new Date(e),startTime:"09:00",endTime:"17:00",type:0,seriesId:null},{id:"test-overlap-2",date:new Date(e),startTime:"16:00",endTime:"22:00",type:0,seriesId:null},{id:"test-overlap-3",date:new Date(e),startTime:"23:00",endTime:"07:00",type:0,seriesId:null},{id:"test-overlap-4",date:new Date(t),startTime:"06:00",endTime:"14:00",type:0,seriesId:null}].forEach(o=>{this.shifts.push(o)}),this.refreshUI(),console.log("Test overlapping shifts added. Check the shift list for warning indicators.")},formatCurrency(e){const t=this.currencyFormat?" NOK":" kr";return Math.round(e).toLocaleString("nb-NO")+t},formatCurrencyShort(e){return Math.round(e).toLocaleString("nb-NO")},formatCurrencyCalendar(e){return Math.round(e).toLocaleString("nb-NO")},formatCurrencyDetailed(e){const t=this.currencyFormat?" NOK":" kr";return e.toFixed(2).replace(".",",")+t},renderEmployeeWorkSummary(){try{const e=document.getElementById("employeeWorkSummary")||document.getElementById("employeesContent");if(!e)return;const t=this.getSelectedEmployee?.();if(!t){e.id==="employeeWorkSummary"&&(e.innerHTML="");return}const s=this.orgSettings?.break_policy,o=s==="proportional_across_periods"?"proportional":s==="from_base_rate"?"base_only":s==="fixed_0_5_over_5_5h"?"end_of_shift":s==="none"?"none":this.pauseDeductionMethod,n=this.pauseDeductionMethod,a=this.pauseDeductionEnabled;let i=!1;const r=()=>{i||(this.pauseDeductionMethod=n,this.pauseDeductionEnabled=a,i=!0)};this.pauseDeductionMethod=o,this.pauseDeductionEnabled=!0;const c=(this.shifts||[]).filter(p=>p.employee_id===t.id&&p.date.getMonth()===this.currentMonth-1&&p.date.getFullYear()===this.currentYear),l=new Map,d=new Map,u=p=>{if(p==="23:59")return"24";const[g,E]=p.split(":");return E==="00"?`${parseInt(g,10)}`:`${g}:${E}`};for(const p of c){const g=this.timeToMinutes(p.startTime);let E=this.timeToMinutes(p.endTime);E<=g&&(E+=1440);const k=this.getWageRateForShift(p),w=this.PRESET_BONUSES,b=this.calculateLegalBreakDeduction(p,k,w,g,E);let C;if(b?.shouldDeduct&&(b.method==="proportional"||b.method==="base_only"))C=this.calculateAdjustedWages(b,k).totalHours;else{const x=(E-g)/60;C=b?.shouldDeduct?Math.max(0,x-(b.deductionHours||0)):x}const T=l.get(k)||{hours:0,rate:k,pay:0};T.hours+=C,T.pay=T.hours*T.rate,l.set(k,T);let I=[];if(b?.method==="end_of_shift"&&b.shouldDeduct?I=this.calculateWagePeriods(p,k,w,g,b.adjustedEndMinutes):b?.auditTrail?.wagePeriods&&b.auditTrail.wagePeriods.length>0?I=b.auditTrail.wagePeriods.map(x=>({...x})):I=this.calculateWagePeriods(p,k,w,g,E),b?.shouldDeduct&&b.method==="proportional"){const x=I.reduce((M,B)=>M+B.durationHours,0)||1,L=b.deductionHours||0;I=I.map(M=>{const B=L*(M.durationHours/x);return{...M,durationHours:Math.max(0,M.durationHours-B)}})}for(const x of I){if(!x||x.durationHours<=0)continue;const L=x.durationHours;for(const M of x.bonuses||[]){const B=`${M.from}-${M.to}|${M.rate}`,H=`UB ${u(M.from)}-${u(M.to)}`,$=d.get(B)||{label:H,rate:M.rate,hours:0,pay:0,sortKey:this.timeToMinutes(M.from)};$.hours+=L,$.pay=$.hours*$.rate,d.set(B,$)}}}const h=Array.from(l.values()).sort((p,g)=>p.rate-g.rate).map(p=>({label:"Grunnlønn",rate:p.rate,hours:p.hours,pay:p.pay,group:"base"})),v=Array.from(d.values()).sort((p,g)=>p.sortKey-g.sortKey||p.rate-g.rate).map(p=>({label:p.label,rate:p.rate,hours:p.hours,pay:p.pay,group:"ub"})),m=[...h,...v],y=m.map(p=>`
                <tr>
                    <td class="col-type">${p.label}</td>
                    <td class="col-rate">${this.formatCurrencyDetailed(p.rate)}</td>
                    <td class="col-hours">${p.hours.toFixed(2).replace(".",",")} t</td>
                    <td class="col-pay">${this.formatCurrencyDetailed(p.pay)}</td>
                </tr>
            `).join(""),f=h.reduce((p,g)=>p+g.hours,0),D=m.reduce((p,g)=>p+g.pay,0),S=`
                <div class="employee-work-summary-header">
                    <h3 style="margin:0 0 12px 0;">${t.name}</h3>
                </div>
                <div class="employee-work-summary-table-wrapper">
                    <table class="employee-work-summary-table">
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Sats</th>
                                <th>Timer</th>
                                <th>Beløp</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${y||'<tr><td colspan="4" style="text-align:center;color:var(--text-secondary);padding:16px;">Ingen vakter i valgt måned</td></tr>'}
                        </tbody>
                        <tfoot>
                            <tr>
                                <td>Totalt</td>
                                <td></td>
                                <td>${f.toFixed(2).replace(".",",")} t</td>
                                <td>${this.formatCurrencyDetailed(D)}</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            `;e.id==="employeeWorkSummary"?e.innerHTML=S:e.innerHTML=`<div class="employee-work-summary" id="employeeWorkSummary">${S}</div>`,r()}catch(e){console.error("Error rendering employee work summary:",e);try{this.pauseDeductionMethod=this.pauseDeductionMethod??this.pauseDeductionMethod}finally{}}},renderCurrentUserWorkSummary(){try{const e=document.getElementById("weeklyHoursChart"),t=e?e.parentElement:null,s=document.querySelector(".statistics-content"),o=t||s;if(!o)return;let n=document.getElementById("currentUserWorkSummary");n?n.parentElement!==o&&(n.parentElement.removeChild(n),o.appendChild(n)):(n=document.createElement("div"),n.id="currentUserWorkSummary",n.style.marginTop="16px",o.appendChild(n));const a=(this.shifts||[]).filter(S=>S.date.getMonth()===this.currentMonth-1&&S.date.getFullYear()===this.currentYear);if(a.length===0){n.innerHTML=`
                    <div class="employee-work-summary">
                        <div class="employee-work-summary-header">
                            <h3 style="margin:0 0 12px 0;">${document.getElementById("userNickname")?.textContent||"Min oversikt"}</h3>
                        </div>
                        <div class="employee-work-summary-table-wrapper">
                            <table class="employee-work-summary-table">
                                <thead>
                                    <tr>
                                        <th>Type</th>
                                        <th>Sats</th>
                                        <th>Timer</th>
                                        <th>Beløp</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td colspan="4" style="text-align:center;color:var(--text-secondary);padding:16px;">Ingen vakter i valgt måned</td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td>Totalt</td>
                                        <td></td>
                                        <td>0,00 t</td>
                                        <td>${this.formatCurrencyDetailed(0)}</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                `;return}const i=this.getCurrentBonuses(),r=new Map,c=new Map,l=S=>{if(S==="23:59")return"24";const[p,g]=S.split(":");return g==="00"?`${parseInt(p,10)}`:`${p}:${g}`};for(const S of a){const p=this.timeToMinutes(S.startTime);let g=this.timeToMinutes(S.endTime);g<=p&&(g+=1440);const E=this.getWageRateForShift(S),k=this.calculateLegalBreakDeduction(S,E,i,p,g);let w;if(k?.shouldDeduct&&(k.method==="proportional"||k.method==="base_only"))w=this.calculateAdjustedWages(k,E).totalHours;else{const T=(g-p)/60;w=k?.shouldDeduct?Math.max(0,T-(k.deductionHours||0)):T}const b=r.get(E)||{hours:0,rate:E,pay:0};b.hours+=w,b.pay=b.hours*b.rate,r.set(E,b);let C=[];if(k?.method==="end_of_shift"&&k.shouldDeduct?C=this.calculateWagePeriods(S,E,i,p,k.adjustedEndMinutes):k?.auditTrail?.wagePeriods&&k.auditTrail.wagePeriods.length>0?C=k.auditTrail.wagePeriods.map(T=>({...T})):C=this.calculateWagePeriods(S,E,i,p,g),k?.shouldDeduct&&k.method==="proportional"){const T=C.reduce((x,L)=>x+L.durationHours,0)||1,I=k.deductionHours||0;C=C.map(x=>{const L=I*(x.durationHours/T);return{...x,durationHours:Math.max(0,x.durationHours-L)}})}for(const T of C){if(!T||T.durationHours<=0)continue;const I=T.durationHours;for(const x of T.bonuses||[]){const L=`${x.from}-${x.to}|${x.rate}`,M=`UB ${l(x.from)}-${l(x.to)}`,B=c.get(L)||{label:M,rate:x.rate,hours:0,pay:0,sortKey:this.timeToMinutes(x.from)};B.hours+=I,B.pay=B.hours*B.rate,c.set(L,B)}}}const d=Array.from(r.values()).sort((S,p)=>S.rate-p.rate).map(S=>({label:"Grunnlønn",rate:S.rate,hours:S.hours,pay:S.pay,group:"base"})),u=Array.from(c.values()).sort((S,p)=>S.sortKey-p.sortKey||S.rate-p.rate).map(S=>({label:S.label,rate:S.rate,hours:S.hours,pay:S.pay,group:"ub"})),h=[...d,...u],v=h.map(S=>`
                <tr>
                    <td class="col-type">${S.label}</td>
                    <td class="col-rate">${this.formatCurrencyDetailed(S.rate)}</td>
                    <td class="col-hours">${S.hours.toFixed(2).replace(".",",")} t</td>
                    <td class="col-pay">${this.formatCurrencyDetailed(S.pay)}</td>
                </tr>
            `).join(""),m=d.reduce((S,p)=>S+p.hours,0),y=h.reduce((S,p)=>S+p.pay,0),D=`
                <div class="employee-work-summary">
                    <div class="employee-work-summary-header">
                        <h3 style="margin:0 0 12px 0;">${document.getElementById("userNickname")?.textContent||"Min oversikt"}</h3>
                    </div>
                    <div class="employee-work-summary-table-wrapper">
                        <table class="employee-work-summary-table">
                            <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Sats</th>
                                    <th>Timer</th>
                                    <th>Beløp</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${v||'<tr><td colspan="4" style="text-align:center;color:var(--text-secondary);padding:16px;">Ingen vakter i valgt måned</td></tr>'}
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td>Totalt</td>
                                    <td></td>
                                    <td>${m.toFixed(2).replace(".",",")} t</td>
                                    <td>${this.formatCurrencyDetailed(y)}</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            `;n.innerHTML=D}catch(e){console.error("Error rendering current user work summary:",e)}},formatHours(e){return e.toFixed(2).replace(".",",")+"t"},formatTimeShort(e){const[t,s]=e.split(":");return s==="00"?t:e},updateWageLevel(e){this.currentWageLevel=parseInt(e),this.updateDisplay(),this.saveSettingsToSupabase()},updateCustomWage(e){this.customWage=parseFloat(e)||200,this.updateDisplay(),this.saveSettingsToSupabase()},captureCustomBonusesFromUI(){const e={};return["weekday","saturday","sunday"].forEach(s=>{e[s]=[];const o=document.getElementById(`${s}BonusSlots`);o&&o.querySelectorAll(".bonus-slot").forEach((a,i)=>{const r=a.querySelectorAll("input");if(r.length>=3){const c=r[0].value,l=r[1].value,d=r[2].value;e[s].push({from:c,to:l,rate:parseFloat(d)||0})}})}),e},async saveCustomBonuses(){const e=this.captureCustomBonusesFromUI(),t={};["weekday","saturday","sunday"].forEach(s=>{t[s]=[],e[s]&&e[s].forEach(o=>{o.from&&o.to&&o.rate&&!isNaN(o.rate)&&o.rate>0&&t[s].push({from:o.from,to:o.to,rate:parseFloat(o.rate)})})}),this.customBonuses=t,this.showSaveStatus("Lagrer tillegg...");try{this.updateDisplay(),await this.saveSettingsToSupabase(),this.saveToLocalStorage(),this.showSaveStatus("Tillegg lagret ✓"),alert("Tillegg lagret!")}catch(s){console.error("Error saving custom bonuses:",s),this.showSaveStatus("Feil ved lagring!"),alert("Feil ved lagring av tillegg!")}},async saveCustomBonusesSilent(){try{const e=this.captureCustomBonusesFromUI(),t={};["weekday","saturday","sunday"].forEach(s=>{t[s]=[],e[s]&&e[s].forEach(o=>{o.from&&o.to&&o.rate&&!isNaN(o.rate)&&o.rate>0&&t[s].push({from:o.from,to:o.to,rate:parseFloat(o.rate)})})}),this.customBonuses=t,this.updateDisplay(),await this.saveSettingsToSupabase(),this.saveToLocalStorage()}catch(e){console.error("Error in saveCustomBonusesSilent:",e)}},async deleteShift(e){const t=this.shifts[e];if(t.seriesId&&confirm("Denne vakten er del av en serie. Vil du slette hele serien?"))return await this.deleteSeries(t.seriesId);const s=this.shifts[e];if(!s||!s.id||!confirm("Er du sikker på at du vil slette denne vakten?"))return!1;try{const{data:o}=await window.supa.auth.getClaims();if(!!!o)return alert("Du er ikke innlogget"),!1;const{error:a}=await window.supa.from("user_shifts").delete().eq("id",s.id);if(a)return console.error("Error deleting shift:",a),alert("Kunne ikke slette vakt fra databasen"),!1;this.shifts.splice(e,1);const i=this.userShifts.findIndex(r=>r.id===s.id);return i!==-1&&this.userShifts.splice(i,1),this.refreshUI(this.shifts),!0}catch(o){return console.error("Error in deleteShift:",o),alert("En feil oppstod ved sletting av vakt"),!1}},async clearAllShifts(){if(confirm("Er du sikker på at du vil slette alle vakter? Dette kan ikke angres."))try{const{data:e}=await window.supa.auth.getClaims(),t=await guardedUserId();if(!t)return;const{error:s}=await window.supa.from("user_shifts").delete().eq("user_id",t);if(s){console.error("Error deleting shifts:",s),alert("Kunne ikke slette vakter fra databasen");return}this.shifts=[],this.userShifts=[],this.updateDisplay(),window.chatbox&&window.chatbox.clear&&window.chatbox.clear(),alert("Alle vakter er slettet")}catch(e){console.error("Error in clearAllShifts:",e),alert("En feil oppstod ved sletting av vakter")}},async clearAllData(){if(confirm("Er du sikker på at du vil slette alle vakter og innstillinger? Dette kan ikke angres."))try{const{data:e}=await window.supa.auth.getClaims(),t=await guardedUserId();if(!t)return;const{error:s}=await window.supa.from("user_shifts").delete().eq("user_id",t);s&&console.error("Error deleting shifts:",s);const{error:o}=await window.supa.from("user_settings").delete().eq("user_id",t);o&&console.error("Error deleting settings:",o),this.shifts=[],this.userShifts=[],this.setDefaultSettings(),this.updateSettingsUI(),this.updateDisplay(),window.chatbox&&window.chatbox.clear&&window.chatbox.clear(),alert("Alle data er slettet")}catch(e){console.error("Error in clearAllData:",e),alert("En feil oppstod ved sletting av data")}},editShift(e){const t=this.shifts.find(s=>s.id===e);if(!t){console.error("Shift not found:",e);return}this.editingShift=t,this.closeShiftDetails(),this.toggleEmployeeSelectorsVisibility(this.currentView==="employees"),setTimeout(()=>{this.openEditModal(t)},200)},openEditModal(e){const t=document.getElementById("editShiftModal");if(t){t.style.display="flex",t.classList.add("active"),this.populateEditForm(e),this.updateEmployeeAssignmentUIInEditModal?.(e);const s=document.querySelector(".header");s&&s.classList.add("hidden");const o=document.querySelector(".floating-action-bar"),n=document.querySelector(".floating-action-bar-backdrop");o&&(o.style.display="none"),n&&(n.style.display="none");const a=t.querySelector(".modal-backdrop");a&&(a.onclick=()=>this.closeEditShift());const i=r=>{r.key==="Escape"&&this.closeEditShift()};document.addEventListener("keydown",i),t.dataset.keydownHandler="attached"}},closeEditShift(){const e=document.getElementById("editShiftModal");if(e){e.style.display="none",e.classList.remove("active");const t=document.querySelector(".header");t&&t.classList.remove("hidden"),e.dataset.keydownHandler&&(document.removeEventListener("keydown",n=>{n.key==="Escape"&&this.closeEditShift()}),delete e.dataset.keydownHandler);const s=document.querySelector(".floating-action-bar"),o=document.querySelector(".floating-action-bar-backdrop");s&&(s.style.display=""),o&&(o.style.display=""),this.editingShift=null,this.editSelectedDate=null,document.getElementById("editShiftForm").reset(),document.querySelectorAll("#editDateGrid .date-cell").forEach(n=>{n.classList.remove("selected")})}},populateEditForm(e){this.populateEditTimeSelects(),this.populateEditDateGrid(),this.editSelectedDate=new Date(e.date);const[t,s]=e.startTime.split(":"),[o,n]=e.endTime.split(":");document.getElementById("editStartHour").value=t,document.getElementById("editStartMinute").value=s||"00",document.getElementById("editEndHour").value=o,document.getElementById("editEndMinute").value=n||"00",this.populateEmployeeSelectors();const a=document.getElementById("editEmployeeSelect");a&&e.employee_id&&(a.value=e.employee_id),setTimeout(()=>{const i=e.date.getDate(),r=document.querySelector(`#editDateGrid .date-cell[data-day="${i}"]`);r&&r.classList.add("selected")},100)},updateEmployeeAssignmentUIInEditModal(e){try{const t=document.getElementById("editShiftModal");if(!t)return;const s=t.querySelector("#editShiftForm");if(!s)return;const o=document.getElementById("editSelectedEmployeePill");if(o&&o.remove(),!(this.currentView==="employees"))return;const a=this.selectedEmployeeId||e?.employee_id||null,i=a&&this.employees.find(l=>l.id===a)||null,r=t.querySelector("#editEmployeeSelect"),c=r?.closest(".form-group")||r?.parentElement;if(c&&(c.style.display="none"),i){const l=document.createElement("div");l.id="editSelectedEmployeePill",l.className="selected-employee-pill",l.style.cssText="display:flex;align-items:center;gap:8px;padding:10px 12px;border-radius:9999px;background:var(--bg-secondary);border:1px solid var(--border-color);margin:8px 0;";const d=document.createElement("span");d.style.cssText=`width:10px;height:10px;border-radius:9999px;background:${this.getEmployeeDisplayColor?.(i)||i.display_color||"#999"};display:inline-block;`;const u=document.createElement("span");u.textContent=i.name,u.style.fontWeight="600",l.appendChild(d),l.appendChild(u),s.insertBefore(l,s.firstChild),r&&(r.value=i.id),l.dataset.boundEdit||(l.style.cursor="pointer",l.setAttribute("role","button"),l.setAttribute("tabindex","0"),l.title="Rediger ansatt",l.addEventListener("click",h=>{try{h.preventDefault(),h.stopPropagation()}catch{}this.showEditEmployeeModal(i)}),l.addEventListener("keydown",h=>{(h.key==="Enter"||h.key===" ")&&(h.preventDefault(),this.showEditEmployeeModal(i))}),l.dataset.boundEdit="1")}}catch(t){console.warn("updateEmployeeAssignmentUIInEditModal error:",t)}},populateEditTimeSelects(){if(this.directTimeInput)this.replaceEditTimeDropdownsWithInputs();else{this.ensureEditTimeDropdowns();const e=Array.from({length:24},(s,o)=>`<option value="${o.toString().padStart(2,"0")}">${o.toString().padStart(2,"0")}</option>`).join("");let t;this.fullMinuteRange?t=Array.from({length:60},(s,o)=>`<option value="${o.toString().padStart(2,"0")}">${o.toString().padStart(2,"0")}</option>`).join(""):t=["00","15","30","45"].map(s=>`<option value="${s}">${s}</option>`).join(""),document.getElementById("editStartHour").innerHTML='<option value="">Fra time</option>'+e,document.getElementById("editStartMinute").innerHTML='<option value="">Fra minutt</option>'+t,document.getElementById("editEndHour").innerHTML='<option value="">Til time</option>'+e,document.getElementById("editEndMinute").innerHTML='<option value="">Til minutt</option>'+t}},replaceEditTimeDropdownsWithInputs(){[{id:"editStartHour",placeholder:"Fra time (HH)"},{id:"editStartMinute",placeholder:"Fra minutt (MM)"},{id:"editEndHour",placeholder:"Til time (HH)"},{id:"editEndMinute",placeholder:"Til minutt (MM)"}].forEach(t=>{const s=document.getElementById(t.id);if(s&&s.tagName==="SELECT"){const o=s.value,n=document.createElement("input");n.type="text",n.id=t.id,n.className="form-control time-input",n.placeholder=t.placeholder,n.maxLength=2,n.pattern="[0-9]{2}",n.value=o,n.addEventListener("input",a=>{let i=a.target.value.replace(/\D/g,"");if(i.length>2&&(i=i.slice(0,2)),t.id.includes("Hour")){const r=parseInt(i);i.length===2&&r>23&&(i=i.slice(0,1))}else{const r=parseInt(i);i.length===2&&r>59&&(i=i.slice(0,1))}a.target.value=i}),n.addEventListener("blur",a=>{a.target.value.length===1&&(a.target.value="0"+a.target.value)}),s.replaceWith(n)}})},ensureEditTimeDropdowns(){["editStartHour","editStartMinute","editEndHour","editEndMinute"].forEach(t=>{const s=document.getElementById(t);if(s&&s.tagName==="INPUT"){s.value;const o=document.createElement("select");o.id=t,o.className="form-control",s.replaceWith(o)}})},populateEditDateGrid(){const e=document.getElementById("editDateGrid");if(!e)return;e.innerHTML="";const t=this.currentYear,s=this.currentMonth-1,o=new Date(t,s,1),n=new Date(o),a=o.getDay()===0?6:o.getDay()-1;n.setDate(n.getDate()-a);const i=this.shifts.filter(l=>l.date.getMonth()===s&&l.date.getFullYear()===t),r=new Set;i.forEach(l=>{r.add(l.date.getDate())});const c=document.createElement("div");c.textContent="",c.className="week-number header",e.appendChild(c),["M","T","O","T","F","L","S"].forEach(l=>{const d=document.createElement("div");d.textContent=l,d.style.cssText="font-weight:600;font-size:12px;color:var(--text-secondary);text-align:center;padding:8px;",e.appendChild(d)});for(let l=0;l<42;l++){if(l%7===0){const m=new Date(n);m.setDate(n.getDate()+l);const y=this.getISOWeekNumber(m),f=document.createElement("div");f.className="week-number",f.textContent=y,e.appendChild(f)}const d=new Date(n);d.setDate(n.getDate()+l);const u=document.createElement("div");u.className="date-cell";const h=document.createElement("div");if(h.className="date-cell-content",h.textContent=d.getDate(),d.getMonth()===s&&r.has(d.getDate())){const m=document.createElement("div");m.className="shift-indicator-dot",h.appendChild(m),u.classList.add("has-shift")}const v=new Date;if(d.getDate()===v.getDate()&&d.getMonth()===v.getMonth()&&d.getFullYear()===v.getFullYear()&&u.classList.add("current-date"),u.appendChild(h),u.dataset.day=d.getDate(),d.getMonth()!==s)u.classList.add("disabled");else{const m=d.getDay();m===0?u.classList.add("sunday"):m===6?u.classList.add("saturday"):u.classList.add("weekday"),u.addEventListener("click",()=>{document.querySelectorAll("#editDateGrid .date-cell").forEach(y=>y.classList.remove("selected")),u.classList.add("selected"),this.editSelectedDate=new Date(d)})}e.appendChild(u)}},async updateShift(){if(!this.editingShift){console.error("No shift being edited"),alert("Ingen vakt valgt for redigering");return}try{if(!this.editSelectedDate){alert("Vennligst velg en dato");return}const e=document.getElementById("editStartHour").value,t=document.getElementById("editStartMinute").value||"00",s=document.getElementById("editEndHour").value,o=document.getElementById("editEndMinute").value||"00";if(!e||!s){alert("Vennligst fyll ut arbeidstid");return}const n=`${this.editSelectedDate.getFullYear()}-${(this.editSelectedDate.getMonth()+1).toString().padStart(2,"0")}-${this.editSelectedDate.getDate().toString().padStart(2,"0")}`,a=`${e}:${t}`,i=`${s}:${o}`;if(this.currentView==="employees"){const{data:{session:f}}=await window.supa.auth.getSession();if(!f){alert("Du er ikke innlogget");return}const D={Authorization:`Bearer ${f.access_token}`,"Content-Type":"application/json"},S=document.getElementById("editEmployeeSelect"),p=S&&S.value||null,g={shift_date:n,start_time:a,end_time:i};p&&(g.employee_id=p);let E=this.editingShift?.id||null;if(!E){const w=this.editingShift?.date instanceof Date?`${this.editingShift.date.getFullYear()}-${String(this.editingShift.date.getMonth()+1).padStart(2,"0")}-${String(this.editingShift.date.getDate()).padStart(2,"0")}`:n,b=this.editingShift?.employee_id||p||this.selectedEmployeeId||null;if(!b){alert("Kunne ikke finne ansatt for vakten. Oppdater siden og prøv igjen.");return}const C=new URLSearchParams({from:w,to:w,limit:"200",employee_id:b,bust:String(Date.now())}),T=await fetch(`${window.CONFIG.apiBase}/employee-shifts?${C.toString()}`,{headers:D,cache:"no-store"});if(!T.ok){alert("Kunne ikke hente eksisterende vakt for oppdatering.");return}const{shifts:I=[]}=await T.json().catch(()=>({shifts:[]})),x=this.editingShift?.startTime,L=this.editingShift?.endTime;let M=I.find(B=>B.start_time===x&&B.end_time===L);if(!M&&I.length===1&&(M=I[0]),!M||!M.id){alert("Fant ikke vakten å oppdatere. Last inn på nytt og prøv igjen.");return}E=M.id}const k=await fetch(`${window.CONFIG.apiBase}/employee-shifts/${E}`,{method:"PUT",headers:D,body:JSON.stringify(g)});if(!k.ok){const w=await k.json().catch(()=>({}));console.error("updateShift (employee) failed:",w),alert(w.error||"Kunne ikke oppdatere vakt");return}await this.fetchAndDisplayEmployeeShifts?.(),this.closeEditShift(),alert("Vakt oppdatert!");return}const{data:r}=await window.supa.auth.getClaims();if(!!!r){alert("Feil ved autentisering");return}const l=this.editSelectedDate.getDay(),d=l===0?2:l===6?1:0,u={shift_date:n,start_time:a,end_time:i,shift_type:d,series_id:null},{data:h,error:v}=await window.supa.from("user_shifts").update(u).eq("id",this.editingShift.id).eq("user_id",user.id).select().single();if(v){console.error("updateShift: Database error when updating shift:",v),alert(`Kunne ikke oppdatere vakt i databasen: ${v.message}`);return}const m=this.editingShift;m.date=new Date(this.editSelectedDate),m.startTime=a,m.endTime=i,m.type=d,m.seriesId=null;const y=this.userShifts.findIndex(f=>f.id===m.id);y!==-1&&(this.userShifts[y]={...m}),this.shifts=[...this.userShifts],this.refreshUI(this.shifts),this.closeEditShift(),alert("Vakt oppdatert!")}catch(e){console.error("updateShift: Critical error:",e),alert(`En uventet feil oppstod: ${e.message}`)}},showRecurringIntroduction(){this.closeSettings(!1),this.closeAddShiftModal(),this.closeEditShift(),document.body.insertAdjacentHTML("beforeend",`
            <div id="recurringIntroModal" class="modal" style="display: flex;">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title">✨ Ny funksjon: Gjentakende vakter</h2>
                    </div>
                    <div class="modal-body" style="padding: 20px;">
                        <div style="margin-bottom: 16px;">
                            <p style="margin-bottom: 12px; font-size: 15px;">Vi har lagt til en ny måte å legge inn faste vakter på!</p>

                            <div style="background: var(--bg-secondary); padding: 12px; border-radius: 8px; margin-bottom: 12px;">
                                <h4 style="margin: 0 0 8px 0; color: var(--accent); font-size: 14px;">Slik fungerer det:</h4>
                                <ul style="margin: 0; padding-left: 16px; line-height: 1.4; font-size: 14px; text-align: left;">
                                    <li>Trykk på "Legg til vakt"-knappen</li>
                                    <li>Velg "Gjentakende" i stedet for "Enkel"</li>
                                    <li>Bestem hvor ofte vakten gjentas</li>
                                    <li>Systemet legger til alle vaktene automatisk</li>
                                </ul>
                            </div>

                            <div style="background: var(--accent-light); padding: 12px; border-radius: 8px; border-left: 4px solid var(--accent);">
                                <p style="margin: 0; font-weight: 500; color: var(--text-primary); line-height: 1.4; font-size: 14px;">
                                    💡 <strong>Tips:</strong> Har du en fast vakt som gjentar seg?
                                    Bruk "Gjentakende" funksjonen så slipper du å legge inn den samme vakten gang på gang!
                                </p>
                            </div>
                        </div>

                        <div class="form-actions" style="margin-top: 16px;">
                            <button class="btn btn-primary" onclick="app.dismissRecurringIntro()" style="width: 100%; max-width: 200px; margin: 0 auto; display: block;">
                                Forstått, takk!
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `),this.recurringIntroKeyHandler=t=>{t.key==="Escape"&&this.dismissRecurringIntro()},document.addEventListener("keydown",this.recurringIntroKeyHandler)},async dismissRecurringIntro(){this.hasSeenRecurringIntro||(this.hasSeenRecurringIntro=!0,this.saveToLocalStorage(),await this.saveSettingsToSupabase());const e=document.getElementById("recurringIntroModal");e&&e.remove(),this.recurringIntroKeyHandler&&(document.removeEventListener("keydown",this.recurringIntroKeyHandler),this.recurringIntroKeyHandler=null)},checkAndShowRecurringIntro(){if(!this.hasSeenRecurringIntro&&(this.userShifts.length>0||this.userShifts.length===0)){const t=this.userShifts.length>0?1500:5e3;setTimeout(()=>{this.showRecurringIntroduction()},t)}},setupTabBarEventListeners(){document.querySelectorAll(".tab-bar .tab-btn[data-view]").forEach(t=>{t.addEventListener("click",s=>{const o=t.getAttribute("data-view");o&&this.switchToView(o)})})},switchToView(e){if(!new Set(["dashboard","stats","chatgpt","employees"]).has(e)){console.warn("switchToView: ignoring invalid view",e);return}if(document.querySelectorAll(".tab-btn").forEach(o=>{o.classList.toggle("active",o.getAttribute("data-view")===e)}),e!=="dashboard"){const o=document.querySelector(".total-card"),n=document.querySelector(".next-shift-card"),a=document.querySelector(".next-payroll-card"),i=document.querySelector(".dashboard-month-nav"),r=document.querySelector(".floating-action-bar");o&&(o.style.display="none"),n&&(n.style.display="none"),a&&(a.style.display="none"),i&&(i.style.display="none"),r&&(r.style.display="none")}switch(this.cleanupAllViews(),e){case"dashboard":this.showDashboardView();break;case"stats":this.showStatsView();break;case"chatgpt":this.showChatGPTView();break;case"employees":this.showEmployeesView();break}},cleanupAllViews(){document.body.classList.remove("stats-view","chatbox-view","employees-view"),this.employeeCarousel&&this.employeeCarousel.cleanup?.();const t=document.querySelector(".chatbox-container"),s=document.querySelector(".employees-container"),o=document.querySelector(".dashboard-stats-container");if(t){t.style.display="none";const n=document.getElementById("chatboxPill"),a=document.getElementById("chatboxExpandedContent"),i=document.getElementById("chatboxClose");n&&n.classList.remove("expanded"),a&&(a.style.display="none"),i&&(i.style.display="none")}if(s&&(s.style.display="none"),o){const n=document.getElementById("weeklyHoursChart"),a=document.querySelector(".statistics-section");if(n&&a){const i=a.querySelector(".statistics-content");i&&(i.appendChild(n),console.log("Moved chart back to statistics section during cleanup"))}o.remove()}this.ensureMonthPickerVisibility()},ensureMonthPickerVisibility(){const e=document.querySelector(".dashboard-month-nav");e&&(e.style.display="flex",e.style.visibility="visible",e.style.opacity="1",e.style.position="relative",e.style.left="auto",e.style.height="auto",e.style.width="auto")},showDashboardView(){document.body.classList.remove("stats-view","chatbox-view","employees-view"),this.currentView="dashboard",this.selectedEmployeeId=null,localStorage.removeItem("selectedEmployeeId"),this.shifts=[...this.userShifts];const t=document.querySelector(".total-card"),s=document.querySelector(".next-shift-card"),o=document.querySelector(".next-payroll-card"),n=document.querySelector(".floating-action-bar"),a=document.querySelector(".chatbox-container");if(t&&(t.style.display=""),s&&(s.style.display=""),o&&(o.style.display=""),this.ensureMonthPickerVisibility(),n&&(n.style.display="flex"),a){a.style.display="none";const r=document.getElementById("chatboxPill"),c=document.getElementById("chatboxExpandedContent");r&&r.classList.remove("expanded"),c&&(c.style.display="none")}const i=document.querySelector(".dashboard-stats-container");if(i){const r=document.getElementById("weeklyHoursChart"),c=document.querySelector(".statistics-section");if(r&&c){const l=c.querySelector(".statistics-content");l&&(l.appendChild(r),console.log("Moved chart back to statistics section from dashboard view"))}i.remove()}this.updateDisplay()},async fetchAndDisplayEmployeeShifts(){try{const{data:{session:e}}=await window.supa.auth.getSession();if(!e){console.warn("No session for employee-shifts fetch");return}const t={Authorization:`Bearer ${e.access_token}`},s=new URLSearchParams;this.selectedEmployeeId&&s.set("employee_id",this.selectedEmployeeId);const o=`${this.currentYear}-${String(this.currentMonth).padStart(2,"0")}-01`,n=new Date(this.currentYear,this.currentMonth,0),a=`${n.getFullYear()}-${String(n.getMonth()+1).padStart(2,"0")}-${String(n.getDate()).padStart(2,"0")}`;s.set("from",o),s.set("to",a),s.set("limit","200"),s.set("bust",String(Date.now()));const i=await fetch(`${window.CONFIG.apiBase}/employee-shifts?${s.toString()}`,{headers:t,cache:"no-store"});if(!i.ok){const c=await i.json().catch(()=>({}));console.error("Failed to fetch employee shifts:",c);return}const{shifts:r}=await i.json();this.shifts=(r||[]).map(c=>({id:c.id,date:new Date(c.shift_date+"T00:00:00.000Z"),startTime:c.start_time,endTime:c.end_time,type:(()=>{const l=new Date(c.shift_date+"T00:00:00Z").getDay();return l===0?2:l===6?1:0})(),seriesId:null,employee_id:c.employee_id,employee:this.employees.find(l=>l.id===c.employee_id)||null,hourly_wage_snapshot:Number(c.hourly_wage_snapshot)})),this.updateHeader(),this.updateStats(!1),this.updateWeeklyHoursChart(),this.updateShiftList(),this.updateShiftCalendar(),this.currentView==="employees"&&this.renderEmployeeWorkSummary?.()}catch(e){console.error("fetchAndDisplayEmployeeShifts error:",e)}},showStatsView(){const e=document.body;e.classList.remove("chatbox-view","employees-view"),e.classList.add("stats-view"),this.currentView="stats",this.selectedEmployeeId=null,localStorage.removeItem("selectedEmployeeId"),this.shifts=[...this.userShifts],this.dashboardView="stats",this.applyDashboardView(),this.updateDisplay()},showChatGPTView(){const e=document.body;e.classList.remove("stats-view","employees-view"),e.classList.add("chatbox-view"),this.currentView="chatgpt",this.selectedEmployeeId=null,localStorage.removeItem("selectedEmployeeId"),this.shifts=[...this.userShifts];const t=document.querySelector(".chatbox-container");t&&(t.style.display="block"),this.ensureMonthPickerVisibility(),this.expandChatboxForTabView(),this.updateDisplay()},expandChatboxForTabView(){const e=document.getElementById("chatboxPill"),t=document.getElementById("chatboxExpandedContent"),s=document.getElementById("chatboxClose"),o=document.getElementById("chatboxLog");if(e&&t){e.classList.add("expanded"),t.style.display="block",s&&(s.style.display="block"),o&&o.children.length===0&&this.addChatGreetingMessage();const n=document.getElementById("chatboxInput");n&&setTimeout(()=>{n.focus()},100)}},addChatGreetingMessage(){const e=document.getElementById("chatboxLog");if(!e)return;const t=document.getElementById("userNickname"),o=`Hei ${t?t.textContent:"Bruker"}! 👋

Jeg er LønnAI, din personlige assistent for vaktregistrering. Jeg kan hjelpe deg med å:

• Registrere enkelvakter
• Opprette vaktserier
• Svare på spørsmål om lønn og tillegg
• Gi tips om effektiv vaktplanlegging

Hva kan jeg hjelpe deg med i dag?`;if(window.chatbox&&window.chatbox.appendMessage)window.chatbox.appendMessage("assistant",o,{streaming:!0,streamSpeed:25});else{const n=document.createElement("div");if(n.className="chatbox-message assistant",typeof streamText=="function")n.innerHTML="",e.appendChild(n),streamText(n,o,25);else{if(typeof marked<"u"&&typeof DOMPurify<"u"){const a=DOMPurify.sanitize(marked.parse(o));n.innerHTML=a}else n.textContent=o;e.appendChild(n)}setTimeout(()=>{e.scrollTop=e.scrollHeight},50)}},showEmployeesView(){const e=document.body;e.classList.remove("stats-view","chatbox-view"),e.classList.add("employees-view"),this.ensureMonthPickerVisibility();try{const t=document.querySelector(".total-card"),s=document.querySelector(".next-shift-card"),o=document.querySelector(".next-payroll-card");t&&(t.style.display="none"),s&&(s.style.display="none"),o&&(o.style.display="none")}catch(t){console.warn("Could not hide dashboard cards in employees view",t)}this.showEmployeesPlaceholder(),this.employees.length===0&&!this.employeesLoading&&this.loadEmployees().catch(t=>{console.error("Failed to load employees:",t)}),this.currentView="employees",this.shifts=[],this.updateDisplay(),this.fetchAndDisplayEmployeeShifts?.(),this.employeeCarousel&&this.employeeCarousel.preloadAvatars?.()},showEmployeesPlaceholder(){let e=document.querySelector(".employees-container");if(!e){e=document.createElement("div"),e.className="employees-container",e.innerHTML=`
                <div class="employees-header">
                    <h2>Ansatte</h2>
                    <div class="employees-summary" id="employeesSummary"></div>
                </div>
                <div class="employee-carousel-container" id="employeeCarouselContainer">
                    <!-- Employee carousel will be rendered here -->
                </div>
                <div class="employees-content" id="employeesContent">
                    <div class="employee-work-summary" id="employeeWorkSummary"></div>
                </div>
            `;const t=document.querySelector(".tab-bar-container");t&&t.parentNode.insertBefore(e,t.nextSibling)}e.style.display="block",this.initializeEmployeeCarousel()},async initializeEmployeeCarousel(){try{const e=document.getElementById("employeeCarouselContainer");if(!e)return;const{EmployeeCarousel:t}=await Y(async()=>{const{EmployeeCarousel:s}=await import("./employeeCarousel-BjYjykjS.js");return{EmployeeCarousel:s}},__vite__mapDeps([0,1,2,3,4]));this.employeeCarousel&&this.employeeCarousel.destroy(),this.employeeCarousel=new t(e,this),this.employees.length===0&&!this.employeesLoading&&await this.loadEmployees(),this.updateEmployeesSummary()}catch(e){console.error("Error initializing employee carousel:",e)}},updateEmployeeCarousel(){this.employeeCarousel&&this.employeeCarousel.update(),this.updateEmployeesSummary()},updateEmployeesSummary(){const e=document.getElementById("employeesSummary");if(!e)return;const t=this.employees.filter(o=>!o.archived_at);this.getSelectedEmployee();const s=`${t.length} aktive ansatte`;e.textContent=s,this.currentView==="employees"&&this.renderEmployeeWorkSummary?.()},updateTabBarVisibility(){const e=document.getElementById("tabAnsatte");e&&(e.style.display=this.isWageCaregiver?"flex":"none")},setupChatboxCloseOverride(){const e=document.getElementById("chatboxClose");if(e){const t=e.cloneNode(!0);e.parentNode.replaceChild(t,e),t.addEventListener("click",s=>{s.stopPropagation(),s.preventDefault(),this.switchToView("dashboard")})}},toggleWageCaregiver(){const e=document.getElementById("isWageCaregiverToggle");e&&(this.isWageCaregiver=e.checked,this.saveSettingsToSupabase(),this.saveToLocalStorage(),this.updateTabBarVisibility())},exportData(e){try{const t={shifts:this.shifts.map(s=>({id:s.id,date:s.date.toISOString(),startTime:s.startTime,endTime:s.endTime,type:s.type,seriesId:s.seriesId||null})),settings:{usePreset:this.usePreset,customWage:this.customWage,currentWageLevel:this.currentWageLevel,customBonuses:this.customBonuses,pauseDeduction:this.pauseDeduction,fullMinuteRange:this.fullMinuteRange,directTimeInput:this.directTimeInput,monthlyGoal:this.monthlyGoal,currencyFormat:this.currencyFormat},exportDate:new Date().toISOString(),version:"1.0"};e==="csv"?this.exportAsCSV(t):e==="pdf"?this.exportAsPDF(t):this.exportAsJSON(t)}catch(t){console.error("Error exporting data:",t),alert("Kunne ikke eksportere data. Prøv igjen.")}},exportAsCSV(e){const t=[["Dato","Dag","Start","Slutt","Timer","Grunnlønn","Tillegg","Totalt","Type","Serie"].join(","),...e.shifts.map(s=>{const o=new Date(s.date),n=this.calculateShift({...s,date:o});return[o.toLocaleDateString("no-NO"),this.WEEKDAYS[o.getDay()],s.startTime,s.endTime,n.hours.toFixed(2),n.baseWage.toFixed(2),n.bonus.toFixed(2),n.total.toFixed(2),s.type===0?"Ukedag":s.type===1?"Lørdag":"Søndag",s.seriesId?"Ja":"Nei"].join(",")})].join(`
`);this.downloadFile(t,"vaktdata.csv","text/csv")},exportAsJSON(e){const t=JSON.stringify(e,null,2);this.downloadFile(t,"vaktdata.json","application/json")},exportAsPDF(e){try{if(typeof window.jspdf?.jsPDF!="function"){alert("PDF-biblioteket (jsPDF) ble ikke funnet. Prøv å laste siden på nytt.");return}const{jsPDF:t}=window.jspdf,s=new t;s.setProperties({title:"Vaktrapport",subject:"Lønn og vaktdetaljer",author:"Vaktkalkulator",creator:"Vaktkalkulator"});const o=new Date().toLocaleDateString("no-NO",{year:"numeric",month:"long",day:"numeric"}),n=e.shifts.map(w=>({...w,date:new Date(w.date)}));let a=0,i=0,r=0,c=0;const l={weekday:0,saturday:0,sunday:0},d=n.map(w=>{const b=this.calculateShift(w);a+=b.hours,i+=b.total,r+=b.bonus,c+=b.baseWage;const C=w.type===0?"weekday":w.type===1?"saturday":"sunday";return l[C]++,{...w,calc:b}});d.sort((w,b)=>w.date-b.date);let u=20;const h=20,v=190,m=210,y=297,f=w=>u+w>y-20?(s.addPage(),u=20,!0):!1;if(s.setFontSize(20),s.setFont("helvetica","bold"),s.text("Vaktrapport",h,u),u+=15,s.setFontSize(10),s.setFont("helvetica","normal"),s.text(`Eksportert: ${o}`,h,u),u+=10,d.length>0){const w=d[0].date,b=d[d.length-1].date,C=`Periode: ${w.toLocaleDateString("no-NO")} - ${b.toLocaleDateString("no-NO")}`;s.text(C,h,u),u+=15}f(60),s.setFontSize(14),s.setFont("helvetica","bold"),s.text("Sammendrag",h,u),u+=10,s.setFontSize(10),s.setFont("helvetica","normal"),[["Totalt antall vakter:",n.length.toString()],["Totale timer:",a.toFixed(2)+" timer"],["Total grunnlønn:",this.formatCurrencyShort(c)+" kr"],["Totale tillegg:",this.formatCurrencyShort(r)+" kr"],["Total lønn:",this.formatCurrencyShort(i)+" kr"],["",""],["Vakter per type:",""],["  Ukedager:",l.weekday.toString()],["  Lørdager:",l.saturday.toString()],["  Søndager/helligdager:",l.sunday.toString()]].forEach(([w,b])=>{w&&(s.text(w,h,u),b&&s.text(b,h+60,u)),u+=5}),u+=10,f(50),s.setFontSize(14),s.setFont("helvetica","bold"),s.text("Detaljert vaktliste",h,u),u+=10,s.setFontSize(8),s.setFont("helvetica","bold");const S=["Dato","Dag","Start","Slutt","Timer","Grunnlønn","Tillegg","Totalt"],p=[25,20,15,15,15,25,25,25],g=[h];for(let w=1;w<p.length;w++)g.push(g[w-1]+p[w-1]);S.forEach((w,b)=>{s.text(w,g[b],u)}),u+=5,s.setLineWidth(.5),s.line(h,u,v,u),u+=5,s.setFont("helvetica","normal"),d.forEach(w=>{f(8),[w.date.toLocaleDateString("no-NO"),this.WEEKDAYS[w.date.getDay()].substring(0,3),w.startTime,w.endTime,w.calc.hours.toFixed(2),this.formatCurrencyShort(w.calc.baseWage),this.formatCurrencyShort(w.calc.bonus),this.formatCurrencyShort(w.calc.total)].forEach((C,T)=>{s.text(C,g[T],u)}),u+=5}),u+=5,s.setLineWidth(.5),s.line(h,u,v,u),u+=5,s.setFont("helvetica","bold"),s.text("Sum:",g[0],u),s.text(a.toFixed(2),g[4],u),s.text(this.formatCurrencyShort(c),g[5],u),s.text(this.formatCurrencyShort(r),g[6],u),s.text(this.formatCurrencyShort(i),g[7],u);const E=s.internal.getNumberOfPages();for(let w=1;w<=E;w++)s.setPage(w),s.setFontSize(8),s.setFont("helvetica","normal"),s.text(`Side ${w} av ${E}`,v-20,y-10),s.text("Generert av Vaktkalkulator",h,y-10);const k=`vaktrapport_${new Date().toISOString().split("T")[0]}.pdf`;s.save(k)}catch(t){console.error("Error generating PDF:",t),alert("Kunne ikke generere PDF. Prøv igjen eller bruk CSV-eksport.")}},downloadFile(e,t,s){const o=new Blob([e],{type:s}),n=URL.createObjectURL(o),a=document.createElement("a");a.href=n,a.download=t,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(n)},async importData(){const t=document.getElementById("importFile").files[0];if(!t){alert("Velg en fil å importere");return}const s=new FileReader;s.onload=async o=>{try{const n=o.target.result;if(t.name.endsWith(".json")){const a=JSON.parse(n);await this.importFromJSON(a)}else if(t.name.endsWith(".csv"))await this.importFromCSV(n);else{alert("Ikke støttet filformat. Bruk JSON eller CSV.");return}alert("Data importert successfully!"),this.updateDisplay()}catch(n){console.error("Error importing data:",n),alert("Kunne ikke importere data. Sjekk filformatet.")}},s.readAsText(t)},detectDuplicateShifts(e){const t=[],s=[];return e.forEach(o=>{const n=this.createShiftKey(o);this.shifts.some(i=>{const r=this.createShiftKey(i);return n===r})?s.push(o):t.push(o)}),{newShifts:t,duplicates:s}},createShiftKey(e){return`${`${e.date.getFullYear()}-${(e.date.getMonth()+1).toString().padStart(2,"0")}-${e.date.getDate().toString().padStart(2,"0")}`}_${e.startTime}_${e.endTime}_${e.type}`},getMonthShiftsKey(){const e=this.currentMonth-1,t=this.currentYear;return this.shifts.filter(o=>o.date.getMonth()===e&&o.date.getFullYear()===t).map(o=>this.createShiftKey(o)).join("|")},async saveImportedShiftsToSupabase(e){try{const{data:t}=await window.supa.auth.getClaims();if(!!!t)throw new Error("Du er ikke innlogget");const o=e.map(i=>{const r=`${i.date.getFullYear()}-${(i.date.getMonth()+1).toString().padStart(2,"0")}-${i.date.getDate().toString().padStart(2,"0")}`;return{user_id:user.id,shift_date:r,start_time:i.startTime,end_time:i.endTime,shift_type:i.type,series_id:i.seriesId||null}}),{data:n,error:a}=await window.supa.from("user_shifts").insert(o).select();if(a)throw console.error("Error saving imported shifts to Supabase:",a),new Error(`Kunne ikke lagre importerte vakter: ${a.message}`);n.forEach((i,r)=>{e[r].id=i.id})}catch(t){throw console.error("Error in saveImportedShiftsToSupabase:",t),t}},async importFromJSON(e){if(e.shifts&&Array.isArray(e.shifts)){const t=e.shifts.map(n=>({...n,date:new Date(n.date)}));t.forEach(n=>{n.id||(n.id=Date.now()+Math.random())});const{newShifts:s,duplicates:o}=this.detectDuplicateShifts(t);if(o.length>0){const n=o.length;if(!confirm(`Fant ${n} duplikat vakter som allerede eksisterer. Vil du fortsatt importere de ${s.length} nye vaktene?`))return}s.length>0&&(await this.saveImportedShiftsToSupabase(s),this.shifts=[...this.shifts,...s],this.userShifts=[...this.userShifts,...s])}e.settings&&confirm("Vil du også importere innstillinger? Dette vil overskrive dine nåværende innstillinger.")&&(Object.assign(this,e.settings),this.saveSettingsToSupabase(),this.updateSettingsUI())},async importFromCSV(e){const t=e.split(`
`),s=[];for(let a=1;a<t.length;a++){const i=t[a].trim();if(!i)continue;const r=i.split(",");if(r.length>=6){const c=r[0].split("."),l=new Date(parseInt(c[2]),parseInt(c[1])-1,parseInt(c[0])),d={id:Date.now()+Math.random(),date:l,startTime:r[2],endTime:r[3],type:r[8]==="Ukedag"?0:r[8]==="Lørdag"?1:2,seriesId:r[9]==="Ja"?"imported-series":null};s.push(d)}}const{newShifts:o,duplicates:n}=this.detectDuplicateShifts(s);if(n.length>0){const a=n.length;if(!confirm(`Fant ${a} duplikat vakter som allerede eksisterer. Vil du fortsatt importere de ${o.length} nye vaktene?`))return}o.length>0&&(await this.saveImportedShiftsToSupabase(o),this.shifts=[...this.shifts,...o],this.userShifts=[...this.userShifts,...o])},setupNewSettingsListeners(){const e=document.getElementById("currencyFormatToggle");e&&e.addEventListener("change",()=>{this.currencyFormat=e.checked,this.saveSettingsToSupabase(),this.updateDisplay()});const t=document.getElementById("defaultShiftsViewToggle");t&&t.addEventListener("change",()=>{this.defaultShiftsView=t.checked?"calendar":"list",this.saveSettingsToSupabase()});const s=document.getElementById("isWageCaregiverToggle"),o=document.querySelector("#isWageCaregiverToggle + .toggle-slider");s&&s.addEventListener("change",()=>{this.toggleWageCaregiver()}),s&&o&&o.addEventListener("click",n=>{n.preventDefault(),s.checked=!s.checked,this.toggleWageCaregiver()}),this.setupTabBarEventListeners(),this.setupChatboxCloseOverride()},setupExportPeriodOptions(){this.updateCurrentMonthLabel();const e=document.querySelectorAll('input[name="exportPeriod"]'),t=document.getElementById("customPeriodSection");e.forEach(o=>{o.addEventListener("change",()=>{if(o.value==="custom"){t.style.display="block";const n=document.getElementById("exportStartDate"),a=document.getElementById("exportEndDate");if(!n.value){const i=new Date,r=new Date(i.getFullYear(),i.getMonth(),1);n.value=r.toISOString().split("T")[0]}if(!a.value){const i=new Date,r=new Date(i.getFullYear(),i.getMonth()+1,0);a.value=r.toISOString().split("T")[0]}}else t.style.display="none"})});const s=document.querySelector('input[name="exportPeriod"]:checked');s&&s.value==="custom"&&(t.style.display="block")},updateCurrentMonthLabel(){const e=document.getElementById("currentMonthLabel");if(e){const t=this.MONTHS[this.currentMonth-1];e.textContent=`${t.charAt(0).toUpperCase()+t.slice(1)} ${this.currentYear}`}},exportDataWithPeriod(e){try{const t=document.querySelector('input[name="exportPeriod"]:checked');if(!t){alert("Vennligst velg en periode for eksport først.");return}const s=t.value;let o=[...this.shifts];if(s==="current")o=this.shifts.filter(a=>a.date.getMonth()===this.currentMonth-1&&a.date.getFullYear()===this.currentYear);else if(s==="custom"){const a=document.getElementById("exportStartDate").value,i=document.getElementById("exportEndDate").value;if(!a||!i){alert("Vennligst fyll ut både start- og sluttdato for egendefinert periode.");return}const r=new Date(a),c=new Date(i);if(r>c){alert("Startdato må være før sluttdato.");return}o=this.shifts.filter(l=>{const d=new Date(l.date);return d>=r&&d<=c})}if(o.length===0){alert("Ingen vakter funnet for den valgte perioden.");return}const n={shifts:o.map(a=>({id:a.id,date:a.date.toISOString(),startTime:a.startTime,endTime:a.endTime,type:a.type,seriesId:a.seriesId||null})),settings:{usePreset:this.usePreset,customWage:this.customWage,currentWageLevel:this.currentWageLevel,customBonuses:this.customBonuses,pauseDeduction:this.pauseDeduction,fullMinuteRange:this.fullMinuteRange,directTimeInput:this.directTimeInput,monthlyGoal:this.monthlyGoal,currencyFormat:this.currencyFormat},exportDate:new Date().toISOString(),exportPeriod:s,version:"1.0"};e==="csv"?this.exportAsCSV(n):e==="pdf"?this.exportAsPDF(n):this.exportAsJSON(n)}catch(t){console.error("Error exporting data:",t),alert("Kunne ikke eksportere data. Prøv igjen.")}},async importDataFromDataTab(){const e=document.getElementById("importFileData"),t=e.files[0];if(!t){alert("Velg en fil å importere");return}const s=new FileReader;s.onload=async o=>{try{const n=o.target.result;if(t.name.endsWith(".json")){const a=JSON.parse(n);await this.importFromJSON(a)}else if(t.name.endsWith(".csv"))await this.importFromCSV(n);else{alert("Ikke støttet filformat. Bruk JSON eller CSV.");return}alert("Data importert successfully!"),this.updateDisplay(),e.value=""}catch(n){console.error("Error importing data:",n),alert("Kunne ikke importere data. Sjekk filformatet.")}},s.readAsText(t)},openAddShiftModalWithDate(e){if(!e){this.openAddShiftModal();return}const t=new Date(e),s=t.getMonth()+1,o=t.getFullYear();this.openAddShiftModal(s,o),this.selectedDates=[new Date(t)],setTimeout(()=>{document.querySelectorAll("#dateGrid .date-cell").forEach(a=>{a.classList.remove("selected");const i=a.querySelector(".date-cell-content");i&&parseInt(i.textContent)===t.getDate()&&!a.classList.contains("disabled")&&a.classList.add("selected")}),this.updateSelectedDatesInfo()},10)},initializeEmployeeState(){try{const t=new URLSearchParams(window.location.search).get("employee"),s=localStorage.getItem("selectedEmployeeId");t!==null?this.selectedEmployeeId=t==="all"?null:t:s!==null&&this.currentView==="employees"?this.selectedEmployeeId=s==="null"?null:s:this.selectedEmployeeId=null,this.employeeCache.clear()}catch(e){console.error("Error initializing employee state:",e),this.selectedEmployeeId=null}},setSelectedEmployee(e){try{this.selectedEmployeeId=e,localStorage.setItem("selectedEmployeeId",e===null?"null":e);const t=new URL(window.location);e===null?t.searchParams.set("employee","all"):t.searchParams.set("employee",e),window.history.replaceState({},"",t),this.onEmployeeSelectionChange()}catch(t){console.error("Error setting selected employee:",t)}},getSelectedEmployee(){return this.selectedEmployeeId===null?null:this.employees.find(e=>e.id===this.selectedEmployeeId)||null},isEmployeeSelected(e){return this.selectedEmployeeId===e},isAllEmployeesSelected(){return this.selectedEmployeeId===null},onEmployeeSelectionChange(){console.log("Employee selection changed to:",this.selectedEmployeeId),this.applyEmployeeFilter?.(),this.updateEmployeeCarousel?.(),this.updateShiftList?.(),this.updateStats?.()},getEmployeeCache(e,t){const s=this.employeeCache.get(e);return s?s[t]:void 0},setEmployeeCache(e,t,s){this.employeeCache.has(e)||this.employeeCache.set(e,{}),this.employeeCache.get(e)[t]=s},clearEmployeeCache(e){this.employeeCache.delete(e)},clearAllEmployeeCaches(){this.employeeCache.clear()},async loadEmployees(e=!1){try{this.employeesLoading=!0,this.employeesError=null;const{employeeService:t}=await Y(async()=>{const{employeeService:o}=await import("./employeeService-caDyaWb2.js");return{employeeService:o}},[]),s=await t.fetchEmployees(e);this.employees=s,this.onEmployeesLoaded()}catch(t){console.error("Error loading employees:",t),this.employeesError=t.message,this.employees=[]}finally{this.employeesLoading=!1}},onEmployeesLoaded(){console.log("Employees loaded:",this.employees.length),this.updateEmployeeCarousel?.(),this.selectedEmployeeId&&!this.employees.find(e=>e.id===this.selectedEmployeeId)&&(console.warn('Selected employee no longer exists, resetting to "All"'),this.selectedEmployeeId=null),this.populateEmployeeFilterBar(),this.applyEmployeeFilter(),this.populateEmployeeSelectors(),this.updateEmployeeModals?.()},updateEmployeeModals(){console.log("Updating employee modals with new data")},async showCreateEmployeeModal(){try{const{EmployeeModal:e}=await Y(async()=>{const{EmployeeModal:t}=await import("./employeeModal-DEG7fEJC.js");return{EmployeeModal:t}},__vite__mapDeps([5,1,2,3,4]));this.employeeModal||(this.employeeModal=new e(this)),await this.employeeModal.showCreate()}catch(e){console.error("Error showing create employee modal:",e)}},async showEditEmployeeModal(e){try{const{EmployeeModal:t}=await Y(async()=>{const{EmployeeModal:s}=await import("./employeeModal-DEG7fEJC.js");return{EmployeeModal:s}},__vite__mapDeps([5,1,2,3,4]));this.employeeModal||(this.employeeModal=new t(this)),await this.employeeModal.showEdit(e)}catch(t){console.error("Error showing edit employee modal:",t)}},getEmployeeInitials(e){if(!e?.name)return"?";const t=e.name.trim().split(/\s+/);return t.length===1?t[0].substring(0,2).toUpperCase():(t[0][0]+t[t.length-1][0]).toUpperCase()},getEmployeeDisplayColor(e){return e?.display_color||"#6366f1"},async openCsvExportModal(e=null){const t=document.getElementById("csvExportModal");if(!t)return;if(this.employees.length===0&&!this.employeesLoading)try{await this.loadEmployees()}catch(c){console.warn("Could not load employees for CSV export:",c)}const s=document.getElementById("csvExportEmployeeSelect");if(s){s.innerHTML='<option value="">Alle ansatte</option>';const c=this.employees||[];c.filter(l=>!l.archived_at).forEach(l=>{const d=document.createElement("option");d.value=l.id,d.textContent=l.name,e&&l.id===e&&(d.selected=!0),s.appendChild(d)}),c.length===0&&console.info("No employees available for selection")}const o=new Date,n=new Date(o.getFullYear(),o.getMonth(),1),a=new Date(o.getFullYear(),o.getMonth()+1,0),i=document.getElementById("csvExportFromDate"),r=document.getElementById("csvExportToDate");i&&(i.value=n.toISOString().split("T")[0]),r&&(r.value=a.toISOString().split("T")[0]),t.classList.add("active")},closeCsvExportModal(){const e=document.getElementById("csvExportModal");e&&e.classList.remove("active")},async exportCsvReport(){try{const e=document.getElementById("csvExportEmployeeSelect")?.value||"",t=document.getElementById("csvExportFromDate")?.value||"",s=document.getElementById("csvExportToDate")?.value||"",o=new URLSearchParams;e&&o.append("employee_id",e),t&&o.append("from",t),s&&o.append("to",s);const a=`${window.CONFIG?.apiBase||window.location.origin}/reports/wages?${o.toString()}`;let i=null;try{const{data:{session:v}}=await window.supa.auth.getSession();i=v?.access_token}catch(v){console.error("Failed to get auth session:",v)}if(!i){alert("Du må være innlogget for å eksportere data");return}const r=await fetch(a,{method:"GET",headers:{Authorization:`Bearer ${i}`}});if(!r.ok)throw new Error(`Export failed: ${r.statusText}`);const c=await r.blob(),l=window.URL.createObjectURL(c),d=document.createElement("a");d.style.display="none",d.href=l;const u=new Date().toISOString().split("T")[0],h=e?document.getElementById("csvExportEmployeeSelect")?.options[document.getElementById("csvExportEmployeeSelect")?.selectedIndex]?.text.replace(/[^a-zA-Z0-9]/g,"_"):"alle_ansatte";d.download=`lønnsrapport_${h}_${u}.csv`,document.body.appendChild(d),d.click(),window.URL.revokeObjectURL(l),document.body.removeChild(d),this.closeCsvExportModal(),this.showNotification("CSV-rapport lastet ned","success")}catch(e){console.error("CSV export error:",e),alert("Kunne ikke eksportere CSV: "+e.message)}},showNotification(e,t="info"){const s=document.createElement("div");s.className=`notification notification-${t}`,s.textContent=e,s.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            background: ${t==="success"?"#10b981":"#3b82f6"};
            color: white;
            border-radius: 8px;
            z-index: 10000;
            animation: slideIn 0.3s ease-out;
        `,document.body.appendChild(s),setTimeout(()=>{s.style.animation="slideOut 0.3s ease-out",setTimeout(()=>{document.body.removeChild(s)},300)},3e3)}};export{oe as app};
