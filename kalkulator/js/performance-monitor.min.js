class PerformanceMonitor{constructor(){this.metrics={domQueries: 0,domQueryTime: 0,funcCalls: new Map(),memoryUsage: [],renderTimes: [],loadTimes: []};this.observers=[];this.isEnabled=window.location.search.includes('perf=true')||window.location.hostname==='localhost';if(this.isEnabled){this.init();}}init(){this.trackPageLoad();this.trackDOMMutations();this.startMemoryMonitoring();this.trackCoreWebVitals();}trackPageLoad(){window.addEventListener('load',()=>{const navigation=performance.getEntriesByType('navigation')[0];if(navigation){const loadTime=navigation.loadEventEnd-navigation.loadEventStart;const domContentLoaded=navigation.domContentLoadedEventEnd-navigation.domContentLoadedEventStart;const ttfb=navigation.responseStart-navigation.requestStart;this.metrics.loadTimes.push({timestamp: Date.now(),loadTime,domContentLoaded,ttfb});log.info('Page Load Performance',{loadTime: `${loadTime.toFixed(2)}ms`,domContentLoaded: `${domContentLoaded.toFixed(2)}ms`,ttfb: `${ttfb.toFixed(2)}ms`});}});}trackDOMMutations(){let mutationCount=0;const observer=new MutationObserver((mutations)=>{mutationCount+=mutations.length;if(mutations.length>10){log.warn('Heavy DOM mutations detected',{count: mutations.length,total: mutationCount});}});observer.observe(document.body,{childList: true,subtree: true,attributes: true});this.observers.push(observer);}startMemoryMonitoring(){if(!performance.memory)return;const checkMemory=()=>{const memory=performance.memory;const usage={timestamp: Date.now(),used: memory.usedJSHeapSize/1024/1024,total: memory.totalJSHeapSize/1024/1024,limit: memory.jsHeapSizeLimit/1024/1024};this.metrics.memoryUsage.push(usage);if(this.metrics.memoryUsage.length>100){this.metrics.memoryUsage.shift();}if(usage.used>50){log.warn('High memory usage detected',{used: `${usage.used.toFixed(2)}MB`,total: `${usage.total.toFixed(2)}MB`});}};setInterval(checkMemory,30000);checkMemory();}trackCoreWebVitals(){new PerformanceObserver((list)=>{const entries=list.getEntries();const lastEntry=entries[entries.length-1];log.info('LCP:',`${lastEntry.startTime.toFixed(2)}ms`);}).observe({entryTypes: ['largest-contentful-paint']});new PerformanceObserver((list)=>{const entries=list.getEntries();entries.forEach(entry=>{log.info('FID:',`${entry.processingStart-entry.startTime.toFixed(2)}ms`);});}).observe({entryTypes: ['first-input']});let clsScore=0;new PerformanceObserver((list)=>{const entries=list.getEntries();entries.forEach(entry=>{if(!entry.hadRecentInput){clsScore+=entry.value;}});log.info('CLS:',clsScore.toFixed(4));}).observe({entryTypes: ['layout-shift']});}wrapDOMQuery(originalFn,methodName){return function(...args){const start=performance.now();const result=originalFn.apply(this,args);const end=performance.now();window.perfMonitor.metrics.domQueries++;window.perfMonitor.metrics.domQueryTime+=(end-start);if(end-start>5){log.warn(`Slow DOM query(${methodName}):`,{time: `${(end-start).toFixed(2)}ms`,selector: args[0]});}return result;};}trackFunction(fn,name){return(...args)=>{const start=performance.now();const result=fn.apply(this,args);const end=performance.now();const duration=end-start;if(!this.metrics.funcCalls.has(name)){this.metrics.funcCalls.set(name,{count: 0,totalTime: 0,maxTime: 0,minTime: Infinity});}const funcStats=this.metrics.funcCalls.get(name);funcStats.count++;funcStats.totalTime+=duration;funcStats.maxTime=Math.max(funcStats.maxTime,duration);funcStats.minTime=Math.min(funcStats.minTime,duration);if(duration>10){log.warn(`Slow function call(${name}):`,{time: `${duration.toFixed(2)}ms`,args: args.length});}return result;};}trackRender(componentName,renderFn){const start=performance.now();const result=renderFn();const end=performance.now();const duration=end-start;this.metrics.renderTimes.push({component: componentName,duration,timestamp: Date.now()});if(this.metrics.renderTimes.length>50){this.metrics.renderTimes.shift();}if(duration>16){log.warn(`Slow render(${componentName}):`,`${duration.toFixed(2)}ms`);}return result;}getSummary(){const summary={domQueries:{count: this.metrics.domQueries,totalTime: this.metrics.domQueryTime,averageTime: this.metrics.domQueries>0 ? this.metrics.domQueryTime/this.metrics.domQueries : 0},functions:{},memory:{current: this.metrics.memoryUsage.length>0 ? this.metrics.memoryUsage[this.metrics.memoryUsage.length-1] : null,peak: this.metrics.memoryUsage.reduce((max,usage)=>usage.used>max ? usage.used : max,0)},renders:{count: this.metrics.renderTimes.length,averageTime: this.metrics.renderTimes.length>0 ? this.metrics.renderTimes.reduce((sum,render)=>sum+render.duration,0)/this.metrics.renderTimes.length : 0}};this.metrics.funcCalls.forEach((stats,name)=>{summary.functions[name]={count: stats.count,totalTime: stats.totalTime,averageTime: stats.totalTime/stats.count,maxTime: stats.maxTime,minTime: stats.minTime};});return summary;}logSummary(){const summary=this.getSummary();log.group('Performance Summary',()=>{log.info('DOM Queries:',summary.domQueries);log.info('Memory Usage:',summary.memory);log.info('Render Performance:',summary.renders);if(Object.keys(summary.functions).length>0){log.info('Function Performance:',summary.functions);}});}reset(){this.metrics={domQueries: 0,domQueryTime: 0,funcCalls: new Map(),memoryUsage: [],renderTimes: [],loadTimes: []};}setEnabled(enabled){this.isEnabled=enabled;if(!enabled){this.observers.forEach(observer=>observer.disconnect());this.observers=[];}else if(this.observers.length===0){this.init();}}}window.perfMonitor=new PerformanceMonitor();if(window.perfMonitor.isEnabled){const originalQuerySelector=Document.prototype.querySelector;const originalQuerySelectorAll=Document.prototype.querySelectorAll;const originalGetElementById=Document.prototype.getElementById;Document.prototype.querySelector=window.perfMonitor.wrapDOMQuery(originalQuerySelector,'querySelector');Document.prototype.querySelectorAll=window.perfMonitor.wrapDOMQuery(originalQuerySelectorAll,'querySelectorAll');Document.prototype.getElementById=window.perfMonitor.wrapDOMQuery(originalGetElementById,'getElementById');}if(typeof module!=='undefined'&&module.exports){module.exports=PerformanceMonitor;}