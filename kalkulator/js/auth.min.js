let supa;let isInPasswordRecovery=false;document.addEventListener('DOMContentLoaded',async function(){supa=window.supabase.createClient(window.CONFIG.supabase.url,window.CONFIG.supabase.anonKey);window.supa=supa;await new Promise(resolve=>setTimeout(resolve,100));supa.auth.onAuthStateChange(async(event,session)=>{if(event==='PASSWORD_RECOVERY'){isInPasswordRecovery=true;document.body.style.visibility='visible';setTimeout(()=>showPasswordResetForm(),50);return;}if(event==='SIGNED_IN'&&(isInRecoveryMode()||sessionStorage.getItem('supabase_recovery_flow')==='true')){isInPasswordRecovery=true;document.body.style.visibility='visible';setTimeout(()=>showPasswordResetForm(),50);return;}});try{const{data:{session}}=await supa.auth.getSession();if(session&&(isInRecoveryMode()||sessionStorage.getItem('supabase_recovery_flow')==='true')){isInPasswordRecovery=true;document.body.style.visibility='visible';setTimeout(()=>showPasswordResetForm(),100);return;}}catch(e){console.error('Error in immediate session check:',e);}await new Promise(resolve=>setTimeout(resolve,100));let shouldDisplayLoginPage=true;const isRecoveryFlow=isInRecoveryMode();try{const{data:{session}}=await supa.auth.getSession();if(session&&!isRecoveryFlow&&!isInPasswordRecovery){shouldDisplayLoginPage=false;window.location.replace('app.html');return;}else if(session&&isRecoveryFlow){isInPasswordRecovery=true;}}catch(e){console.error('Error checking session for immediate redirect:',e);}if(shouldDisplayLoginPage){document.body.style.visibility='visible';}setupEventListeners();setupAuthStateHandling();handlePasswordRecovery();if(shouldDisplayLoginPage&&document.body.style.visibility==='hidden'){console.warn('Fallback: Body was still hidden after initial setup,forcing visibility.');document.body.style.visibility='visible';}});function setupEventListeners(){const authMsg=document.getElementById("auth-msg");const emailInp=document.getElementById("email");const passInp=document.getElementById("password");const loginBtn=document.getElementById("login-btn");const signupBtn=document.getElementById("signup-btn");const authBox=document.getElementById("auth-box");const signupCard=document.getElementById("signup-card");const signupEmail=document.getElementById("signup-email");const signupPassword=document.getElementById("signup-password");const signupName=document.getElementById("signup-name");const createAccountBtn=document.getElementById("create-account-btn");const backLoginSignupBtn=document.getElementById("back-login-signup-btn");const signupMsg=document.getElementById("signup-msg");const completeProfileCard=document.getElementById("complete-profile-card");const completeName=document.getElementById("complete-name");const completeProfileBtn=document.getElementById("complete-profile-btn");const skipProfileBtn=document.getElementById("skip-profile-btn");const completeProfileMsg=document.getElementById("complete-profile-msg");const forgotBtn=document.getElementById("forgot-btn");const forgotCard=document.getElementById("forgot-card");const forgotEmailInp=document.getElementById("forgot-email");const sendResetBtn=document.getElementById("send-reset-btn");const sendMagicLinkBtn=document.getElementById("send-magic-link-btn");const backLoginBtn=document.getElementById("back-login-btn");window.authElements={authMsg,emailInp,passInp,loginBtn,signupBtn,authBox,signupCard,signupEmail,signupPassword,signupName,createAccountBtn,backLoginSignupBtn,signupMsg,completeProfileCard,completeName,completeProfileBtn,skipProfileBtn,completeProfileMsg,forgotBtn,forgotCard,forgotEmailInp,sendResetBtn,sendMagicLinkBtn,backLoginBtn};if(loginBtn)loginBtn.onclick=()=>signIn(emailInp.value,passInp.value);if(signupBtn)signupBtn.onclick=()=>showSignupForm();if(createAccountBtn)createAccountBtn.onclick=()=>signUpWithDetails();if(backLoginSignupBtn)backLoginSignupBtn.onclick=()=>showLoginForm();if(completeProfileBtn)completeProfileBtn.onclick=()=>completeProfile();if(skipProfileBtn)skipProfileBtn.onclick=()=>skipProfileCompletion();if(forgotBtn)forgotBtn.onclick=()=>toggleForgot(true);if(backLoginBtn)backLoginBtn.onclick=()=>toggleForgot(false);if(sendResetBtn)sendResetBtn.onclick=()=>sendResetLink(forgotEmailInp.value);if(sendMagicLinkBtn)sendMagicLinkBtn.onclick=()=>sendMagicLink(forgotEmailInp.value);if(passInp&&loginBtn){passInp.addEventListener('keypress',function(event){if(event.key==='Enter'){event.preventDefault();loginBtn.click();}});}if(emailInp&&loginBtn){emailInp.addEventListener('keypress',function(event){if(event.key==='Enter'){event.preventDefault();loginBtn.click();}});}if(signupName&&createAccountBtn){signupName.addEventListener('keypress',function(event){if(event.key==='Enter'){event.preventDefault();createAccountBtn.click();}});}if(completeName&&completeProfileBtn){completeName.addEventListener('keypress',function(event){if(event.key==='Enter'){event.preventDefault();completeProfileBtn.click();}});}if(forgotEmailInp&&sendResetBtn){forgotEmailInp.addEventListener('keypress',function(event){if(event.key==='Enter'){event.preventDefault();sendResetBtn.click();}});}}async function signIn(email,password){try{const{error}=await supa.auth.signInWithPassword({email,password});window.authElements.authMsg.textContent=error ? error.message : "";}catch(err){console.error("Supabase error:",err);window.authElements.authMsg.textContent="Kunne ikke koble til autentiseringstjeneste";}}function showSignupForm(){window.authElements.authBox.style.display="none";window.authElements.signupCard.style.display="flex";window.authElements.forgotCard.style.display="none";}function showLoginForm(){window.authElements.authBox.style.display="flex";window.authElements.signupCard.style.display="none";window.authElements.forgotCard.style.display="none";window.authElements.completeProfileCard.style.display="none";}async function signUpWithDetails(){const email=window.authElements.signupEmail.value;const password=window.authElements.signupPassword.value;const firstName=window.authElements.signupName.value;if(!email||!password||!firstName){window.authElements.signupMsg.textContent="Vennligst fyll ut alle påkrevde felt";return;}try{const{error,data}=await supa.auth.signUp({email,password,options:{data:{first_name: firstName.trim()}}});if(error){window.authElements.signupMsg.textContent=error.message;return;}window.authElements.signupMsg.style.color="var(--success)";window.authElements.signupMsg.textContent="Registrering OK – sjekk e-post for bekreftelse!";}catch(err){console.error("Supabase error:",err);window.authElements.signupMsg.textContent="Kunne ikke koble til autentiseringstjeneste";}}let isRedirecting=false;async function checkAndShowProfileCompletion(){const timeoutPromise=new Promise((_,reject)=>{setTimeout(()=>reject(new Error("checkAndShowProfileCompletion timeout")),10000);});const mainPromise=async()=>{try{if(isRedirecting){return;}let user=null;try{const{data:{user: userData},error}=await supa.auth.getUser();user=userData;if(error){console.error("Error getting user:",error);throw error;}}catch(getUserError){console.error("Exception while getting user:",getUserError);try{const{data:{session}}=await supa.auth.getSession();user=session?.user||null;}catch(sessionError){console.error("Error getting session:",sessionError);}}if(!user){return;}isRedirecting=true;setTimeout(()=>{window.location.replace("app.html");},150);}catch(err){console.error("Error checking profile completion:",err);if(!isRedirecting){isRedirecting=true;setTimeout(()=>{window.location.replace("app.html");},100);}}};try{await Promise.race([mainPromise(),timeoutPromise]);}catch(timeoutError){console.error("checkAndShowProfileCompletion timed out:",timeoutError);if(!isRedirecting){isRedirecting=true;window.location.replace("app.html");}}}function showProfileCompletionForm(){window.authElements.authBox.style.display="none";window.authElements.signupCard.style.display="none";window.authElements.forgotCard.style.display="none";window.authElements.completeProfileCard.style.display="flex";}async function completeProfile(){const firstName=window.authElements.completeName.value;if(!firstName){window.authElements.completeProfileMsg.textContent="Vennligst fyll ut fornavn";return;}try{const{error}=await supa.auth.updateUser({data:{first_name: firstName.trim()}});if(error){window.authElements.completeProfileMsg.textContent="Feil ved oppdatering av profil";console.error("Profile update error:",error);return;}window.location.href="app.html";}catch(err){console.error("Error completing profile:",err);window.authElements.completeProfileMsg.textContent="Kunne ikke oppdatere profil";}}async function skipProfileCompletion(){window.location.href="app.html";}async function signUp(email,password){try{const{error,data}=await supa.auth.signUp({email,password});if(error)return window.authElements.authMsg.textContent=error.message;window.authElements.authMsg.textContent="Registrering OK – sjekk e-post for bekreftelse!";}catch(err){console.error("Supabase error:",err);window.authElements.authMsg.textContent="Kunne ikke koble til autentiseringstjeneste";}}function toggleForgot(show){window.authElements.forgotCard.style.display=show ? "flex" : "none";window.authElements.authBox.style.display=show ? "none" : "flex";}async function sendResetLink(email){try{const currentDomain=window.location.origin;const redirectUrl=`${currentDomain}/kalkulator/index.html`;const{error}=await supa.auth.resetPasswordForEmail(email,{redirectTo: redirectUrl});const msg=document.getElementById("forgot-msg");msg.style.color=error ? "var(--danger)" : "var(--success)";msg.textContent=error ? error.message : "Sjekk e-posten din for lenke!";}catch(err){const msg=document.getElementById("forgot-msg");msg.style.color="var(--danger)";msg.textContent="Kunne ikke sende e-post";console.error("Supabase reset error:",err);}}async function sendMagicLink(email){try{const currentDomain=window.location.origin;const redirectUrl=`${currentDomain}/kalkulator/index.html`;const{error}=await supa.auth.signInWithOtp({email: email,options:{emailRedirectTo: redirectUrl,},});const msg=document.getElementById("forgot-msg");msg.style.color=error ? "var(--danger)" : "var(--success)";msg.textContent=error ? error.message : "Magisk lenke sendt!Sjekk e-posten din.";}catch(err){const msg=document.getElementById("forgot-msg");msg.style.color="var(--danger)";msg.textContent="Kunne ikke sende magisk lenke";console.error("Supabase magic link error:",err);}}function isInRecoveryMode(){const hashFragment=window.location.hash;const urlParams=new URLSearchParams(window.location.search);const currentUrl=window.location.href;const hasRecoveryInHash=hashFragment.includes('access_token')&&hashFragment.includes('type=recovery');const hasRecoveryInQuery=urlParams.has('token')&&urlParams.get('type')==='recovery';const hasRecoveryInSearch=window.location.search.includes('access_token')&&window.location.search.includes('type=recovery');const hasRecoveryType=hashFragment.includes('type=recovery')||window.location.search.includes('type=recovery');const cameFromSupabaseVerify=document.referrer.includes('supabase.co/auth/v1/verify')||sessionStorage.getItem('supabase_recovery_flow')==='true';let hashParams=null;if(hashFragment.startsWith('#')&&hashFragment.includes('access_token')){try{hashParams=new URLSearchParams(hashFragment.substring(1));}catch(e){console.error('Error parsing hash fragment:',e);}}const hasHashRecoveryType=hashParams&&hashParams.get('type')==='recovery';const isRecovery=hasRecoveryInHash||hasRecoveryInQuery||hasRecoveryInSearch||hasRecoveryType||cameFromSupabaseVerify||hasHashRecoveryType;if(isRecovery){sessionStorage.setItem('supabase_recovery_flow','true');}return isRecovery;}function setupAuthStateHandling(){supa.auth.onAuthStateChange(async(event,session)=>{if(event==='PASSWORD_RECOVERY'){isInPasswordRecovery=true;showPasswordResetForm();}else if(event==='SIGNED_IN'){if(isInRecoveryMode()||isInPasswordRecovery){isInPasswordRecovery=true;showPasswordResetForm();}else{await checkAndShowProfileCompletion();}}else if(event==='TOKEN_REFRESHED'&&(isInRecoveryMode()||isInPasswordRecovery)){isInPasswordRecovery=true;showPasswordResetForm();}else if(session&&!isInRecoveryMode()&&!isInPasswordRecovery&&event!=='SIGNED_OUT'){await checkAndShowProfileCompletion();}});(async()=>{if(!isInRecoveryMode()&&!isInPasswordRecovery){const{data:{session}}=await supa.auth.getSession();if(session){await checkAndShowProfileCompletion();}}else{if(isInRecoveryMode()){isInPasswordRecovery=true;setTimeout(()=>showPasswordResetForm(),200);}}})();}async function handlePasswordRecovery(){const isRecovery=isInRecoveryMode();const hashFragment=window.location.hash;const hasAuthFragment=hashFragment.includes('access_token')||hashFragment.includes('refresh_token');if(isRecovery||hasAuthFragment){isInPasswordRecovery=true;document.body.style.visibility='visible';setTimeout(()=>{showPasswordResetForm();},100);}}function showPasswordResetForm(){if(window.authElements?.authBox)window.authElements.authBox.style.display='none';if(window.authElements?.signupCard)window.authElements.signupCard.style.display='none';if(window.authElements?.forgotCard)window.authElements.forgotCard.style.display='none';if(window.authElements?.completeProfileCard)window.authElements.completeProfileCard.style.display='none';let resetForm=document.getElementById('reset-password-form');if(!resetForm){resetForm=createPasswordResetForm();document.body.appendChild(resetForm);}resetForm.style.display='flex';}function createPasswordResetForm(){const resetForm=document.createElement('div');resetForm.id='reset-password-form';resetForm.className='auth-center';resetForm.innerHTML=`<div class="login-card"><h2 style="margin-bottom: 20px;">Sett nytt passord</h2><input id="new-password" type="password" placeholder="Nytt passord" required class="form-control" style="margin-bottom: 12px;"/><input id="confirm-password" type="password" placeholder="Bekreft passord" required class="form-control" style="margin-bottom: 18px;"/><button id="update-password-btn" class="btn btn-primary" style="margin-bottom: 12px;">Oppdater passord</button><button id="cancel-reset-btn" class="btn btn-secondary">Avbryt</button><p id="reset-msg" style="color: var(--danger);min-height: 24px;text-align: center;font-size: 15px;"></p></div>`;const updateBtn=resetForm.querySelector('#update-password-btn');const cancelBtn=resetForm.querySelector('#cancel-reset-btn');const newPasswordInp=resetForm.querySelector('#new-password');const confirmPasswordInp=resetForm.querySelector('#confirm-password');updateBtn.onclick=()=>updatePassword(newPasswordInp.value,confirmPasswordInp.value);cancelBtn.onclick=()=>cancelPasswordReset();newPasswordInp.addEventListener('keypress',function(event){if(event.key==='Enter'){event.preventDefault();confirmPasswordInp.focus();}});confirmPasswordInp.addEventListener('keypress',function(event){if(event.key==='Enter'){event.preventDefault();updateBtn.click();}});return resetForm;}async function updatePassword(newPassword,confirmPassword){const resetMsg=document.getElementById('reset-msg');const updateBtn=document.getElementById('update-password-btn');resetMsg.style.color='var(--danger)';if(!newPassword||newPassword.length<6){resetMsg.textContent='Passordet må være minst 6 tegn';return;}if(newPassword!==confirmPassword){resetMsg.textContent='Passordene stemmer ikke overens';return;}updateBtn.disabled=true;updateBtn.textContent='Oppdaterer...';resetMsg.textContent='';try{const{data:{session}}=await supa.auth.getSession();if(!session){resetMsg.textContent='Ugyldig eller utløpt tilbakestillingslenke. Prøv å be om en ny lenke.';return;}const isRecoverySession=isInRecoveryMode()||isInPasswordRecovery;if(!isRecoverySession){console.warn('Attempting password update without recovery context');}const{error}=await supa.auth.updateUser({password: newPassword});if(error){console.error('Password update error:',error);resetMsg.textContent=error.message||'Kunne ikke oppdatere passord';}else{resetMsg.style.color='var(--success)';resetMsg.textContent='Passord oppdatert!Omdirigerer...';isInPasswordRecovery=false;window.location.hash='';sessionStorage.removeItem('supabase_recovery_flow');setTimeout(async()=>{await supa.auth.signOut();setTimeout(()=>{window.location.href='index.html';},500);},1500);}}catch(err){console.error('Password update exception:',err);resetMsg.textContent='Kunne ikke oppdatere passord. Prøv igjen.';}finally{updateBtn.disabled=false;updateBtn.textContent='Oppdater passord';}}function cancelPasswordReset(){isInPasswordRecovery=false;window.location.hash='';sessionStorage.removeItem('supabase_recovery_flow');const resetForm=document.getElementById('reset-password-form');if(resetForm){resetForm.style.display='none';}if(window.authElements?.authBox)window.authElements.authBox.style.display='flex';if(window.authElements?.forgotCard)window.authElements.forgotCard.style.display='none';if(window.authElements?.authMsg)window.authElements.authMsg.textContent='';}