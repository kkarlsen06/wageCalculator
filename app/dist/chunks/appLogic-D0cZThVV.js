const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["chunks/subscriptionValidator-DK7NINq5.js","chunks/supabase-client-C25D-rrn.js","kalkulator-C0Bilr8I.js","chunks/modulepreload-polyfill-B5Qt9EMX.js","chunks/bootstrap-supa-C1PZRnWu.js","assets/login-k1m9iPeb.css","chunks/runtime-config-D7xitdne.js","chunks/apiBase-C8RWFuli.js","chunks/error-handling-BcaxJS6j.js","chunks/premiumFeatureModal-DM_QTd0s.js","chunks/subscriptionModal-vtNCg7aA.js","chunks/confirmationDialog-zQaUvyPo.js","chunks/oauth-google-manage-DgnRTrnU.js","chunks/link-google-SZh-g5A8.js","chunks/employeeCarousel-BIfKttFx.js","chunks/employeeService-BzRZ7ePp.js","chunks/employeeModal-DFVszCK8.js"])))=>i.map(i=>d[i]);
import{_ as F}from"./supabase-client-C25D-rrn.js";import{g as O,r as oe}from"../kalkulator-C0Bilr8I.js";import"./modulepreload-polyfill-B5Qt9EMX.js";import"./bootstrap-supa-C1PZRnWu.js";import"./runtime-config-D7xitdne.js";import"./apiBase-C8RWFuli.js";import"./error-handling-BcaxJS6j.js";const J=new Map;function ne(e,t={}){const s=(t.method||"GET").toUpperCase(),o=typeof e=="string"?e:e.url??String(e),n=`${s} ${o}`;if(J.has(n))return J.get(n);const a=fetch(e,t).then(async i=>{if(!i.ok)throw new Error(`${s} ${i.url} -> ${i.status}`);return(i.headers.get("content-type")||"").includes("json")?i.json():i.text()}).finally(()=>{J.delete(n)});return J.set(n,a),a}async function U(){try{const e=await O();if(!e)return!1;let t=window.SubscriptionState;return t||(t=await oe(e)),t?t.is_active===!0&&t.tier==="max":!1}catch(e){return console.error("[subscription] Error checking enterprise subscription:",e),!1}}const V={progressFill:null,progressLabel:null,monthlyGoalInput:null,init(){this.progressFill=document.querySelector(".chart-progress-fill")||document.querySelector(".progress-fill"),this.progressLabel=document.querySelector(".chart-progress-label")||document.querySelector(".progress-label"),this.monthlyGoalInput=document.getElementById("monthlyGoalInput")},refresh(){this.init()}};function X(){if(typeof window<"u"&&window.app&&window.app.monthlyGoal)return window.app.monthlyGoal;const e=localStorage.getItem("monthlyGoal");return e?parseInt(e,10):2e4}async function te(e){typeof window<"u"&&window.app&&(window.app.monthlyGoal=e,window.app.saveSettingsToSupabase&&await window.app.saveSettingsToSupabase()),localStorage.setItem("monthlyGoal",e),typeof window<"u"&&window.app&&window.app.updateStats&&window.app.updateStats()}function Z(){const e=V.monthlyGoalInput||document.getElementById("monthlyGoalInput");e&&(e.value=X(),e.addEventListener("input",t=>{const s=parseInt(t.target.value,10);!isNaN(s)&&s>0&&te(s)}))}typeof window<"u"&&(window.pendingConfetti=!1,document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{V.init(),Z()}):(V.init(),Z()));function se(e,t,s=!1){const o=V.progressFill||document.querySelector(".chart-progress-fill")||document.querySelector(".progress-fill"),n=V.progressLabel||document.querySelector(".chart-progress-label")||document.querySelector(".progress-label");if(!o||!n)return;const a=Math.round(e/t*100),i=Math.min(a,100);o.dataset.animating==="true"&&(o.dataset.animating="false"),o.classList.remove("loading"),s?requestAnimationFrame(()=>{o.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)",n.style.transition="all 0.3s cubic-bezier(0.4, 0, 0.2, 1)",o.dataset.animating="true",o.style.width=i+"%",ee(n,a),setTimeout(()=>{o.dataset.animating="false",typeof window<"u"&&window.app&&!window.app.initialAnimationComplete&&(window.app.initialAnimationComplete=!0)},850)}):(o.style.transition="none",n.style.transition="none",o.style.width=i+"%",o.offsetHeight,o.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)",n.style.transition="all 0.3s cubic-bezier(0.4, 0, 0.2, 1)",ee(n,a));const r=o.closest(".progress-card")||o.closest(".chart-progress-bar");a>=100?(o.classList.add("full"),a>100&&r?r.classList.add("overachievement"):r&&r.classList.remove("overachievement")):(o.classList.remove("full"),r&&r.classList.remove("overachievement")),a>0?o.classList.add("active"):o.classList.remove("active");const d=window.app&&window.app.currencyFormat?" NOK":" kr",l=a<10?a.toFixed(1):Math.round(a);n.textContent=`${l}% av ${t.toLocaleString("no-NO")}${d}`,o.title=`${e.toLocaleString("no-NO")}${d} av ${t.toLocaleString("no-NO")}${d}`}function ee(e,t){e.classList.remove("low-progress","medium-progress","high-progress","overachievement"),t>100?(e.classList.add("overachievement"),e.setAttribute("aria-label",`Mål oppnådd! ${t.toFixed(1)}% av målet`)):t>=75?(e.classList.add("high-progress"),e.setAttribute("aria-label",`Nær målet: ${t.toFixed(1)}% av målet`)):t>=25?(e.classList.add("medium-progress"),e.setAttribute("aria-label",`Fremdrift: ${t.toFixed(1)}% av målet`)):(e.classList.add("low-progress"),e.setAttribute("aria-label",`Tidlig fremdrift: ${t.toFixed(1)}% av målet`)),requestAnimationFrame(()=>{e.offsetHeight,window.getComputedStyle(e).textAlign!=="center"&&(e.style.textAlign="center")})}typeof window<"u"&&(window.updateProgressBar=se,window.getMonthlyGoal=X,window.setMonthlyGoal=te,window.domCache=V);const he={PAUSE_THRESHOLD:5.5,PAUSE_DEDUCTION:.5,MONTHS:["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"],WEEKDAYS:["søndag","mandag","tirsdag","onsdag","torsdag","fredag","lørdag"],PRESET_WAGE_RATES:{"-1":129.91,"-2":132.9,1:184.54,2:185.38,3:187.46,4:193.05,5:210.81,6:256.14},orgSettings:{break_policy:"fixed_0_5_over_5_5h"},PRESET_BONUSES:{weekday:[{from:"18:00",to:"21:00",rate:22},{from:"21:00",to:"23:59",rate:45}],saturday:[{from:"13:00",to:"15:00",rate:45},{from:"15:00",to:"18:00",rate:55},{from:"18:00",to:"23:59",rate:110}],sunday:[{from:"00:00",to:"23:59",rate:115}]},shifts:[],currentMonth:new Date().getMonth()+1,currentYear:new Date().getFullYear(),currentWageLevel:1,usePreset:!0,customWage:200,customBonuses:{},currentView:"dashboard",pauseDeduction:!0,fullMinuteRange:!1,directTimeInput:!1,monthlyGoal:2e4,shiftView:"list",calendarDisplayMode:"hours",selectedDate:null,userShifts:[],formState:{},initialAnimationComplete:!1,drillDownMode:!1,selectedWeek:null,taxDeductionEnabled:!1,taxPercentage:0,payrollDay:15,dashboardView:"default",nextShiftTimer:null,lastRenderedMonth:null,lastRenderedYear:null,lastRenderedShiftsKey:"",monthNavigationTimeout:null,employees:[],selectedEmployeeId:null,employeeCache:new Map,employeesLoading:!1,employeesError:null,async getAuthHeaders(){try{const{data:{session:e}}=await window.supa.auth.getSession(),t=e?.access_token;return{"Content-Type":"application/json",...t?{Authorization:`Bearer ${t}`}:{}}}catch{return{"Content-Type":"application/json"}}},async init(){try{const n=await this.getAuthHeaders?.(),a=await ne(`${window.CONFIG.apiBase}/org-settings`,{headers:n});a&&a.break_policy&&(this.orgSettings={break_policy:a.break_policy})}catch{}this.selectedDates=[],V.init();const e=V.progressFill;e&&(e.classList.add("loading"),e.style.width="0%",e.style.transition="none"),this.initializeEmployeeState(),this.populateTimeSelects();try{await this.loadFromSupabase()}catch(n){console.error("loadFromSupabase failed:",n),await this.loadFromLocalStorage()}const t=localStorage.getItem("dashboardView");t&&(t==="stats"||t==="default")&&(this.dashboardView=t),this.applyDashboardView();const s=document.getElementById("dashboardToggleBtn");if(s){s.classList.toggle("active",this.dashboardView==="stats");const n=s.querySelector(".toggle-text");n&&(n.textContent=this.dashboardView==="stats"?"Std.":"Stat."),s.setAttribute("aria-label",this.dashboardView==="stats"?"Bytt til standardvisning":"Bytt til statistikkvisning")}this.shifts=[...this.userShifts],this.setupBreakDeductionEventListeners(),document.getElementById("fullMinuteRangeToggle").addEventListener("change",n=>{n.target.checked&&this.directTimeInput&&(this.directTimeInput=!1,document.getElementById("directTimeInputToggle").checked=!1),this.fullMinuteRange=n.target.checked;const a={startHour:document.getElementById("startHour")?.value||"",startMinute:document.getElementById("startMinute")?.value||"",endHour:document.getElementById("endHour")?.value||"",endMinute:document.getElementById("endMinute")?.value||""};this.populateTimeSelects(),setTimeout(()=>{if(a.startHour&&(document.getElementById("startHour").value=a.startHour),a.startMinute){const i=document.getElementById("startMinute");i.querySelector(`option[value="${a.startMinute}"]`)&&(i.value=a.startMinute)}if(a.endHour&&(document.getElementById("endHour").value=a.endHour),a.endMinute){const i=document.getElementById("endMinute");i.querySelector(`option[value="${a.endMinute}"]`)&&(i.value=a.endMinute)}},50),this.saveSettingsToSupabase()}),document.getElementById("directTimeInputToggle").addEventListener("change",n=>{n.target.checked&&this.fullMinuteRange&&(this.fullMinuteRange=!1,document.getElementById("fullMinuteRangeToggle").checked=!1),this.directTimeInput=n.target.checked,this.populateTimeSelects(),this.saveSettingsToSupabase()}),this.setupFormStateListeners(),this.setupNewSettingsListeners(),this.restoreFormState(),setTimeout(()=>{this.updateDisplay(!0)},100),this.shiftView=this.defaultShiftsView,this.switchShiftView(this.shiftView),window.addEventListener("resize",()=>{document.body.classList.contains("chatbox-view")||this.updateStats(!1)}),window.visualViewport&&window.visualViewport.addEventListener("resize",()=>{document.body.classList.contains("chatbox-view")||this.updateStats(!1)});const o=document.querySelector(".header");if(o&&window.ResizeObserver){let n=o.getBoundingClientRect().height;new ResizeObserver(i=>{const r=i[0].target.getBoundingClientRect().height;Math.abs(r-n)>1&&(n=r,this.updateStats(!1))}).observe(o)}window.addEventListener("load",()=>{this.initialAnimationComplete||this.updateStats(!1)}),Z(),window.addEventListener("beforeunload",()=>{this.cleanup()})},async saveOrgSettings(){try{const e=document.getElementById("breakPolicySelect");if(!e)return;const t=e.value,s=await this.getAuthHeaders(),o=await fetch(`${window.CONFIG.apiBase}/org-settings`,{method:"PUT",headers:s,body:JSON.stringify({break_policy:t})});if(o.ok){const n=await o.json();this.orgSettings={break_policy:n.break_policy},window.showToast&&window.showToast("Lagret","success"),await this.updateOrgSettingsUI(),this.currentView==="employees"&&await this.fetchAndDisplayEmployeeShifts?.()}else{const n=await o.json().catch(()=>({}));throw new Error(n.error||"Kunne ikke lagre")}}catch(e){console.error("saveOrgSettings error",e),window.showToast&&window.showToast("Kunne ikke lagre","error")}},async onOrgWageCaregiverToggle(){const e=await U();await this.updateOrgSettingsUI(),await this.updateTabBarVisibility(),e||console.log("Enterprise subscription required for wage caregiver features")},async updateOrgSettingsUI(){const t=!await U(),s=document.getElementById("orgBreakPolicySection"),o=document.getElementById("breakPolicySelect");[s].forEach(n=>{n&&(n.style.opacity=t?"0.5":"1")}),o&&(o.disabled=t)},populateTimeSelects(){const e=document.getElementById("startHour"),t=document.getElementById("endHour"),s=document.getElementById("startMinute"),o=document.getElementById("endMinute"),n=document.getElementById("recurringStartHour"),a=document.getElementById("recurringEndHour"),i=document.getElementById("recurringStartMinute"),r=document.getElementById("recurringEndMinute");if(this.directTimeInput)this.replaceTimeDropdownsWithInputs();else{this.ensureTimeDropdowns(),e.innerHTML='<option value="">Fra time</option>',t.innerHTML='<option value="">Til time</option>',s.innerHTML='<option value="">Fra minutt</option>',o.innerHTML='<option value="">Til minutt</option>',n&&(n.innerHTML='<option value="">Fra time</option>',a.innerHTML='<option value="">Til time</option>',i.innerHTML='<option value="">Fra minutt</option>',r.innerHTML='<option value="">Til minutt</option>');for(let d=0;d<=23;d++){const l=String(d).padStart(2,"0");e.innerHTML+=`<option value="${l}">${l}</option>`,t.innerHTML+=`<option value="${l}">${l}</option>`,n&&(n.innerHTML+=`<option value="${l}">${l}</option>`,a.innerHTML+=`<option value="${l}">${l}</option>`)}if(this.fullMinuteRange)for(let d=0;d<60;d++){const l=String(d).padStart(2,"0"),u=d===0?" selected":"";s.innerHTML+=`<option value="${l}"${u}>${l}</option>`,o.innerHTML+=`<option value="${l}"${u}>${l}</option>`,i&&(i.innerHTML+=`<option value="${l}"${u}>${l}</option>`,r.innerHTML+=`<option value="${l}"${u}>${l}</option>`)}else["00","15","30","45"].forEach((d,l)=>{const u=l===0?" selected":"";s.innerHTML+=`<option value="${d}"${u}>${d}</option>`,o.innerHTML+=`<option value="${d}"${u}>${d}</option>`,i&&(i.innerHTML+=`<option value="${d}"${u}>${d}</option>`,r.innerHTML+=`<option value="${d}"${u}>${d}</option>`)})}},replaceTimeDropdownsWithInputs(){[{id:"startHour",placeholder:"Fra time (HH)"},{id:"startMinute",placeholder:"Fra minutt (MM)"},{id:"endHour",placeholder:"Til time (HH)"},{id:"endMinute",placeholder:"Til minutt (MM)"},{id:"recurringStartHour",placeholder:"Fra time (HH)"},{id:"recurringStartMinute",placeholder:"Fra minutt (MM)"},{id:"recurringEndHour",placeholder:"Til time (HH)"},{id:"recurringEndMinute",placeholder:"Til minutt (MM)"}].forEach(t=>{const s=document.getElementById(t.id);if(s&&s.tagName==="SELECT"){const o=s.value,n=document.createElement("input");n.type="text",n.id=t.id,n.className="form-control time-input",n.placeholder=t.placeholder,n.maxLength=2,n.pattern="[0-9]{2}",n.value=o,n.addEventListener("input",a=>{let i=a.target.value.replace(/\D/g,"");if(i.length>2&&(i=i.slice(0,2)),t.id.includes("Hour")){const r=parseInt(i);i.length===2&&r>23&&(i=i.slice(0,1))}else{const r=parseInt(i);i.length===2&&r>59&&(i=i.slice(0,1))}a.target.value=i}),n.addEventListener("blur",a=>{a.target.value.length===1&&(a.target.value="0"+a.target.value)}),s.replaceWith(n)}})},ensureTimeDropdowns(){["startHour","startMinute","endHour","endMinute","recurringStartHour","recurringStartMinute","recurringEndHour","recurringEndMinute"].forEach(t=>{const s=document.getElementById(t);if(s&&s.tagName==="INPUT"){s.value;const o=document.createElement("select");o.id=t,o.className="form-control",s.replaceWith(o)}})},async loadEmployeesForShiftForms(){try{this.employees.length===0&&await this.loadEmployees(),this.populateEmployeeSelectors(),this.populateEmployeeFilterBar()}catch(e){console.error("Error loading employees for shift forms:",e)}},populateEmployeeSelectors(){["employeeSelect","recurringEmployeeSelect","editEmployeeSelect"].forEach(t=>{const s=document.getElementById(t);if(s){for(;s.children.length>1;)s.removeChild(s.lastChild);this.employees.forEach(o=>{if(o.archived_at)return;const n=document.createElement("option");n.value=o.id,n.textContent=o.name,s.appendChild(n)})}}),this.toggleEmployeeSelectorsVisibility(this.currentView==="employees")},toggleEmployeeSelectorsVisibility(e){["employeeSelect","recurringEmployeeSelect"].forEach(t=>{const s=document.getElementById(t);if(!s)return;const o=s.closest(".form-group")||s.parentElement;o&&(o.style.display="none")})},populateEmployeeFilterBar(){const e=document.getElementById("employeeFilterBar");if(e){e.style.display="none";const t=e.querySelector(".filter-scroll-container");t&&(t.innerHTML="")}},createFilterChip(e,t,s,o){const n=document.createElement("button");n.className=`filter-chip ${o?"active":""}`,n.setAttribute("data-employee-id",e),n.setAttribute("aria-label",`Filter by ${t}`);const a=document.createElement("span");if(a.textContent=t,n.appendChild(a),s&&e){const i=document.createElement("span");i.className="filter-chip-color",i.style.backgroundColor=s,n.insertBefore(i,a)}return n.addEventListener("click",()=>{this.handleEmployeeFilter(e)}),n},handleEmployeeFilter(e){const t=e||null;this.selectedEmployeeId=t,document.querySelectorAll(".filter-chip").forEach(o=>{const n=o.getAttribute("data-employee-id");o.classList.toggle("active",n===(t||""))}),this.currentView==="employees"?this.fetchAndDisplayEmployeeShifts?.():this.applyEmployeeFilter(),t?localStorage.setItem("selectedEmployeeId",t):localStorage.removeItem("selectedEmployeeId"),this.updateEmployeeAssignmentUIInModal?.()},updateEmployeeAssignmentUIInModal(){const e="selectedEmployeePill",t=document.getElementById(e),s=document.getElementById("employeeSelect"),o=document.getElementById("recurringEmployeeSelect"),n=s?.closest(".form-group"),a=o?.closest(".form-group"),i=this.currentView==="employees",r=this.selectedEmployeeId!==null;if(r&&(s&&(s.value=this.selectedEmployeeId),o&&(o.value=this.selectedEmployeeId)),n&&(n.style.display="none"),a&&(a.style.display="none"),!i){t&&t.remove();return}const d=document.getElementById("addShiftModal");if(!d)return;let l=t;if(!l){l=document.createElement("div"),l.id=e,l.style.display="none",l.style.marginBottom="16px",l.innerHTML=`
                <div class="form-group">
                  <label>Ansatt</label>
                  <div class="selected-employee-pill" style="display:flex;align-items:center;gap:8px;padding:8px 10px;border:1px solid var(--border);border-radius:8px;background:var(--surface)">
                    <span class="color-dot" style="display:inline-block;width:12px;height:12px;border-radius:50%;background:#888"></span>
                    <span class="name"></span>
                  </div>
                </div>`;const c=d.querySelector("#shiftForm");c?.insertBefore(l,c.firstChild?.nextSibling?.nextSibling||c.firstChild)}const u=this.getSelectedEmployee?.()||null;if(r&&u){l.style.display="";const c=l.querySelector(".name"),m=l.querySelector(".color-dot");c&&(c.textContent=u.name),m&&(m.style.background=u.display_color||"#888");const w=l.querySelector(".selected-employee-pill");w&&!w.dataset.boundEdit&&(w.style.cursor="pointer",w.setAttribute("role","button"),w.setAttribute("tabindex","0"),w.title="Rediger ansatt",w.addEventListener("click",h=>{try{h.preventDefault(),h.stopPropagation()}catch{}const g=this.getSelectedEmployee?.();g&&this.showEditEmployeeModal(g)}),w.addEventListener("keydown",h=>{if(h.key==="Enter"||h.key===" "){h.preventDefault();const g=this.getSelectedEmployee?.();g&&this.showEditEmployeeModal(g)}}),w.dataset.boundEdit="1")}else l.style.display="none"},applyEmployeeFilter(){if(this.currentView==="employees"){this.fetchAndDisplayEmployeeShifts?.(),this.updateEmployeeAssignmentUIInModal?.();return}this.shifts=[...this.userShifts],this.updateDisplay()},initializeEmployeeState(){const e=localStorage.getItem("selectedEmployeeId");e&&(this.selectedEmployeeId=e)},openAddShiftModal(e=null,t=null){this.closeShiftDetails(),this.closeSettings(!1),this.closeProfile(),this.closeProfileDropdown();const s=document.querySelector(".floating-action-bar"),o=document.querySelector(".floating-action-bar-backdrop");s&&(s.style.display="none"),o&&(o.style.display="none");const n=document.getElementById("startHour");n&&n.tagName==="SELECT"&&!n.options.length?this.populateTimeSelects():n||this.populateTimeSelects(),document.getElementById("dateGrid").childElementCount?e!==null||t!==null?this.populateDateGrid(e,t):this.populateDateGrid(e,t):this.populateDateGrid(e,t);const a=document.getElementById("addShiftModal");a.style.display="flex",a.classList.add("active"),this.selectedDates=[],document.querySelectorAll("#dateGrid .date-cell").forEach(r=>r.classList.remove("selected")),this.updateSelectedDatesInfo(),document.getElementById("shiftForm").reset(),this.switchAddShiftTab("simple"),this.populateEmployeeSelectors(),this.updateEmployeeAssignmentUIInModal()},updateSelectedDatesInfo(){const e=document.getElementById("selectedDatesInfo"),t=document.getElementById("selectedDatesCount");if(!e||!t)return;const s=this.selectedDates?this.selectedDates.length:0;s>0?(t.textContent=s,e.style.display="block"):e.style.display="none"},switchAddShiftTab(e){document.getElementById("addShiftModal").querySelectorAll(".tab-btn").forEach((a,i)=>{const r=i===0,d=e==="simple"&&r||e==="recurring"&&!r;a.classList.toggle("active",d)});const o=document.getElementById("simpleFields"),n=document.getElementById("recurringFields");e==="simple"?(o.classList.add("active"),n.classList.remove("active")):(o.classList.remove("active"),n.classList.add("active")),this.toggleEmployeeSelectorsVisibility(this.currentView==="employees"),this.updateEmployeeAssignmentUIInModal?.()},closeAddShiftModal(){const e=document.getElementById("addShiftModal");e.style.display="none",e.classList.remove("active");const t=document.querySelector(".floating-action-bar"),s=document.querySelector(".floating-action-bar-backdrop");t&&(t.style.display=""),s&&(s.style.display="")},async addShift(){const e=document.getElementById("recurringFields");if(e&&e.classList.contains("active")){const s=uuidv4(),o=parseInt(document.getElementById("recurringFrequency").value,10),n=document.getElementById("recurringStartDate").value,a=parseFloat(document.getElementById("recurringDurationYears").value),i=document.getElementById("recurringStartHour").value,r=document.getElementById("recurringStartMinute").value||"00",d=document.getElementById("recurringEndHour").value,l=document.getElementById("recurringEndMinute").value||"00",u=this.selectedEmployeeId;if(!n||!o||!a||!i||!d){window.ErrorHelper?window.ErrorHelper.showError("Vennligst fyll ut alle påkrevde felt for å opprette en vaktserie.",{type:"warning",duration:4e3}):alert("Vennligst fyll ut alle påkrevde felt for å opprette en vaktserie.");const y=document.querySelector('.btn-primary[onclick="app.addShift()"]');y&&(y.style.background="var(--danger)",y.style.transform="scale(0.95)",y.style.transition="all 0.2s ease",setTimeout(()=>{y.style.background="",y.style.transform="scale(1)"},1e3));return}const c=new Date(n),m=c.getDay();this._seriesPaywallShown=!1;const w=[new Date(c)];let h=new Date(c);const g=new Date(c);for(g.setMonth(g.getMonth()+Math.floor(a*12));h=new Date(h),h.setDate(h.getDate()+o*7),!(h>g);)w.push(new Date(h));const k=`Du er i ferd med å opprette ${w.length} gjentakende vakter.

Vil du fortsette?`;if(!confirm(k)){const y=document.querySelector('.btn-primary[onclick="app.addShift()"]');y&&(y.style.transform="scale(1)",y.style.transition="transform 0.1s ease");return}const S=document.querySelector('.btn-primary[onclick="app.addShift()"]');S&&(S.style.transform="scale(0.95)",S.style.transition="transform 0.1s ease",setTimeout(()=>{S.style.transform="scale(1)"},100));const{data:f}=await window.supa.auth.getClaims();if(!!!f){alert("Autentiseringsfeil");return}const b=await O();if(!b){console.warn("[auth] Missing userId, skipping query");return}console.debug("[auth] using userId:",b);for(const y of w){const E=`${y.getFullYear()}-${(y.getMonth()+1).toString().padStart(2,"0")}-${y.getDate().toString().padStart(2,"0")}`;if(u){const{data:{session:C}}=await window.supa.auth.getSession(),T={Authorization:`Bearer ${C.access_token}`,"Content-Type":"application/json"},B=await fetch(`${window.CONFIG.apiBase}/employee-shifts`,{method:"POST",headers:T,body:JSON.stringify({employee_id:u,shift_date:E,start_time:`${i}:${r}`,end_time:`${d}:${l}`})});if(!B.ok){const x=await B.json().catch(()=>({}));console.error("Gjentakende API-feil:",x);continue}}else{const{validateShiftCreation:C}=await F(async()=>{const{validateShiftCreation:M}=await import("./subscriptionValidator-DK7NINq5.js");return{validateShiftCreation:M}},__vite__mapDeps([0,1,2,3,4,5,6,7,8])),T=await C(E);if(!T.canCreate)if(T.requiresUpgrade){if(!this._seriesPaywallShown){const{PremiumFeatureModal:I}=await F(async()=>{const{PremiumFeatureModal:q}=await import("./premiumFeatureModal-DM_QTd0s.js");return{PremiumFeatureModal:q}},__vite__mapDeps([9,10,2,3,4,1,5,6,7,8,0,11])),H=E.substring(0,7);if(!await I.showAndHandle({otherMonths:T.otherMonths||[],currentMonth:H}))break;this._seriesPaywallShown=!0}if(!(await C(E)).canCreate){console.warn(`Skipping shift for ${E} - still blocked after paywall handling`);continue}}else{console.warn(`Skipping shift for ${E} - ${T.reason}`);continue}const B={user_id:b,shift_date:E,start_time:`${i}:${r}`,end_time:`${d}:${l}`,shift_type:m===0?2:m===6?1:0,series_id:s},{data:x,error:L}=await window.supa.from("user_shifts").insert(B).select().single();if(L){console.error("Gjentakende feil:",L);continue}this.userShifts.push({id:x.id,date:new Date(y),startTime:`${i}:${r}`,endTime:`${d}:${l}`,type:m===0?2:m===6?1:0,seriesId:s})}}this.shifts=[...this.userShifts],this.refreshUI(this.shifts),this.closeAddShiftModal();const D=document.querySelector(".add-btn");D&&(D.style.transform="scale(1.1)",D.style.background="var(--success)",D.style.transition="all 0.3s ease",setTimeout(()=>{D.style.transform="scale(1)",D.style.background=""},500));return}try{if(!this.selectedDates||this.selectedDates.length===0){window.ErrorHelper?window.ErrorHelper.showError("Vennligst velg en dato før du lagrer vakten.",{type:"warning",duration:4e3}):alert("Vennligst velg en dato før du lagrer vakten.");const c=document.querySelector('.btn-primary[onclick="app.addShift()"]');c&&(c.style.background="var(--danger)",c.style.transform="scale(0.95)",c.style.transition="all 0.2s ease",setTimeout(()=>{c.style.background="",c.style.transform="scale(1)"},1e3));return}const s=document.getElementById("startHour").value,o=document.getElementById("startMinute").value||"00",n=document.getElementById("endHour").value,a=document.getElementById("endMinute").value||"00",i=this.selectedEmployeeId;if(!s||!n){window.ErrorHelper?window.ErrorHelper.showError("Vennligst fyll ut arbeidstid (start- og sluttidspunkt).",{type:"warning",duration:4e3}):alert("Vennligst fyll ut arbeidstid (start- og sluttidspunkt).");const c=document.querySelector('.btn-primary[onclick="app.addShift()"]');c&&(c.style.background="var(--danger)",c.style.transform="scale(0.95)",c.style.transition="all 0.2s ease",setTimeout(()=>{c.style.background="",c.style.transform="scale(1)"},1e3));return}const{data:r}=await window.supa.auth.getClaims();if(!!!r){console.error("addShift: Authentication error"),alert("Feil ved autentisering");return}const l=await O();if(!l){console.warn("[auth] Missing userId, skipping query");return}console.debug("[auth] using userId:",l);const u=[];for(const c of this.selectedDates){const m=c.getDay(),w=m===0?2:m===6?1:0,h={date:new Date(c),startTime:`${s}:${o}`,endTime:`${n}:${a}`,type:w},g=`${h.date.getFullYear()}-${(h.date.getMonth()+1).toString().padStart(2,"0")}-${h.date.getDate().toString().padStart(2,"0")}`;if(i){const{data:{session:p}}=await window.supa.auth.getSession(),k={Authorization:`Bearer ${p.access_token}`,"Content-Type":"application/json"},S=await fetch(`${window.CONFIG.apiBase}/employee-shifts`,{method:"POST",headers:k,body:JSON.stringify({employee_id:i,shift_date:g,start_time:h.startTime,end_time:h.endTime})});if(!S.ok){const f=await S.json().catch(()=>({}));console.error("addShift: Employee-shift API error:",f),alert(`Kunne ikke lagre vakt for ${g}: ${f.error||S.statusText}`);continue}}else{const{validateShiftCreation:p}=await F(async()=>{const{validateShiftCreation:b}=await import("./subscriptionValidator-DK7NINq5.js");return{validateShiftCreation:b}},__vite__mapDeps([0,1,2,3,4,5,6,7,8])),k=await p(g);if(!k.canCreate)if(k.requiresUpgrade){const{PremiumFeatureModal:b}=await F(async()=>{const{PremiumFeatureModal:C}=await import("./premiumFeatureModal-DM_QTd0s.js");return{PremiumFeatureModal:C}},__vite__mapDeps([9,10,2,3,4,1,5,6,7,8,0,11])),D=g.substring(0,7);if(!await b.showAndHandle({otherMonths:k.otherMonths||[],currentMonth:D}))continue;const E=await p(g);if(!E.canCreate){const{getValidationMessage:C}=await F(async()=>{const{getValidationMessage:T}=await import("./subscriptionValidator-DK7NINq5.js");return{getValidationMessage:T}},__vite__mapDeps([0,1,2,3,4,5,6,7,8]));alert(C(E));continue}}else{const{getValidationMessage:b}=await F(async()=>{const{getValidationMessage:D}=await import("./subscriptionValidator-DK7NINq5.js");return{getValidationMessage:D}},__vite__mapDeps([0,1,2,3,4,5,6,7,8]));alert(b(k));continue}const S={user_id:l,shift_date:g,start_time:h.startTime,end_time:h.endTime,shift_type:h.type},{data:f,error:v}=await window.supa.from("user_shifts").insert(S).select().single();if(v){console.error("addShift: Database error when saving shift:",v),alert(`Kunne ikke lagre vakt for ${g}: ${v.message}`);continue}h.id=f.id,this.userShifts.push(h),u.push(h)}h.employee_id=i,h.employee=i?this.employees.find(p=>p.id===i):null}if(i?await this.fetchAndDisplayEmployeeShifts?.():(this.shifts=[...this.userShifts],this.refreshUI(this.shifts)),document.getElementById("shiftForm").reset(),this.selectedDates=[],document.querySelectorAll(".date-cell").forEach(c=>{c.classList.remove("selected")}),this.updateSelectedDatesInfo(),this.clearFormState(),u.length>0){const c=document.querySelector(".add-btn");c&&(c.style.transform="scale(1.1)",c.style.background="var(--success)",c.style.transition="all 0.3s ease",setTimeout(()=>{c.style.transform="scale(1)",c.style.background=""},500))}}catch(s){console.error("addShift: Critical error:",s),alert(`En uventet feil oppstod: ${s.message}`)}},getISOWeekNumber(e){const t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate())),s=t.getUTCDay()||7;t.setUTCDate(t.getUTCDate()+4-s);const o=new Date(Date.UTC(t.getUTCFullYear(),0,1));return Math.ceil(((t-o)/864e5+1)/7)},getISOWeekYear(e){const t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate())),s=t.getUTCDay()||7;return t.setUTCDate(t.getUTCDate()+4-s),t.getUTCFullYear()},getWeekDateRange(e,t){const s=new Date(Date.UTC(t,0,4)),o=s.getUTCDay()||7,n=new Date(s);n.setUTCDate(s.getUTCDate()-o+1);const a=new Date(n);a.setUTCDate(n.getUTCDate()+(e-1)*7);const i=new Date(a);i.setUTCDate(a.getUTCDate()+6);const r=new Date(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate()),d=new Date(i.getUTCFullYear(),i.getUTCMonth(),i.getUTCDate());return{startDate:r,endDate:d}},getWeekYearForWeekNumberInCurrentMonth(e){const t=this.currentMonth-1,s=new Date(this.currentYear,this.currentMonth,0).getDate();for(let o=1;o<=s;o++){const n=new Date(this.currentYear,t,o);if(this.getISOWeekNumber(n)===e)return this.getISOWeekYear(n)}return e>=52&&t===0?this.currentYear-1:e<=2&&t===11?this.currentYear+1:this.currentYear},getWeekDateRangeForCurrentView(e){const t=this.getWeekYearForWeekNumberInCurrentMonth(e);return this.getWeekDateRange(e,t)},enterDrillDownMode(e){console.log("Entering drill-down mode for week:",e),this.clearAllTooltips(),this.drillDownMode=!0,this.selectedWeek=e,this.updateWeeklyHoursChart(),this.updateDisplay(!1)},exitDrillDownMode(){console.log("Exiting drill-down mode"),this.clearAllTooltips();const e=document.querySelector(".chart-hours-value-card"),t=document.querySelector(".chart-shifts-count-card");e&&(e.classList.remove("has-tooltip","tooltip-active"),e.removeAttribute("data-tooltip"),this.removeWageCardTooltip(e)),t&&(t.classList.remove("has-tooltip","tooltip-active"),t.removeAttribute("data-tooltip"),this.removeWageCardTooltip(t));const s=document.getElementById("wageCardTooltip");s&&s.classList.remove("show"),this.drillDownMode=!1,this.selectedWeek=null,this.removeBackButton(),this.updateWeeklyHoursChart(),this.updateDisplay(!1)},isInDrillDownMode(){return this.drillDownMode&&this.selectedWeek!==null},clearAllTooltips(){this.hideChartTooltip&&this.hideChartTooltip();const e=document.getElementById("chartTooltip");e&&e.classList.remove("show"),document.querySelectorAll(".chart-bar.tooltip-active").forEach(s=>{s.classList.remove("tooltip-active")})},addBackButton(){this.removeBackButton();const e=document.querySelector(".chart-progress-bar");if(!e)return;const t=document.createElement("div");t.className="progress-bar-wrapper",t.id="progressBarWrapper",e.parentNode.insertBefore(t,e),t.appendChild(e);const o=document.createElement("button");o.id="drillDownBackButton",o.className="drill-down-back-button",o.innerHTML=`
            <svg class="back-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="15 18 9 12 15 6"></polyline>
            </svg>
            <span>Uke ${this.selectedWeek}</span>
        `,o.setAttribute("aria-label",`Tilbake til ukeoversikt fra uke ${this.selectedWeek}`),o.addEventListener("click",n=>{n.stopPropagation(),this.exitDrillDownMode()}),t.appendChild(o)},removeBackButton(){const e=document.getElementById("progressBarWrapper"),t=document.getElementById("drillDownBackButton");if(e){const s=e.querySelector(".chart-progress-bar"),o=e.parentNode;s&&o&&o.insertBefore(s,e),e.remove()}else t&&t.remove()},getShiftsForWeek(e){const{startDate:t,endDate:s}=this.getWeekDateRangeForCurrentView(e);return this.shifts.filter(n=>{const a=new Date(n.date);return a>=t&&a<=s}).map(n=>{const a=n.date.getMonth()===this.currentMonth-1&&n.date.getFullYear()===this.currentYear;return{...n,isCurrentMonth:a}})},getDailyDataForWeek(e){const t=this.getShiftsForWeek(e),s={};let o=0,n=0,a=0,i=0;return t.forEach(r=>{const d=r.date.getDay();s[d]||(s[d]={hours:0,earnings:0,shifts:[],date:new Date(r.date),hasCurrentMonthShifts:!1,hasAdjacentMonthShifts:!1});const l=this.calculateShift(r);s[d].hours+=l.hours,s[d].earnings+=l.total,s[d].shifts.push(r),r.isCurrentMonth?(s[d].hasCurrentMonthShifts=!0,a+=l.hours,i+=l.total):s[d].hasAdjacentMonthShifts=!0,o+=l.hours,n+=l.total}),{dailyData:s,totalWeekHours:o,totalWeekEarnings:n,totalCurrentMonthHours:a,totalCurrentMonthEarnings:i,weekNumber:e}},getDaysWithShifts(e){const{dailyData:t}=this.getDailyDataForWeek(e);return Object.keys(t).map(s=>parseInt(s)).sort((s,o)=>s===0?1:o===0?-1:s-o)},populateDateGrid(e=null,t=null){const s=document.getElementById("dateGrid");if(!s)return;const o=t!==null?t:this.currentYear,n=e!==null?e-1:this.currentMonth-1,a=new Date(o,n,1),i=new Date(a),r=a.getDay()===0?6:a.getDay()-1;i.setDate(i.getDate()-r),s.innerHTML="";const d=this.shifts.filter(c=>c.date.getMonth()===n&&c.date.getFullYear()===o),l=new Set;d.forEach(c=>{l.add(c.date.getDate())});const u=document.createElement("div");u.textContent="",u.className="week-number header",s.appendChild(u),["M","T","O","T","F","L","S"].forEach(c=>{const m=document.createElement("div");m.textContent=c,m.style.cssText="font-weight:600;font-size:12px;color:var(--text-secondary);text-align:center;padding:8px;",s.appendChild(m)});for(let c=0;c<42;c++){if(c%7===0){const p=new Date(i);p.setDate(i.getDate()+c);const k=this.getISOWeekNumber(p),S=document.createElement("div");S.className="week-number",S.textContent=k,s.appendChild(S)}const m=new Date(i);m.setDate(i.getDate()+c);const w=document.createElement("div");w.className="date-cell";const h=document.createElement("div");if(h.className="date-cell-content",h.textContent=m.getDate(),m.getMonth()===n&&l.has(m.getDate())){const p=document.createElement("div");p.className="shift-indicator-dot",h.appendChild(p),w.classList.add("has-shift")}const g=new Date;if(m.getDate()===g.getDate()&&m.getMonth()===g.getMonth()&&m.getFullYear()===g.getFullYear()&&w.classList.add("current-date"),w.appendChild(h),m.getMonth()!==n)w.classList.add("disabled");else{if(this.selectedDates&&this.selectedDates.length>0){const p=m.toDateString();this.selectedDates.some(S=>S.toDateString()===p)&&w.classList.add("selected")}w.addEventListener("click",()=>{this.selectedDates||(this.selectedDates=[]);const p=m.toDateString(),k=this.selectedDates.findIndex(S=>S.toDateString()===p);k>=0?(this.selectedDates.splice(k,1),w.classList.remove("selected")):(this.selectedDates.push(new Date(m)),w.classList.add("selected")),this.updateSelectedDatesInfo(),this.saveFormState()})}s.appendChild(w)}},changeMonth(e){this.currentMonth=e,this.debouncedUpdateDisplay(!0)},navigateToPreviousMonth(){let e=this.currentMonth-1,t=this.currentYear;e<1&&(e=12,t=this.currentYear-1),this.currentMonth=e,this.currentYear=t,this.debouncedUpdateDisplay(!0)},navigateToNextMonth(){let e=this.currentMonth+1,t=this.currentYear;e>12&&(e=1,t=this.currentYear+1),this.currentMonth=e,this.currentYear=t,this.debouncedUpdateDisplay(!0)},debouncedUpdateDisplay(e=!1){this.monthNavigationTimeout&&clearTimeout(this.monthNavigationTimeout),V.refresh();const t=document.querySelector(".chart-progress-fill")||document.querySelector(".progress-fill");t&&(t.dataset.animating="false",t.classList.remove("loading"));const o=window.innerWidth<=768?150:100;this.monthNavigationTimeout=setTimeout(()=>{this.updateDisplay(e),this.monthNavigationTimeout=null},o)},async loadFromSupabase(){const{data:e}=await window.supa.auth.getClaims();if(!!!e){this.setDefaultSettings(),this.updateDisplay();return}const s=await O();if(!s){console.warn("[auth] Missing userId, skipping query");return}console.debug("[auth] using userId:",s);try{const{data:o,error:n}=await window.supa.from("user_shifts").select("*").eq("user_id",s);n?console.error("Error fetching shifts from Supabase:",n):(this.userShifts=(o||[]).map(r=>({id:r.id,date:new Date(r.shift_date+"T00:00:00.000Z"),startTime:r.start_time,endTime:r.end_time,type:r.shift_type,seriesId:r.series_id||null,employee_id:null,employee:null})),this.shifts=[...this.userShifts]);const{data:a,error:i}=await window.supa.from("user_settings").select("*").eq("user_id",s).single();if(i&&i.code!=="PGRST116")console.error("Error fetching settings from Supabase:",i),this.setDefaultSettings();else if(a){this.usePreset=a.use_preset!==!1,this.customWage=a.custom_wage||200,this.currentWageLevel=a.wage_level||a.current_wage_level||1;const r=a.custom_bonuses||{};this.customBonuses={weekday:r.weekday||[],saturday:r.saturday||[],sunday:r.sunday||[]},this.currentMonth=new Date().getMonth()+1,this.currentYear=a.current_year||new Date().getFullYear(),this.pauseDeduction=a.pause_deduction||!1,this.pauseDeductionEnabled=a.pause_deduction_enabled!==!1,this.pauseDeductionMethod=a.pause_deduction_method||"proportional",this.pauseThresholdHours=parseFloat(a.pause_threshold_hours)||5.5,this.pauseDeductionMinutes=parseInt(a.pause_deduction_minutes)||30,this.auditBreakCalculations=!0,this.fullMinuteRange=a.full_minute_range||!1,this.directTimeInput=a.direct_time_input||!1,this.monthlyGoal=a.monthly_goal||2e4,this.currencyFormat=a.currency_format||!1,this.defaultShiftsView=a.default_shifts_view||"list",this.taxDeductionEnabled=a.tax_deduction_enabled===!0,this.taxPercentage=parseFloat(a.tax_percentage)||0,this.payrollDay=parseInt(a.payroll_day)||15}else this.setDefaultSettings();this.updateSettingsUI(),await this.updateTabBarVisibility()}catch(o){console.error("Error in loadFromSupabase:",o),this.setDefaultSettings()}},setDefaultSettings(){this.usePreset=!0,this.customWage=200,this.currentWageLevel=1,this.customBonuses={weekday:[],saturday:[],sunday:[]},this.taxDeductionEnabled=!1,this.taxPercentage=0,this.payrollDay=15,this.currentMonth=new Date().getMonth()+1,this.currentYear=new Date().getFullYear(),this.pauseDeduction=!1,this.pauseDeductionEnabled=!0,this.pauseDeductionMethod="proportional",this.pauseThresholdHours=5.5,this.pauseDeductionMinutes=30,this.auditBreakCalculations=!0,this.fullMinuteRange=!1,this.directTimeInput=!1,this.monthlyGoal=2e4,this.currencyFormat=!1,this.defaultShiftsView="list"},setTestCustomBonuses(){this.customBonuses={weekday:[{from:"18:00",to:"22:00",rate:25}],saturday:[{from:"13:00",to:"18:00",rate:50}],sunday:[{from:"00:00",to:"23:59",rate:100}]},this.populateCustomBonusSlots()},updateSettingsUI(){const e=document.getElementById("usePresetToggle");e&&(e.checked=this.usePreset);const t=document.getElementById("wageSelect");t&&(t.value=this.currentWageLevel);const s=document.getElementById("customWageInput");s&&(s.value=this.customWage);const o=document.getElementById("pauseDeductionEnabledToggle");o&&(o.checked=this.pauseDeductionEnabled);const n=document.getElementById("pauseDeductionMethodSelect");n&&(n.value=this.pauseDeductionMethod);const a=document.getElementById("pauseThresholdInput");a&&(a.value=this.pauseThresholdHours);const i=document.getElementById("pauseDeductionMinutesInput");i&&(i.value=this.pauseDeductionMinutes),this.toggleBreakDeductionSections(),this.updateMethodExplanation();const r=document.getElementById("taxDeductionToggle");r&&(r.checked=this.taxDeductionEnabled);const d=document.getElementById("taxPercentageInput");d&&(d.value=this.taxPercentage);const l=document.getElementById("payrollDayInput");l&&(l.value=this.payrollDay),this.toggleTaxPercentageSection();const u=document.getElementById("fullMinuteRangeToggle");u&&(u.checked=this.fullMinuteRange);const c=document.getElementById("directTimeInputToggle");c&&(c.checked=this.directTimeInput);const m=document.getElementById("currencyFormatToggle");m&&(m.checked=this.currencyFormat);const w=document.getElementById("defaultShiftsViewToggle");w&&(w.checked=this.defaultShiftsView==="calendar");const h=document.getElementById("isWageCaregiverToggle");h&&U().then(g=>{h.checked=g,h.disabled=!0}),this.updateTabBarVisibility(),this.togglePresetSections(),this.usePreset||setTimeout(()=>{this.populateCustomBonusSlots()},100)},togglePresetSections(){const e=document.getElementById("presetWageSection"),t=document.getElementById("customWageSection");e&&t&&(this.usePreset?(e.style.display="block",t.style.display="none"):(e.style.display="none",t.style.display="block",setTimeout(()=>{this.populateCustomBonusSlots()},100)))},async saveSettingsToSupabase(){const{data:e}=await window.supa.auth.getClaims();if(!!!e)return;const s=await O();if(!s){console.warn("[auth] Missing userId, skipping query");return}console.debug("[auth] using userId:",s);try{const{data:o}=await window.supa.from("user_settings").select("*").eq("user_id",s).single(),n={user_id:s,updated_at:new Date().toISOString()};o?("use_preset"in o&&(n.use_preset=this.usePreset),"wage_level"in o&&(n.wage_level=this.currentWageLevel),"current_wage_level"in o&&(n.current_wage_level=this.currentWageLevel),"custom_wage"in o&&(n.custom_wage=this.customWage),"current_year"in o&&(n.current_year=this.currentYear),"pause_deduction"in o&&(n.pause_deduction=this.pauseDeduction),"full_minute_range"in o&&(n.full_minute_range=this.fullMinuteRange),"direct_time_input"in o&&(n.direct_time_input=this.directTimeInput),"monthly_goal"in o&&(n.monthly_goal=this.monthlyGoal),"currency_format"in o&&(n.currency_format=this.currencyFormat),"default_shifts_view"in o&&(n.default_shifts_view=this.defaultShiftsView),"custom_bonuses"in o&&(n.custom_bonuses=this.customBonuses||{}),"tax_deduction_enabled"in o&&(n.tax_deduction_enabled=this.taxDeductionEnabled),"tax_percentage"in o&&(n.tax_percentage=this.taxPercentage),"payroll_day"in o&&(n.payroll_day=this.payrollDay),n.pause_deduction_enabled=this.pauseDeductionEnabled,n.pause_deduction_method=this.pauseDeductionMethod,n.pause_threshold_hours=this.pauseThresholdHours,n.pause_deduction_minutes=this.pauseDeductionMinutes,n.audit_break_calculations=this.auditBreakCalculations,console.log("Saving tax deduction settings:",{has_tax_enabled_column:"tax_deduction_enabled"in o,has_tax_percentage_column:"tax_percentage"in o,saving_enabled:this.taxDeductionEnabled,saving_percentage:this.taxPercentage})):(n.use_preset=this.usePreset,n.wage_level=this.currentWageLevel,n.custom_wage=this.customWage,n.current_year=this.currentYear,n.pause_deduction=this.pauseDeduction,n.pause_deduction_enabled=this.pauseDeductionEnabled,n.pause_deduction_method=this.pauseDeductionMethod,n.pause_threshold_hours=this.pauseThresholdHours,n.pause_deduction_minutes=this.pauseDeductionMinutes,n.audit_break_calculations=this.auditBreakCalculations,n.full_minute_range=this.fullMinuteRange,n.direct_time_input=this.directTimeInput,n.monthly_goal=this.monthlyGoal,n.currency_format=this.currencyFormat,n.default_shifts_view=this.defaultShiftsView,n.custom_bonuses=this.customBonuses||{},n.tax_deduction_enabled=this.taxDeductionEnabled,n.tax_percentage=this.taxPercentage,n.payroll_day=this.payrollDay);const{error:a}=await window.supa.from("user_settings").upsert(n,{onConflict:"user_id"});if(a){console.error("Error saving settings to Supabase:",a);const i={user_id:s,updated_at:new Date().toISOString()},{error:r}=await window.supa.from("user_settings").upsert(i,{onConflict:"user_id"});r&&console.error("Even minimal save failed:",r)}}catch(o){console.error("Error in saveSettingsToSupabase:",o)}},async loadFromLocalStorage(){try{const e=localStorage.getItem("lønnsberegnerSettings");if(e){const t=JSON.parse(e);this.usePreset=t.usePreset!==!1,this.customWage=t.customWage||200,this.currentWageLevel=t.currentWageLevel||1,this.customBonuses=t.customBonuses||{},this.currentMonth=new Date().getMonth()+1,this.pauseDeduction=t.pauseDeduction!==!1,this.pauseDeductionEnabled=t.pauseDeductionEnabled!==!1,this.pauseDeductionMethod=t.pauseDeductionMethod||"proportional",this.pauseThresholdHours=parseFloat(t.pauseThresholdHours)||5.5,this.pauseDeductionMinutes=parseInt(t.pauseDeductionMinutes)||30,this.auditBreakCalculations=!0,this.fullMinuteRange=t.fullMinuteRange||!1,this.directTimeInput=t.directTimeInput||!1,this.monthlyGoal=t.monthlyGoal||2e4,this.currencyFormat=t.currencyFormat||!1,this.defaultShiftsView=t.defaultShiftsView||"list",this.taxDeductionEnabled=t.taxDeductionEnabled||!1,this.taxPercentage=t.taxPercentage||0,this.payrollDay=parseInt(t.payrollDay)||15,this.updateSettingsUI(),await this.updateTabBarVisibility()}else this.setDefaultSettings()}catch(e){console.error("Error loading from localStorage:",e),this.setDefaultSettings()}},saveFormState(){const e={selectedDates:this.selectedDates?this.selectedDates.map(t=>t.toISOString()):[],startHour:document.getElementById("startHour")?.value||"",startMinute:document.getElementById("startMinute")?.value||"",endHour:document.getElementById("endHour")?.value||"",endMinute:document.getElementById("endMinute")?.value||""};this.formState=e,localStorage.setItem("vaktberegnerFormState",JSON.stringify(e))},restoreFormState(){try{const e=localStorage.getItem("vaktberegnerFormState");if(e){const t=JSON.parse(e);if(t.selectedDates&&t.selectedDates.length>0?(this.selectedDates=[],t.selectedDates.forEach(s=>{const o=new Date(s),n=o.getMonth()+1,a=o.getFullYear();if(n===this.currentMonth&&a===this.currentYear){this.selectedDates.push(o);const i=o.getDate();document.querySelectorAll(".date-cell").forEach(d=>{const l=d.querySelector(".date-cell-content");l&&l.textContent==i&&!d.classList.contains("disabled")&&d.classList.add("selected")})}})):this.selectedDates=[],t.selectedDate&&(!t.selectedDates||t.selectedDates.length===0)){const s=new Date(t.selectedDate),o=s.getMonth()+1,n=s.getFullYear();if(o===this.currentMonth&&n===this.currentYear){this.selectedDates=[s];const a=s.getDate();document.querySelectorAll(".date-cell").forEach(r=>{const d=r.querySelector(".date-cell-content");d&&d.textContent==a&&!r.classList.contains("disabled")&&r.classList.add("selected")})}}setTimeout(()=>{const s=document.getElementById("startHour"),o=document.getElementById("startMinute"),n=document.getElementById("endHour"),a=document.getElementById("endMinute");s&&t.startHour&&(s.value=t.startHour),o&&t.startMinute&&(o.value=t.startMinute),n&&t.endHour&&(n.value=t.endHour),a&&t.endMinute&&(a.value=t.endMinute)},100),this.formState=t,this.updateSelectedDatesInfo()}}catch(e){console.error("Error restoring form state:",e)}},clearFormState(){this.formState={},localStorage.removeItem("vaktberegnerFormState")},setupFormStateListeners(){["startHour","startMinute","endHour","endMinute"].forEach(t=>{const s=document.getElementById(t);s&&s.addEventListener("change",()=>{this.saveFormState()})})},async switchSettingsTab(e){const t=document.getElementById("settingsModal");if(!t)return;const s=t.querySelector(".tab-nav .tab-btn.active");if((s?.dataset?.tab||(s?.textContent?.trim()==="Lønn"?"wage":s?.textContent?.trim()==="UI"?"interface":s?.textContent?.trim()==="Bedrift"?"org":s?.textContent?.trim()==="Data"?"data":null))==="wage"&&!this.usePreset&&e!=="wage"&&await this.saveCustomBonusesSilent(),t.querySelectorAll(".tab-nav .tab-btn").forEach(i=>{const r=i.dataset?.tab||(i.textContent?.trim()==="Lønn"?"wage":i.textContent?.trim()==="UI"?"interface":i.textContent?.trim()==="Bedrift"?"org":i.textContent?.trim()==="Data"?"data":"");i.classList.toggle("active",r===e)}),["wageTab","interfaceTab","orgTab","dataTab"].forEach(i=>{const r=document.getElementById(i);r&&r.classList.toggle("active",i===`${e}Tab`)}),e==="wage"&&!this.usePreset&&setTimeout(()=>this.populateCustomBonusSlots(),100),e==="data"&&setTimeout(()=>this.setupExportPeriodOptions(),100),e==="org"){const i=document.getElementById("breakPolicySelect");i&&this.orgSettings?.break_policy&&(i.value=this.orgSettings.break_policy),i&&!i._immediateSaveBound&&(i.addEventListener("change",async()=>{await this.saveOrgSettings()}),i._immediateSaveBound=!0);const r=document.getElementById("orgIsWageCaregiverToggle");if(r){U().then(l=>{r.checked=l,r.disabled=!0}),r.onchange=()=>this.onOrgWageCaregiverToggle();const d=document.querySelector("#orgIsWageCaregiverToggle + .toggle-slider");d&&(d.style.cursor="pointer",d.onclick=l=>{l.preventDefault(),r.checked=!r.checked,this.onOrgWageCaregiverToggle()})}await this.updateOrgSettingsUI()}},switchSettingsTabSync(e){this.switchSettingsTab(e).catch(console.error)},async togglePreset(){const e=!this.usePreset;this.usePreset=document.getElementById("usePresetToggle").checked,e&&this.usePreset&&await this.saveCustomBonusesSilent(),this.togglePresetSections(),this.saveSettingsToSupabase(),this.updateDisplay()},toggleTaxDeduction(){const e=document.getElementById("taxDeductionToggle");this.taxDeductionEnabled=e.checked,this.toggleTaxPercentageSection(),this.saveSettingsToSupabase(),this.updateDisplay()},toggleTaxPercentageSection(){const e=document.getElementById("taxPercentageSection");e?this.taxDeductionEnabled?e.style.display="block":e.style.display="none":console.log("Tax percentage section element not found - modal may not be loaded yet")},updateTaxPercentage(e){const t=parseFloat(e)||0;t<0?this.taxPercentage=0:t>100?this.taxPercentage=100:this.taxPercentage=t;const s=document.getElementById("taxPercentageInput");s&&(s.value=this.taxPercentage),this.saveSettingsToSupabase(),this.updateDisplay()},updateTaxDeductionUI(){const e=document.getElementById("taxDeductionToggle"),t=document.getElementById("taxPercentageInput"),s=document.getElementById("taxPercentageSection");if(e&&(e.checked=this.taxDeductionEnabled),t&&(t.value=this.taxPercentage,console.log("Set input to:",this.taxPercentage)),s){const o=this.taxDeductionEnabled;s.style.display=o?"block":"none",console.log("Set section visibility to:",o?"visible":"hidden")}},updatePayrollDay(e){const t=parseInt(e);isNaN(t)||t<1||t>31?(console.warn("Invalid payroll day:",e,"Using default value 15"),this.payrollDay=15):this.payrollDay=t;const s=document.getElementById("payrollDayInput");s&&(s.value=this.payrollDay),this.saveSettingsToSupabase(),this.updateDisplay()},getNextPayrollDate(){const e=new Date,t=e.getFullYear(),s=e.getMonth();e.getDate();let o=new Date(t,s,this.payrollDay);o<=e&&(o=new Date(t,s+1,this.payrollDay));const n=o.getMonth(),a=new Date(o.getFullYear(),n+1,0).getDate();this.payrollDay>a&&o.setDate(a);const i=o.getDay();return i===0?o.setDate(o.getDate()-2):i===6&&o.setDate(o.getDate()-1),o},getLastPayrollDate(e){const t=new Date(e);t.setMonth(t.getMonth()-1);const s=t.getMonth(),o=new Date(t.getFullYear(),s+1,0).getDate();this.payrollDay>o&&t.setDate(o);const n=t.getDay();return n===0?t.setDate(t.getDate()-2):n===6&&t.setDate(t.getDate()-1),t},getPayrollDateForMonth(e,t){let s=new Date(t,e-1,this.payrollDay);const o=s.getMonth(),n=new Date(s.getFullYear(),o+1,0).getDate();this.payrollDay>n&&s.setDate(n);const a=s.getDay();return a===0?s.setDate(s.getDate()-2):a===6&&s.setDate(s.getDate()-1),s},populateCustomBonusSlots(){["weekday","saturday","sunday"].forEach(t=>{const s=document.getElementById(`${t}BonusSlots`);if(!s){console.error(`Container ${t}BonusSlots not found`);return}s.innerHTML="",(this.customBonuses&&this.customBonuses[t]||[]).forEach(n=>{const a=document.createElement("div");a.className="bonus-slot",a.innerHTML=`
                    <input type="time" class="form-control" value="${n.from}">
                    <input type="time" class="form-control" value="${n.to}">
                    <input type="number" class="form-control" placeholder="kr/t" value="${n.rate}">
                    <button class="btn btn-icon btn-danger remove-bonus" title="Fjern dette tillegget">×</button>
                `,a.querySelectorAll("input").forEach(d=>{d.type==="time"&&d.addEventListener("blur",()=>{this.formatTimeInput(d)}),d.addEventListener("change",()=>{d.type==="time"&&this.formatTimeInput(d),this.autoSaveCustomBonuses()})});const r=a.querySelector(".remove-bonus");r&&r.addEventListener("click",d=>{d.stopPropagation(),this.removeBonusSlot(r)}),s.appendChild(a)})})},addBonusSlot(e){const t=document.getElementById(`${e}BonusSlots`);if(!t){console.error(`Container ${e}BonusSlots not found`);return}const s=document.createElement("div");s.className="bonus-slot",s.innerHTML=`
            <div class="time-input-group">
                <label class="time-label">Fra:</label>
                <input type="time" class="form-control" placeholder="--:--" title="Angi starttid (timer:minutter)">
            </div>
            <div class="time-input-group">
                <label class="time-label">Til:</label>
                <input type="time" class="form-control" placeholder="--:--" title="Angi sluttid (timer:minutter)">
            </div>
            <div class="rate-input-group">
                <input type="number" class="form-control" placeholder="kr/t" title="Angi tilleggssats i kroner per time">
            </div>
            <button class="btn btn-icon btn-danger remove-bonus" title="Fjern dette tillegget">×</button>
        `,s.querySelectorAll("input").forEach(a=>{a.type==="time"&&a.addEventListener("blur",()=>{this.formatTimeInput(a)}),a.addEventListener("change",()=>{a.type==="time"&&this.formatTimeInput(a),this.autoSaveCustomBonuses()})});const n=s.querySelector(".remove-bonus");n&&n.addEventListener("click",a=>{a.stopPropagation(),this.removeBonusSlot(n)}),t.appendChild(s)},removeBonusSlot(e){e.closest(".bonus-slot").remove(),this.usePreset||this.saveCustomBonusesSilent().catch(console.error)},formatTimeInput(e){const t=e.value.trim();if(t){if(/^\d{1,2}$/.test(t)){const s=parseInt(t);s>=0&&s<=23&&(e.value=s.toString().padStart(2,"0")+":00")}else if(/^\d{1,2}:\d{1}$/.test(t)){const s=t.split(":"),o=parseInt(s[0]),n=parseInt(s[1]);o>=0&&o<=23&&n>=0&&n<=59&&(e.value=o.toString().padStart(2,"0")+":"+n.toString().padStart(2,"0"))}}},autoSaveCustomBonuses(){this.usePreset||(this.autoSaveTimeout&&(clearTimeout(this.autoSaveTimeout),this.autoSaveTimeout=null),this.autoSaveTimeout=setTimeout(()=>{this.saveCustomBonusesSilent().catch(console.error),this.autoSaveTimeout=null},5e3))},showSaveStatus(e){let t=document.getElementById("bonus-save-status");t||(t=document.createElement("div"),t.id="bonus-save-status",t.style.cssText=`
                position: fixed;
                top: 20px;
                right: 20px;
                background: var(--bg-primary);
                border: 1px solid var(--border);
                border-radius: 8px;
                padding: 12px 16px;
                font-size: 14px;
                font-weight: 500;
                z-index: 10000;
                box-shadow: 0 4px 12px var(--shadow-blue);
                transition: all 0.3s var(--ease-default);
                opacity: 0;
                transform: translateX(100%);
            `,document.body.appendChild(t)),t.textContent=e,t.style.opacity="1",t.style.transform="translateX(0)",setTimeout(()=>{t.style.opacity="0",t.style.transform="translateX(100%)"},3e3)},async openSettings(){this.closeShiftDetails(),this.closeProfileDropdown(),this.closeProfile();const e=document.querySelector(".floating-action-bar"),t=document.querySelector(".floating-action-bar-backdrop");e&&(e.style.display="none"),t&&(t.style.display="none");const s=document.getElementById("settingsModal");s&&(this.updateSettingsUI(),this.switchSettingsTabSync("wage"),setTimeout(()=>{this.updateTaxDeductionUI()},50),s.style.display="flex",this.setupCollapsibleEventListeners(),this.usePreset||setTimeout(()=>{this.populateCustomBonusSlots()},100))},async openPaydateSettings(){this.closeShiftDetails(),this.closeProfileDropdown(),this.closeProfile();const e=document.querySelector(".floating-action-bar"),t=document.querySelector(".floating-action-bar-backdrop");e&&(e.style.display="none"),t&&(t.style.display="none");const s=document.getElementById("settingsModal");s&&(this.updateSettingsUI(),this.switchSettingsTabSync("wage"),setTimeout(()=>{this.updateTaxDeductionUI()},50),s.style.display="flex",this.usePreset||setTimeout(()=>{this.populateCustomBonusSlots()},100),setTimeout(()=>{const o=document.getElementById("payrollDayInput");o&&(o.scrollIntoView({behavior:"smooth",block:"center"}),setTimeout(()=>{o.focus(),o.select()},300))},150))},async closeSettings(e=!0){const t=document.getElementById("settingsModal");t&&t.style.display!=="none"&&e&&(this.usePreset||await this.saveCustomBonusesSilent(),this.saveSettingsToSupabase()),t&&(t.style.display="none");const o=document.querySelector(".floating-action-bar"),n=document.querySelector(".floating-action-bar-backdrop");o&&(o.style.display=""),n&&(n.style.display=""),this.closeProfileDropdown()},setupCollapsibleEventListeners(){const e=document.getElementById("settingsModal");e&&(e.removeEventListener("click",this.handleCollapsibleToggle),this.handleCollapsibleToggle=t=>{const s=t.target.closest(".settings-collapse-toggle");if(!s)return;const o=s.getAttribute("data-toggle-section");o&&(t.preventDefault(),this.toggleSettingsSection(o,s))},e.addEventListener("click",this.handleCollapsibleToggle),console.log("Collapsible event listeners set up"))},toggleSettingsSection(e,t){const s=document.getElementById(e);if(console.log("Debug: toggleSettingsSection called with:",{sectionId:e,buttonElement:t,section:s}),!s){console.warn(`toggleSettingsSection: Could not find section '${e}'`);return}if(!t){console.warn(`toggleSettingsSection: No button element provided for '${e}'`);return}t.getAttribute("aria-expanded")==="true"?(s.style.display="none",t.setAttribute("aria-expanded","false"),console.log(`Collapsed section: ${e}`)):(s.style.display="block",t.setAttribute("aria-expanded","true"),console.log(`Expanded section: ${e}`))},toggleDashboardView(){const e=document.getElementById("dashboardToggleBtn");if(!e)return;this.dashboardView=this.dashboardView==="default"?"stats":"default",e.classList.toggle("active",this.dashboardView==="stats");const t=e.querySelector(".toggle-text");t&&(t.textContent=this.dashboardView==="stats"?"Std.":"Stat."),e.setAttribute("aria-label",this.dashboardView==="stats"?"Bytt til standardvisning":"Bytt til statistikkvisning"),this.applyDashboardView(),localStorage.setItem("dashboardView",this.dashboardView)},applyDashboardView(){const e=document.body,t=document.querySelector(".dashboard-content"),s=document.querySelector(".statistics-section"),o=document.getElementById("weeklyHoursChart");if(this.dashboardView==="stats"){e.classList.add("stats-view"),console.log("Body classes after adding stats-view:",e.className);const n=document.querySelector(".total-card"),a=document.querySelector(".next-shift-card"),i=document.querySelector(".next-payroll-card");if(n&&(n.style.display="none",console.log("Manually hid total card")),a&&(a.style.display="none",console.log("Manually hid next shift card")),i&&(i.style.display="none",console.log("Manually hid next payroll card")),o&&t&&!t.contains(o)){const r=document.createElement("div");r.className="dashboard-stats-container",r.style.order="1",r.appendChild(o),t.appendChild(r)}console.log("Applied stats view - stats card replaces dashboard content")}else{e.classList.remove("stats-view");const n=document.querySelector(".total-card"),a=document.querySelector(".next-shift-card"),i=document.querySelector(".next-payroll-card");if(n&&(n.style.display="",console.log("Showed total card")),a&&(a.style.display="",console.log("Showed next shift card")),i&&(i.style.display="",console.log("Showed next payroll card")),o&&s){const r=s.querySelector(".statistics-content"),d=document.querySelector(".dashboard-stats-container");d&&r&&(r.appendChild(o),d.remove())}console.log("Applied default view - stats card moved back to statistics section")}},toggleProfileDropdown(){const e=document.getElementById("profileDropdown");if(!e)return;e.classList.contains("show")?this.closeProfileDropdown():this.openProfileDropdown()},openProfileDropdown(){const e=document.getElementById("profileDropdown");e&&(this.closeShiftDetails(),e.style.display="block",e.offsetHeight,e.classList.add("show"),setTimeout(()=>{document.addEventListener("click",this.handleClickOutside.bind(this)),document.addEventListener("keydown",this.handleDropdownKeydown.bind(this))},0))},closeProfileDropdown(){const e=document.getElementById("profileDropdown");e&&(e.classList.remove("show"),setTimeout(()=>{e.classList.contains("show")||(e.style.display="none")},200),document.removeEventListener("click",this.handleClickOutside.bind(this)),document.removeEventListener("keydown",this.handleDropdownKeydown.bind(this)))},handleClickOutside(e){const t=document.getElementById("profileDropdown"),s=document.querySelector(".user-profile-btn");!t||!s||!t.contains(e.target)&&!s.contains(e.target)&&this.closeProfileDropdown()},handleDropdownKeydown(e){const t=document.getElementById("profileDropdown");if(!(!t||!t.classList.contains("show"))&&e.key==="Escape"){this.closeProfileDropdown();const s=document.querySelector(".user-profile-btn");s&&s.focus()}},openProfile(){this.closeProfileDropdown(),this.closeSettings(!1),this.closeShiftDetails();const e=document.querySelector(".floating-action-bar"),t=document.querySelector(".floating-action-bar-backdrop");e&&(e.style.display="none"),t&&(t.style.display="none");const s=document.getElementById("profileModal");if(s){this.loadProfileData(),this.initProfileAvatarControls(),this.initGoogleLinkButton();const o=document.getElementById("profile-form"),n=document.getElementById("profileName");if(o){const r=d=>{d.preventDefault(),this.updateProfile()};o.addEventListener("submit",r),s.profileFormSubmitHandler=r}if(n){const r=()=>{this.updateProfile()},d=l=>{l.key==="Enter"&&(l.preventDefault(),this.updateProfile())};n.addEventListener("blur",r),n.addEventListener("keypress",d),s.profileNameBlurHandler=r,s.profileNameKeyHandler=d}s.style.display="flex",s.classList.add("active");const a=r=>{r.key==="Escape"&&(this.updateProfile(),this.closeProfile())};document.addEventListener("keydown",a),s.keydownHandler=a;const i=r=>{r.target===s&&(this.updateProfile(),this.closeProfile())};s.addEventListener("click",i),s.clickOutsideHandler=i}},closeProfile(){const e=document.getElementById("profileModal");if(e){try{this.updateProfile()}catch{}e.style.display="none",e.classList.remove("active"),e.keydownHandler&&(document.removeEventListener("keydown",e.keydownHandler),e.keydownHandler=null),e.clickOutsideHandler&&(e.removeEventListener("click",e.clickOutsideHandler),e.clickOutsideHandler=null);const t=document.getElementById("profile-form"),s=document.getElementById("profileName");t&&e.profileFormSubmitHandler&&(t.removeEventListener("submit",e.profileFormSubmitHandler),e.profileFormSubmitHandler=null),s&&(e.profileNameBlurHandler&&(s.removeEventListener("blur",e.profileNameBlurHandler),e.profileNameBlurHandler=null),e.profileNameKeyHandler&&(s.removeEventListener("keypress",e.profileNameKeyHandler),e.profileNameKeyHandler=null));const o=document.querySelector(".floating-action-bar"),n=document.querySelector(".floating-action-bar-backdrop");o&&(o.style.display=""),n&&(n.style.display="")}},closeStatDetails(){const e=document.querySelector(".stat-detail-modal"),t=document.querySelector(".stat-expanded"),s=document.querySelector(".stat-backdrop");e&&(e.style.display="none",e.remove()),t&&t.classList.remove("expanded"),s&&s.remove(),this.statDetailsKeydownHandler&&(document.removeEventListener("keydown",this.statDetailsKeydownHandler),this.statDetailsKeydownHandler=null)},handleLogout(){this.closeProfileDropdown(),window.chatbox&&window.chatbox.clear&&window.chatbox.clear(),typeof window.logout=="function"&&window.logout()},async restartOnboarding(){try{const{error:e}=await window.supa.auth.updateUser({data:{finishedOnboarding:!1}});if(e){console.error("Error resetting onboarding flag:",e),alert("Det oppstod en feil ved tilbakestilling av onboarding. Prøv igjen.");return}this.closeProfile(),window.location.href="/onboarding.html"}catch(e){console.error("Error restarting onboarding:",e),alert("Det oppstod en feil ved tilbakestilling av onboarding. Prøv igjen.")}},async openSubscription(){this.closeProfileDropdown(),this.closeProfile();try{const{SubscriptionModal:e}=await F(async()=>{const{SubscriptionModal:t}=await import("./subscriptionModal-vtNCg7aA.js");return{SubscriptionModal:t}},__vite__mapDeps([10,2,3,4,1,5,6,7,8]));this._subscriptionModal||(this._subscriptionModal=new e),await this._subscriptionModal.show()}catch(e){console.error("Error opening subscription modal:",e),window.ErrorHelper&&window.ErrorHelper.showError&&window.ErrorHelper.showError("Kunne ikke åpne abonnement.")}},async loadUserNickname(){try{const{data:{user:e}}=await window.supa.auth.getUser();if(!e)return;const t=document.getElementById("userNickname");if(t){const s=e.user_metadata?.first_name||e.email?.split("@")[0]||"Bruker";t.textContent=s}window.chatbox&&window.chatbox.updatePlaceholder&&window.chatbox.updatePlaceholder()}catch(e){console.error("Error loading user nickname:",e);const t=document.getElementById("userNickname");t&&(t.textContent="Bruker"),window.chatbox&&window.chatbox.updatePlaceholder&&window.chatbox.updatePlaceholder()}},saveToLocalStorage(){try{const e={usePreset:this.usePreset,customWage:this.customWage,currentWageLevel:this.currentWageLevel,customBonuses:this.customBonuses,pauseDeduction:this.pauseDeduction,pauseDeductionEnabled:this.pauseDeductionEnabled,pauseDeductionMethod:this.pauseDeductionMethod,pauseThresholdHours:this.pauseThresholdHours,pauseDeductionMinutes:this.pauseDeductionMinutes,auditBreakCalculations:this.auditBreakCalculations,fullMinuteRange:this.fullMinuteRange,directTimeInput:this.directTimeInput,currencyFormat:this.currencyFormat,defaultShiftsView:this.defaultShiftsView,taxDeductionEnabled:this.taxDeductionEnabled,taxPercentage:this.taxPercentage};localStorage.setItem("lønnsberegnerSettings",JSON.stringify(e))}catch(e){console.error("Error saving to localStorage",e)}},getCurrentWageRate(){return this.usePreset?this.PRESET_WAGE_RATES[this.currentWageLevel]:this.customWage},getWageRateForShift(e){const t=Number(e?.hourly_wage_snapshot);return!Number.isNaN(t)&&t>0?t:this.getCurrentWageRate()},getCurrentBonuses(){if(this.usePreset)return this.PRESET_BONUSES;{const e=this.customBonuses||{};return{weekday:e.weekday||[],saturday:e.saturday||[],sunday:e.sunday||[]}}},refreshUI(e){console.log("Refreshing all UI components after shift changes"),this.showUIRefreshLoading(),setTimeout(()=>{try{this.renderShiftTable(e),this.updateWeekCards(e),this.updatePayrollCard(e),this.updateStats(),this.updateWeeklyHoursChart(),this.updateShiftCalendar(),this.updateNextShiftCard(),this.populateDateGrid(),this.updateHeader(),this.startNextShiftTimer(),console.log("UI refresh completed successfully")}catch(t){console.error("Error during UI refresh:",t)}finally{this.hideUIRefreshLoading()}},50)},updateDisplay(e=!1){this.updateHeader(),this.updateNextShiftCard(),this.updateNextPayrollCard(),this.updateStats(e),this.updateWeeklyHoursChart(),this.updateShiftList(),this.updateShiftCalendar(),this.populateDateGrid(),this.startNextShiftTimer(),this.currentView==="employees"&&(this.fetchAndDisplayEmployeeShifts?.(),this.renderEmployeeWorkSummary?.()),this.currentView==="stats"&&this.renderCurrentUserWorkSummary?.()},showUIRefreshLoading(){const e=document.querySelector(".dashboard-content"),t=document.querySelector(".statistics-content");if(e&&!e.querySelector(".refresh-loading-overlay")){const s=this.createLoadingOverlay("Oppdaterer...");s.classList.add("refresh-loading-overlay"),e.appendChild(s)}if(t&&!t.querySelector(".refresh-loading-overlay")){const s=this.createLoadingOverlay("Oppdaterer...");s.classList.add("refresh-loading-overlay"),t.appendChild(s)}},hideUIRefreshLoading(){document.querySelectorAll(".refresh-loading-overlay").forEach(t=>t.remove())},createLoadingOverlay(e="Laster..."){const t=document.createElement("div");t.className="loading-overlay",t.style.cssText=`
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(4px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            border-radius: inherit;
        `;const s=document.createElement("div");s.className="loading-spinner",s.style.cssText=`
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
        `;const o=document.createElement("div");o.style.cssText=`
            width: 24px;
            height: 24px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        `;const n=document.createElement("span");return n.textContent=e,s.appendChild(o),s.appendChild(n),t.appendChild(s),t},renderShiftTable(e){this.updateShiftList()},updateWeekCards(e){const t=this.shifts.filter(o=>o.date.getMonth()===this.currentMonth-1&&o.date.getFullYear()===this.currentYear),s={};t.forEach(o=>{const n=this.getISOWeekNumber(o.date);s[n]||(s[n]={hours:0,earnings:0,shifts:[]});const a=this.calculateShift(o);s[n].hours+=a.hours,s[n].earnings+=a.total,s[n].shifts.push(o)}),this.updateWeeklyHoursChart(),console.log("Week cards updated with data for",Object.keys(s).length,"weeks")},updatePayrollCard(e){this.updateNextPayrollCard(),console.log("Payroll card updated via existing updateNextPayrollCard function")},updateHeader(){const e=this.MONTHS[this.currentMonth-1].charAt(0).toUpperCase()+this.MONTHS[this.currentMonth-1].slice(1);document.getElementById("currentMonth").textContent=`${e} ${this.currentYear}`;const t=document.getElementById("currentMonthDashboard");t&&(t.textContent=`${e} ${this.currentYear}`);const s=document.getElementById("monthNavDisplayNav");s&&(s.textContent=`${e} ${this.currentYear}`);const o=document.querySelector(".total-label");if(o){const n=new Date;this.currentMonth===n.getMonth()+1&&this.currentYear===n.getFullYear()?o.textContent="Brutto":o.textContent=`Brutto (${e.toLowerCase()})`}this.updateCurrentMonthLabel()},updateStats(e=!1){if(this.isInDrillDownMode()){this.updateDrillDownStats(e);return}let t=0,s=0,o=0;const n=this.shifts.filter(p=>p.date.getMonth()===this.currentMonth-1&&p.date.getFullYear()===this.currentYear);n.forEach(p=>{const k=this.calculateShift(p);t+=k.hours,s+=k.baseWage,o+=k.bonus});const a=s+o,i=this.taxDeductionEnabled?a*(1-this.taxPercentage/100):a,r=document.getElementById("totalAmount"),d=document.getElementById("totalHours");r&&(r.textContent=this.formatCurrency(i)),d&&(d.textContent=t.toFixed(1));const l=document.getElementById("shiftCount");l&&(l.textContent=n.length);const u=document.querySelector(".shifts-count-label");u&&(u.textContent="vakter");const c=document.getElementById("totalSecondaryInfo");c&&(this.taxDeductionEnabled?c.innerHTML=`
                    <div class="secondary-info-content">
                        <span class="bonus-amount">${this.formatCurrency(a)}</span>
                        <span class="before-tax-text">før skatt</span>
                    </div>
                `:c.innerHTML=`
                    <div class="secondary-info-content">
                        <span class="bonus-amount">${this.formatCurrency(o)}</span>
                        <span class="before-tax-text">i tillegg</span>
                    </div>
                `);const m=document.querySelector(".total-card");m&&(m.dataset.populated="1");const w=document.getElementById("headerShiftCount");w&&(w.textContent=n.length),this.updateLastUpdatedTime();const h=document.querySelector(".total-label");if(h){const p=this.taxDeductionEnabled?"Netto":"Brutto",k=this.currentMonth===1?12:this.currentMonth-1,S=this.currentMonth===1?this.currentYear-1:this.currentYear,f=this.shifts.filter(y=>y.date.getMonth()===k-1&&y.date.getFullYear()===S);let v=0;f.forEach(y=>{v+=this.calculateShift(y).total});const b=this.taxDeductionEnabled?v*(1-this.taxPercentage/100):v;let D=0;if(b>0&&(D=(i-b)/b*100),Math.abs(D)>.1){const y=D>=0?"▲":"▼",E=this.MONTHS[k-1];h.textContent=`${p} ${y} ${Math.abs(D).toFixed(1)}% vs. ${E}`}else h.textContent=p}const g=X();se(i,g,e)},updateDrillDownStats(e=!1){const{totalCurrentMonthHours:t,totalCurrentMonthEarnings:s,totalWeekHours:o,totalWeekEarnings:n}=this.getDailyDataForWeek(this.selectedWeek),a=o>t||n>s,i=this.shifts.filter(g=>g.date.getMonth()===this.currentMonth-1&&g.date.getFullYear()===this.currentYear);let r=0;i.forEach(g=>{const p=this.calculateShift(g);r+=p.hours}),document.getElementById("totalHours").textContent=t.toFixed(2);const d=document.querySelector(".chart-hours-value-card");if(d)if(a){const g=o-t,p=`Kun timer for ${this.MONTHS[this.currentMonth-1]} er med i utregningen. Ekskludert: ${g.toFixed(1)} timer fra andre måneder.`;d.classList.add("has-tooltip"),d.setAttribute("data-tooltip",p),this.setupWageCardTooltip(d)}else d.classList.remove("has-tooltip"),d.removeAttribute("data-tooltip"),this.removeWageCardTooltip(d);const l=document.getElementById("shiftCount"),u=document.querySelector(".shifts-count-label"),c=document.querySelector(".chart-shifts-count-card");if(l&&u&&c){const g=this.taxDeductionEnabled?s*(1-this.taxPercentage/100):s;if(l.textContent=this.formatCurrency(g).replace(" kr",""),u.textContent="kroner",a){const p=o-t,k=n-s,S=this.taxDeductionEnabled?k*(1-this.taxPercentage/100):k,f=`Kun vakter for ${this.MONTHS[this.currentMonth-1]} er med i utregningen. Ekskludert: ${p.toFixed(1)} timer (${this.formatCurrency(S)}) fra andre måneder.`;c.classList.add("has-tooltip"),c.setAttribute("data-tooltip",f),this.setupWageCardTooltip(c)}else c.classList.remove("has-tooltip"),c.removeAttribute("data-tooltip"),this.removeWageCardTooltip(c)}const m=r>0?t/r*100:0,w=document.querySelector(".chart-progress-label");if(w){const g=m<10?m.toFixed(1):Math.round(m);w.textContent=`${g}% av ${r.toFixed(1)} timer`}const h=document.querySelector(".chart-progress-fill");if(h){const g=Math.min(m,100);e?requestAnimationFrame(()=>{h.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)",h.style.width=g+"%"}):(h.style.transition="none",h.style.width=g+"%",h.offsetHeight,h.style.transition="width 0.8s cubic-bezier(0.4, 0, 0.2, 1)"),m>=100?h.classList.add("full"):h.classList.remove("full"),m>0?h.classList.add("active"):h.classList.remove("active")}},setupWageCardTooltip(e){if(!e||e.hasTooltipListener)return;const t=document.getElementById("wageCardTooltip");if(!t)return;const s=n=>{const a=e.getAttribute("data-tooltip");if(!a)return;const i=document.getElementById("wageTooltipContent");i&&(i.textContent=a);const r=e.getBoundingClientRect(),d=window.innerWidth,l=window.innerHeight,u=document.querySelector(".chart-stats-section")||document.querySelector(".chart-hours-section")||e.closest(".weekly-hours-chart-card"),c=u?u.getBoundingClientRect():r,w=d>768?Math.min(240,c.width-32):Math.min(280,d-32),h=70,g=12,p=document.querySelector(".chart-hours-value-card"),k=document.querySelector(".chart-shifts-count-card");let S=r.left+r.width/2-w/2,f;if(p&&k){const B=p.getBoundingClientRect(),L=k.getBoundingClientRect().top-B.bottom,M=B.bottom+L/2-h/2;L>=h+g*2?f=M:f=B.bottom+g}else f=r.top-h-g;const v=c.left+g,b=c.right-g;S<v?S=v:S+w>b&&(S=b-w),f<g&&(f=g),f+h>l-g&&(f=l-h-g);const D=document.querySelector(".back-button");if(D){const B=D.getBoundingClientRect();f+h>B.top-g&&(f=B.top-h-g,f<g&&p&&(f=p.getBoundingClientRect().top-h-g,f<g&&(f=g)))}const E=t.parentElement.getBoundingClientRect(),C=S-E.left,T=f-E.top;t.style.left=`${C}px`,t.style.top=`${T}px`,t.classList.add("show"),e.classList.add("tooltip-active")},o=()=>{t.classList.remove("show"),e.classList.remove("tooltip-active")};e.addEventListener("click",n=>{n.stopPropagation(),e.classList.contains("tooltip-active")?o():(document.querySelectorAll(".chart-hours-value-card.tooltip-active, .chart-shifts-count-card.tooltip-active").forEach(a=>{a!==e&&a.classList.remove("tooltip-active")}),s())}),e.hasTooltipListener=!0,e.wageTooltipHideFunction=o,this.wageTooltipGlobalListener||(this.wageTooltipGlobalListener=n=>{const a=n.target.closest(".chart-hours-value-card, .chart-shifts-count-card"),i=n.target.closest(".wage-card-tooltip");a||i||document.querySelectorAll(".chart-hours-value-card.tooltip-active, .chart-shifts-count-card.tooltip-active").forEach(r=>{r.wageTooltipHideFunction&&r.wageTooltipHideFunction()})},document.addEventListener("click",this.wageTooltipGlobalListener))},removeWageCardTooltip(e){!e||!e.hasTooltipListener||(e.wageTooltipHideFunction&&e.wageTooltipHideFunction(),e.hasTooltipListener=!1,e.wageTooltipHideFunction=null)},updateWeeklyHoursChart(){const e=document.getElementById("chartBars"),t=document.getElementById("chartLabels"),s=document.getElementById("chartTooltip");if(!e||!t)return;if(this.isInDrillDownMode()){this.renderDailyChart(e,t,s);return}const o=this.shifts.filter(p=>p.date.getMonth()===this.currentMonth-1&&p.date.getFullYear()===this.currentYear),n={};let a=0;o.forEach(p=>{const k=this.getISOWeekNumber(p.date);n[k]||(n[k]={hours:0,earnings:0,shifts:[]});const S=this.calculateShift(p);n[k].hours+=S.hours,n[k].earnings+=S.total,n[k].shifts.push(p),a+=S.hours});const i=new Date(this.currentYear,this.currentMonth-1,1),r=new Date(this.currentYear,this.currentMonth,0),d=new Set;for(let p=new Date(i);p<=r;p.setDate(p.getDate()+1))d.add(this.getISOWeekNumber(p));const l=Array.from(d).sort((p,k)=>p-k);if(l.length===0){const p=new Date(this.currentYear,this.currentMonth-1,1),k=new Date(this.currentYear,this.currentMonth,0);for(let S=new Date(p);S<=k;S.setDate(S.getDate()+1)){const f=this.getISOWeekNumber(S);l.includes(f)||l.push(f)}l.sort((S,f)=>S-f)}const u=Math.max(...l.map(p=>n[p]?.hours||0),1),c=new Date,m=this.getISOWeekNumber(c),w=this.currentMonth===c.getMonth()+1&&this.currentYear===c.getFullYear(),h=l.reduce((p,k)=>{const S=n[k]?.hours||0,f=n[p]?.hours||0;return S>f?k:p},l[0]);this.removeBackButton(),this.clearAllTooltips(),e.innerHTML="",t.innerHTML="",e.style.setProperty("--total-weeks",l.length),t.style.setProperty("--total-weeks",l.length),e.offsetHeight;const g=()=>{s.classList.remove("show")};if(this.hideChartTooltip=g,l.forEach((p,k)=>{const S=n[p]||{hours:0,earnings:0},f=S.hours,v=S.earnings,b=u>0?f/u*100:0,D=a>0?f/a*100:0,y=document.createElement("div");y.className="chart-bar",f>0&&y.classList.add("has-data"),p===h&&f>0&&y.classList.add("highest"),w&&p===m?(y.classList.add("current-week"),y.setAttribute("aria-label",`Uke ${p} (Inneværende uke): ${f.toFixed(1)} timer, ${this.formatCurrency(v)}`)):y.setAttribute("aria-label",`Uke ${p}: ${f.toFixed(1)} timer, ${this.formatCurrency(v)}`);let E=136;window.innerWidth<=360?E=86:window.innerWidth<=480?E=102:window.innerWidth<=767?E=116:window.innerWidth>=768&&(E=150);const C=Math.max(2,b/100*E);y.style.setProperty("--bar-height",`${C}px`),y.setAttribute("data-week",p),y.setAttribute("data-hours",f.toFixed(1)),y.setAttribute("data-earnings",v.toFixed(0)),y.setAttribute("data-percentage",D.toFixed(1)),e.appendChild(y),requestAnimationFrame(()=>{y.style.animation="none",y.offsetHeight,y.style.animation="barGrowth 0.25s ease-out forwards"});const T=document.createElement("div");T.className="chart-bar-value";let B;if(f>0?window.innerWidth<=429?B=`${Math.round(f)}t`:B=`${f.toFixed(1)}t`:B="",T.textContent=B,y.appendChild(T),f>0){const L=this;y.addEventListener("click",M=>{M.stopPropagation(),g(),L.enterDrillDownMode(p)})}const x=document.createElement("div");x.className="chart-label",w&&p===m&&x.classList.add("current-week"),x.textContent=p.toString(),t.appendChild(x)}),u===0){const p=document.createElement("div");p.className="chart-empty-message",p.style.cssText=`
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                color: var(--text-secondary);
                font-size: 12px;
                font-weight: 500;
                opacity: 0.6;
                text-align: center;
                pointer-events: none;
            `,p.textContent="Ingen vakter registrert denne måneden",e.appendChild(p)}if(!this.chartTooltipGlobalListener){const p=this;this.chartTooltipGlobalListener=k=>{const S=document.querySelector(".chart-container"),f=k.target.closest(".chart-bar");k.target.closest(".chart-tooltip")||f||S&&!S.contains(k.target)&&p.hideChartTooltip&&p.hideChartTooltip()},document.addEventListener("click",this.chartTooltipGlobalListener)}},renderDailyChart(e,t,s){const{dailyData:o,totalWeekHours:n,totalWeekEarnings:a}=this.getDailyDataForWeek(this.selectedWeek);this.addBackButton();const i=this.getDaysWithShifts(this.selectedWeek);if(i.length===0){e.innerHTML='<div class="chart-empty-message" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: var(--text-secondary); font-size: 12px; font-weight: 500; opacity: 0.6; text-align: center; pointer-events: none;">Ingen vakter denne uken</div>',t.innerHTML="";return}e.innerHTML="",t.innerHTML="",this.clearAllTooltips(),e.style.setProperty("--total-weeks",i.length),t.style.setProperty("--total-weeks",i.length),e.offsetHeight;const r=Math.max(...i.map(h=>o[h]?.hours||0),1),d=new Date;this.currentMonth===d.getMonth()+1&&(this.currentYear,d.getFullYear());const{startDate:l,endDate:u}=this.getWeekDateRangeForCurrentView(this.selectedWeek),c=["S","M","T","O","T","F","L"];let m=null;const w=()=>{s.classList.remove("show"),m&&(m.classList.remove("tooltip-active"),m=null)};this.hideChartTooltip=w,i.forEach((h,g)=>{const p=o[h],k=p.hours,S=p.earnings,f=r>0?k/r*100:0,v=document.createElement("div");v.className="chart-bar",v.classList.add("has-data"),p.hasAdjacentMonthShifts&&!p.hasCurrentMonthShifts&&v.classList.add("adjacent-month");const b=new Date(l);h===0?b.setDate(l.getDate()+6):b.setDate(l.getDate()+(h-1));const D=b.getDate()===d.getDate()&&b.getMonth()===d.getMonth()&&b.getFullYear()===d.getFullYear();D?(v.classList.add("current-week"),v.setAttribute("aria-label",`${this.WEEKDAYS[h]} (I dag): ${k.toFixed(2)} timer, ${this.formatCurrency(S)}`)):v.setAttribute("aria-label",`${this.WEEKDAYS[h]}: ${k.toFixed(2)} timer, ${this.formatCurrency(S)}`);let y=136;window.innerWidth<=360?y=86:window.innerWidth<=480?y=102:window.innerWidth<=767?y=116:window.innerWidth>=768&&(y=150);const E=Math.max(2,f/100*y);v.style.setProperty("--bar-height",`${E}px`),v.setAttribute("data-day",h),v.setAttribute("data-hours",k.toFixed(1)),v.setAttribute("data-earnings",S.toFixed(0)),e.appendChild(v),requestAnimationFrame(()=>{v.style.animation="none",v.offsetHeight,v.style.animation="barGrowth 0.25s ease-out forwards"});const C=document.createElement("div");C.className="chart-bar-value";let T;window.innerWidth<=429?T=`${k.toFixed(2)}t`:T=`${k.toFixed(2)}t`,C.textContent=T,v.appendChild(C);const B=I=>{const H=v.querySelector(".chart-bar-value"),$=v.getBoundingClientRect(),_=s.parentElement.getBoundingClientRect(),P=document.getElementById("tooltipContent");if(P){const j=this.WEEKDAYS[h],K=p.date.toLocaleDateString("no-NO",{day:"numeric",month:"short"});P.innerHTML=`
                        <span class="chart-tooltip-line">${j} ${K}</span>
                        <span class="chart-tooltip-line">${k.toFixed(2).replace(".",",")}t</span>
                        <span class="chart-tooltip-line">${this.formatCurrency(S)}</span>
                    `}const Y=140,G=80,W=6;let N=null;H&&(N=H.getBoundingClientRect());let R;N?R=N.left-_.left+N.width/2-Y/2:R=$.left-_.left+$.width/2-Y/2,R=Math.max(W,Math.min(R,_.width-Y-W));let A;N?A=N.top-_.top-G-W:A=$.top-_.top-G-W,A<W&&(N?A=N.bottom-_.top+W:A=$.bottom-_.top+W),s.style.left=`${R}px`,s.style.top=`${A}px`,s.classList.add("show"),v.classList.add("tooltip-active"),m=v};let x=0,L=null;v.addEventListener("click",I=>{if(I.stopPropagation(),x++,x===1)L=setTimeout(()=>{v.classList.contains("tooltip-active")?w():(m&&m!==v&&m.classList.remove("tooltip-active"),B()),x=0},300);else if(x===2){clearTimeout(L),x=0,console.log("Double-click detected on daily chart bar for day:",h),w();const H=p.shifts;H&&H.length>0?(console.log("Opening shift details for shift ID:",H[0].id),this.showShiftDetails(H[0].id)):console.log("No shifts found for this day")}});const M=document.createElement("div");M.className="chart-label",D&&M.classList.add("current-week"),M.textContent=c[h],t.appendChild(M)})},updateShiftList(){this.shifts.forEach((u,c)=>{});const e=document.getElementById("shiftList"),t=this.shifts.filter(u=>u.date.getMonth()===this.currentMonth-1&&u.date.getFullYear()===this.currentYear);if(t.length===0){e.innerHTML=`
                <div class="empty-state">
                    <div class="empty-icon">
                        <svg class="icon-lg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                            <polyline points="14 2 14 8 20 8"></polyline>
                            <line x1="16" y1="13" x2="8" y2="13"></line>
                            <line x1="16" y1="17" x2="8" y2="17"></line>
                            <polyline points="10 9 9 9 8 9"></polyline>
                        </svg>
                    </div>
                    <p>Ingen vakter registrert ennå</p>
                </div>
            `;return}const s=t.sort((u,c)=>u.date-c.date),o={};s.forEach(u=>{const c=this.getISOWeekNumber(u.date);o[c]||(o[c]=[]),o[c].push(u)});const n=Object.entries(o).map(([u,c])=>({weekNumber:String(u),firstTime:Math.min(...c.map(m=>m.date.getTime())),shifts:c})).sort((u,c)=>u.firstTime-c.firstTime),a=[],i=new Date;i.setHours(0,0,0,0);const r=this.getISOWeekNumber(i),d=i.getMonth()===this.currentMonth-1&&i.getFullYear()===this.currentYear,l=()=>`
                <div class="current-date-separator">
                    <div class="current-date-separator-line"></div>
                    <span class="current-date-separator-date">${i.getDate()}.</span>
                </div>
            `;if(n.forEach(({weekNumber:u,shifts:c})=>{let m=0;if(c.forEach(h=>{const g=this.calculateShift(h);m+=g.total}),a.push(`
                <div class="week-separator">
                    <div class="week-separator-line"></div>
                    <div class="week-separator-content">
                        <div class="week-separator-left">
                            <span class="week-separator-week">Uke ${u}</span>
                            <svg class="week-separator-arrow" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="6 9 12 15 18 9"></polyline>
                            </svg>
                        </div>
                        <div class="week-separator-right">
                            <svg class="week-separator-arrow" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="6 9 12 15 18 9"></polyline>
                            </svg>
                            <span class="week-separator-total">${this.formatCurrency(m)}</span>
                        </div>
                    </div>
                    <div class="week-separator-line"></div>
                </div>
            `),d&&parseInt(u)===r&&!c.some(h=>h.date.getDate()===i.getDate()&&h.date.getMonth()===i.getMonth()&&h.date.getFullYear()===i.getFullYear())){const h=c.map(g=>g.date.getTime()).sort((g,p)=>g-p);i.getTime()<h[0]&&a.push(l())}const w=c.sort((h,g)=>h.date-g.date);if(w.forEach((h,g)=>{if(d&&parseInt(u)===r){const T=w[g],B=w[g-1],x=i.getTime(),L=T.date.getTime(),M=B?B.date.getTime():0;x>M&&x<L&&!w.some(I=>I.date.getDate()===i.getDate()&&I.date.getMonth()===i.getMonth()&&I.date.getFullYear()===i.getFullYear())&&a.push(l())}const p=this.calculateShift(h),k=h.date.getDate(),S=this.WEEKDAYS[h.date.getDay()],f=h.type===0?"weekday":h.type===1?"saturday":"sunday",v=h.seriesId?'<span class="series-badge">Serie</span>':"",D=this.shiftHasOverlaps(h)?`
                    <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                            <line x1="12" y1="9" x2="12" y2="13"></line>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                    </span>
                `:"",E=h.date.getDate()===i.getDate()&&h.date.getMonth()===i.getMonth()&&h.date.getFullYear()===i.getFullYear()?" current-date":"",C=h.employee?`
                    <span class="employee-chip" style="background-color: ${h.employee.display_color||"#6b7280"}">
                        <span class="employee-chip-color" style="background-color: ${h.employee.display_color||"#6b7280"}"></span>
                        <span class="employee-chip-name">${h.employee.name}</span>
                    </span>
                `:"";a.push(`
                    <div class="shift-item ${f}${E}" data-shift-id="${h.id}" style="cursor: pointer;">
                        <div class="shift-info">
                            <div class="shift-date">
                                <span class="shift-date-number">${k}. ${this.MONTHS[h.date.getMonth()]}</span>
                                <span class="shift-date-separator"></span>
                                <span class="shift-date-weekday">${S}${v}${D}</span>
                            </div>
                            <div class="shift-details">
                                <div class="shift-time-with-hours">
                                    <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <polyline points="12 6 12 12 16 14"></polyline>
                                    </svg>
                                    <span>${h.startTime} - ${h.endTime}</span>
                                    <span class="shift-time-arrow">→</span>
                                    <span>${this.formatHours(p.totalHours)}</span>
                                    ${C}
                                </div>
                            </div>
                        </div>
                        <div class="shift-amount-wrapper">
                            <div class="shift-total">${this.formatCurrency(p.total)}</div>
                            <div class="shift-breakdown">
                                ${this.formatCurrencyShort(p.baseWage)} + ${this.formatCurrencyShort(p.bonus)}
                            </div>
                        </div>
                    </div>
                `)}),d&&parseInt(u)===r){const h=Math.max(...w.map(p=>p.date.getTime()));i.getTime()>h&&!w.some(p=>p.date.getDate()===i.getDate()&&p.date.getMonth()===i.getMonth()&&p.date.getFullYear()===i.getFullYear())&&a.push(l())}}),d&&!n.some(u=>parseInt(u.weekNumber)===r)){const u=i.getTime();let c=n.findIndex(g=>u<g.firstTime);c===-1&&(c=n.length);const m=`
                <div class="week-separator">
                    <div class="week-separator-line"></div>
                    <div class="week-separator-content">
                        <div class="week-separator-left">
                            <span class="week-separator-week">Uke ${r}</span>
                            <svg class="week-separator-arrow" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="6 9 12 15 18 9"></polyline>
                            </svg>
                        </div>
                        <div class="week-separator-right">
                            <svg class="week-separator-arrow" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="6 9 12 15 18 9"></polyline>
                            </svg>
                            <span class="week-separator-total">${this.formatCurrency(0)}</span>
                        </div>
                    </div>
                    <div class="week-separator-line"></div>
                </div>
                ${l()}
            `;let w=0,h=a.length;for(let g=0;g<a.length;g++)if(a[g].includes('class="week-separator"')){if(w===c){h=g;break}w++}a.splice(h,0,m)}e.innerHTML=a.join("")},updateShiftCalendar(){if(this.shiftView!=="calendar")return;const e=this.getMonthShiftsKey();this.lastRenderedMonth!==this.currentMonth||this.lastRenderedYear!==this.currentYear||this.lastRenderedShiftsKey!==e?this.renderShiftCalendar():this.updateCalendarCells()},updateLastUpdatedTime(){const e=document.getElementById("lastUpdatedTime");if(e){const s=new Date().toLocaleTimeString("no-NO",{hour:"2-digit",minute:"2-digit"});e.textContent=s}},updateNextShiftCard(){const e=document.getElementById("nextShiftCard");if(!e)return;if(this.currentView==="employees"){e.style.display="none";return}const t=new Date,s=t.getMonth()+1,o=t.getFullYear();e.style.display="block";const n=document.getElementById("nextShiftContent");if(n&&!n.dataset.populated){const l=n.querySelector(".skeleton");l&&(l.style.display="block")}if(this.currentMonth!==s||this.currentYear!==o){this.displayBestShiftCard(),this.stopNextShiftTimer();return}const a=this.shifts.find(l=>{const u=new Date(l.date);if(u.toDateString()===t.toDateString()){const[c,m]=l.startTime.split(":").map(Number),[w,h]=l.endTime.split(":").map(Number),g=new Date(u);g.setHours(c,m,0,0);const p=new Date(u);return p.setHours(w,h,0,0),p<g&&p.setDate(p.getDate()+1),t>=g&&t<=p}return!1});if(a){this.displayCurrentShiftCard(a,t);return}const i=this.shifts.filter(l=>{const u=new Date(l.date);if(u>t)return!0;if(u.toDateString()===t.toDateString()){const[c,m]=l.startTime.split(":").map(Number),w=new Date(u);return w.setHours(c,m,0,0),w>t}return!1});i.sort((l,u)=>{const c=new Date(l.date),m=new Date(u.date);if(c.getTime()!==m.getTime())return c-m;const[w,h]=l.startTime.split(":").map(Number),[g,p]=u.startTime.split(":").map(Number);return w*60+h-(g*60+p)});const r=document.getElementById("nextShiftContent"),d=document.getElementById("nextShiftEmpty");if(i.length===0){const l=this.shifts.filter(u=>{const c=new Date(u.date);if(c<t)return!0;if(c.toDateString()===t.toDateString()){const[m,w]=u.endTime.split(":").map(Number),h=new Date(c);return h.setHours(m,w,0,0),m<parseInt(u.startTime.split(":")[0])&&h.setDate(h.getDate()+1),t>h}return!1});if(l.sort((u,c)=>{const m=new Date(u.date),w=new Date(c.date);if(m.getTime()!==w.getTime())return w-m;const[h,g]=u.endTime.split(":").map(Number),[p,k]=c.endTime.split(":").map(Number);return p*60+k-(h*60+g)}),l.length===0)r.style.display="none",d.style.display="flex",this.stopNextShiftTimer(),this.checkDashboardCardsLoaded();else{r.style.display="flex",d.style.display="none";const u=l[0],c=this.calculateShift(u),m=new Date(u.date),w=this.WEEKDAYS[m.getDay()],h=m.getDate(),g=this.MONTHS[m.getMonth()],p=u.seriesId?'<span class="series-badge">Serie</span>':"",k=this.getISOWeekNumber(t),S=this.getISOWeekNumber(m),f=k===S&&this.getISOWeekYear(m)===this.getISOWeekYear(t);let v;if(m.toDateString()===t.toDateString())v=`I dag${p}`;else{const C=new Date(t);C.setDate(t.getDate()+1),m.toDateString()===C.toDateString()?v=`I morgen${p}`:f?v=`${w.charAt(0).toUpperCase()+w.slice(1)}${p}`:v=`${h}. ${g}${p}`}const b=u.type===0?"weekday":u.type===1?"saturday":"sunday",y=this.shiftHasOverlaps(u)?`
                    <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                            <line x1="12" y1="9" x2="12" y2="13"></line>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                    </span>
                `:"";r.innerHTML=`
                    <div class="shift-item ${b}" data-shift-id="${u.id}" style="cursor: pointer; position: relative;">
                        <div class="next-shift-badge">Siste</div>
                        <div class="shift-info">
                            <div class="shift-date">
                                <span class="shift-date-weekday">${v}${y}</span>
                            </div>
                            <div class="shift-details">
                                <div class="shift-time-with-hours">
                                    <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <polyline points="12 6 12 12 16 14"></polyline>
                                    </svg>
                                    <span>${u.startTime} - ${u.endTime}</span>
                                    <span class="shift-time-arrow">→</span>
                                    <span>${this.formatHours(c.totalHours)}</span>
                                </div>
                            </div>
                        </div>
                        <div class="shift-amount-wrapper">
                            <div class="shift-total">${this.formatCurrency(c.total)}</div>
                            <div class="shift-breakdown">
                                ${this.formatCurrencyShort(c.baseWage)} + ${this.formatCurrencyShort(c.bonus)}
                            </div>
                        </div>
                    </div>
                `,r.dataset.populated="1";const E=r.querySelector(".skeleton");E&&E.remove(),this.stopNextShiftTimer(),this.checkDashboardCardsLoaded()}}else{r.style.display="flex",d.style.display="none";const l=i[0],u=this.calculateShift(l),c=new Date(l.date),m=this.WEEKDAYS[c.getDay()],w=c.getDate(),h=this.MONTHS[c.getMonth()],g=new Date(t),p=new Date(t);p.setDate(t.getDate()+1);const k=l.type===0?"weekday":l.type===1?"saturday":"sunday",S=l.seriesId?'<span class="series-badge">Serie</span>':"",f=this.getISOWeekNumber(t),v=this.getISOWeekNumber(c),b=f===v&&this.getISOWeekYear(c)===this.getISOWeekYear(t);let D;c.toDateString()===g.toDateString()?D=`I dag${S}`:c.toDateString()===p.toDateString()?D=`I morgen${S}`:b?D=`${m.charAt(0).toUpperCase()+m.slice(1)}${S}`:D=`${w}. ${h}${S}`;let y="";if(c.toDateString()===g.toDateString()){const[M,I]=l.startTime.split(":").map(Number),H=new Date(c);H.setHours(M,I,0,0);const $=H-t,q=Math.floor($/(1e3*60*60)),_=Math.floor($%(1e3*60*60)/(1e3*60)),P=Math.floor($%(1e3*60)/1e3);q>0?y=` <span class="countdown-wrapper">(<span class="countdown-hours">${q}t</span> <span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-hours">${q}t</span> <span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span></span>`:_>0?y=` <span class="countdown-wrapper">(<span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-minutes">${_}m</span> <span class="countdown-seconds">${P}s</span></span>`:P>0?y=` <span class="countdown-wrapper">(<span class="countdown-seconds">${P}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-seconds">${P}s</span></span>`:(y=' <span class="countdown-wrapper">(starter nå)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens">starter nå</span>',this.stopNextShiftTimer())}const C=this.shiftHasOverlaps(l)?`
                <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                        <line x1="12" y1="9" x2="12" y2="13"></line>
                        <line x1="12" y1="17" x2="12.01" y2="17"></line>
                    </svg>
                </span>
            `:"",T=c.toDateString()===g.toDateString(),B=c.toDateString()===p.toDateString(),x=T||B?" active":"";r.innerHTML=`
                <div class="shift-item ${k}${x}" data-shift-id="${l.id}" style="cursor: pointer; position: relative;">
                    <div class="next-shift-badge">Neste</div>
                    <div class="shift-info">
                        <div class="shift-date">
                            <span class="shift-date-weekday">${D}${C}</span>
                            <span class="shift-countdown-timer">  ${y}</span>
                        </div>
                        <div class="shift-details">
                            <div class="shift-time-with-hours">
                                <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <polyline points="12 6 12 12 16 14"></polyline>
                                </svg>
                                <span>${l.startTime} - ${l.endTime}</span>
                                <span class="shift-time-arrow">→</span>
                                <span>${this.formatHours(u.totalHours)}</span>
                            </div>
                        </div>
                    </div>
                    <div class="shift-amount-wrapper">
                        <div class="shift-total">${this.formatCurrency(u.total)}</div>
                        <div class="shift-breakdown">
                            ${this.formatCurrencyShort(u.baseWage)} + ${this.formatCurrencyShort(u.bonus)}
                        </div>
                    </div>
                </div>
            `,r.dataset.populated="1";const L=r.querySelector(".skeleton");L&&L.remove()}this.checkDashboardCardsLoaded()},displayCurrentShiftCard(e,t){const s=document.getElementById("nextShiftContent"),o=document.getElementById("nextShiftEmpty");s.style.display="flex",o.style.display="none";const n=this.calculateCurrentShiftEarnings(e,t),a=this.calculateShift(e),i=new Date(e.date),r=this.WEEKDAYS[i.getDay()],d=i.getDate(),l=this.MONTHS[i.getMonth()],u=this.getISOWeekNumber(t),c=this.getISOWeekNumber(i),m=u===c&&this.getISOWeekYear(i)===this.getISOWeekYear(t);let w;i.toDateString()===t.toDateString()?w="I dag":m?w=`${r.charAt(0).toUpperCase()+r.slice(1)}`:w=`${d}. ${l}`;const[h,g]=e.startTime.split(":").map(Number),[p,k]=e.endTime.split(":").map(Number),S=new Date(i);S.setHours(h,g,0,0);const f=new Date(i);f.setHours(p,k,0,0),f<S&&f.setDate(f.getDate()+1);const v=f-t,b=Math.floor(v/(1e3*60*60)),D=Math.floor(v%(1e3*60*60)/(1e3*60)),y=Math.floor(v%(1e3*60)/1e3);let E="";b>0?E=`<span class="countdown-wrapper">(<span class="countdown-hours">${b}t</span> <span class="countdown-minutes">${D}m</span> <span class="countdown-seconds">${y}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-hours">${b}t</span><span class="countdown-minutes">${D}m</span><span class="countdown-seconds">${y}s</span></span>`:D>0?E=`<span class="countdown-wrapper">(<span class="countdown-minutes">${D}m</span> <span class="countdown-seconds">${y}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-minutes">${D}m</span><span class="countdown-seconds">${y}s</span></span>`:y>0?E=`<span class="countdown-wrapper">(<span class="countdown-seconds">${y}s</span>)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens"><span class="countdown-seconds">${y}s</span></span>`:E='<span class="countdown-wrapper">(Ferdig)</span><span class="countdown-dot-separator"> • </span><span class="countdown-no-parens">Ferdig</span>';const C=e.type===0?"weekday":e.type===1?"saturday":"sunday",T=e.seriesId?'<span class="series-badge">Serie</span>':"",x=this.shiftHasOverlaps(e)?`
            <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                    <line x1="12" y1="9" x2="12" y2="13"></line>
                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
            </span>
        `:"";s.innerHTML=`
            <div class="shift-item ${C} active" data-shift-id="${e.id}" style="cursor: pointer; position: relative;">
                <div class="next-shift-badge">NÅ</div>
                <div class="shift-info">
                    <div class="shift-date">
                        <span class="shift-date-weekday">${w}${T}${x}</span>
                        <span class="shift-countdown-timer">  ${E}</span>
                    </div>
                    <div class="shift-details">
                        <div class="shift-time-with-hours">
                            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <polyline points="12 6 12 12 16 14"></polyline>
                            </svg>
                            <span>${e.startTime} - ${e.endTime}</span>
                            <span class="shift-time-arrow">→</span>
                            <span>${this.formatHours(a.totalHours)}</span>
                        </div>
                    </div>
                </div>
                <div class="shift-amount-wrapper">
                    <div class="shift-total">${this.formatCurrencyDetailed(n.totalEarned)}</div>
                    <div class="shift-breakdown">
                        ${this.formatCurrencyDetailed(n.baseEarned)} + ${this.formatCurrencyDetailed(n.bonusEarned)}
                    </div>
                </div>
            </div>
        `,s.dataset.populated="1";const L=s.querySelector(".skeleton");L&&L.remove()},calculateCurrentShiftEarnings(e,t){const s=new Date(e.date),[o,n]=e.startTime.split(":").map(Number),a=new Date(s);a.setHours(o,n,0,0);const r=(t-a)/(1e3*60*60),d=this.getWageRateForShift(e),u=typeof e?.hourly_wage_snapshot=="number"||!!e?.employee_id||!!e?.employee?this.PRESET_BONUSES:this.getCurrentBonuses(),c=e.type===0?"weekday":e.type===1?"saturday":"sunday",m=u[c]||[],w=r*d,h=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}`,g=this.calculateBonusWithSeconds(e.startTime,h,m);return{totalHours:r,baseEarned:w,bonusEarned:g,totalEarned:w+g}},startNextShiftTimer(){this.stopNextShiftTimer();const e=new Date,t=e.getMonth()+1,s=e.getFullYear();if(this.currentMonth===t&&this.currentYear===s){const o=new Date;this.shifts.filter(a=>{const i=new Date(a.date);if(i.toDateString()===o.toDateString()){const[r,d]=a.startTime.split(":").map(Number),[l,u]=a.endTime.split(":").map(Number),c=new Date(i);c.setHours(r,d,0,0);const m=new Date(i);return m.setHours(l,u,0,0),m<c&&m.setDate(m.getDate()+1),e>=c&&e<=m||c>e}return!1}).length>0&&(this.nextShiftTimer=setInterval(()=>{this.updateNextShiftCard()},1e3))}},stopNextShiftTimer(){this.nextShiftTimer&&(clearInterval(this.nextShiftTimer),this.nextShiftTimer=null)},displayBestShiftCard(){const e=document.getElementById("nextShiftContent"),t=document.getElementById("nextShiftEmpty");if(!e||!t)return;const s=this.shifts.filter(b=>b.date.getMonth()===this.currentMonth-1&&b.date.getFullYear()===this.currentYear);if(s.length===0){e.style.display="none",t.style.display="flex";const b=t.querySelector(".empty-message");b&&(b.textContent="Ingen vakter registrert");return}const o=s.map(b=>{const D=this.calculateShift(b);return{shift:b,earnings:D.total,calculation:D}});o.sort((b,D)=>{if(D.earnings!==b.earnings)return D.earnings-b.earnings;const y=new Date(b.shift.date),E=new Date(D.shift.date);if(y.getTime()!==E.getTime())return y-E;const[C,T]=b.shift.startTime.split(":").map(Number),[B,x]=D.shift.startTime.split(":").map(Number);return C*60+T-(B*60+x)});const n=o[0],a=n.shift,i=n.calculation;e.style.display="flex",t.style.display="none";const r=new Date(a.date),d=this.WEEKDAYS[r.getDay()],l=r.getDate(),u=this.MONTHS[r.getMonth()],c=new Date,m=this.getISOWeekNumber(c),w=this.getISOWeekNumber(r),h=m===w&&this.getISOWeekYear(r)===this.getISOWeekYear(c);let g;if(r.toDateString()===c.toDateString())g="I dag";else{const b=new Date(c);b.setDate(c.getDate()+1),r.toDateString()===b.toDateString()?g="I morgen":h?g=`${d.charAt(0).toUpperCase()+d.slice(1)}`:g=`${l}. ${u}`}const p=a.type===0?"weekday":a.type===1?"saturday":"sunday",k=a.seriesId?'<span class="series-badge">Serie</span>':"",f=this.shiftHasOverlaps(a)?`
            <span class="shift-warning-indicator" title="Denne vakten overlapper med andre vakter">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                    <line x1="12" y1="9" x2="12" y2="13"></line>
                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
            </span>
        `:"";e.innerHTML=`
            <div class="shift-item ${p}" data-shift-id="${a.id}" style="cursor: pointer; position: relative;">
                <div class="next-shift-badge">Beste</div>
                <div class="shift-info">
                    <div class="shift-date">
                        <span class="shift-date-weekday">${g}${k}${f}</span>
                    </div>
                    <div class="shift-details">
                        <div class="shift-time-with-hours">
                            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <polyline points="12 6 12 12 16 14"></polyline>
                            </svg>
                            <span>${a.startTime} - ${a.endTime}</span>
                            <span class="shift-time-arrow">→</span>
                            <span>${this.formatHours(i.totalHours)}</span>
                        </div>
                    </div>
                </div>
                <div class="shift-amount-wrapper">
                    <div class="shift-total">${this.formatCurrency(i.total)}</div>
                    <div class="shift-breakdown">
                        ${this.formatCurrencyShort(i.baseWage)} + ${this.formatCurrencyShort(i.bonus)}
                    </div>
                </div>
            </div>
        `,e.dataset.populated="1";const v=e.querySelector(".skeleton");v&&v.remove()},updateNextPayrollCard(){const e=document.getElementById("nextPayrollCard");if(!e)return;const t=document.getElementById("nextPayrollContent"),s=document.getElementById("nextPayrollEmpty");if(!t||!s)return;if(this.currentView==="employees"){e.style.display="none";return}const o=t.querySelector(".skeleton");if(o&&!t.dataset.populated&&(o.style.display="block"),t&&!t.dataset.populated){const I=t.querySelector(".skeleton");I&&(I.style.display="block")}const n=this.currentMonth,a=this.currentYear,i=new Date,r=i.getMonth()+1,d=i.getFullYear(),l=n===r&&a===d;let u,c=n;l?(u=this.getNextPayrollDate(),c=u.getMonth()+1,u.getFullYear()):u=this.getPayrollDateForMonth(n,a);let m=n-1,w=a;m<1&&(m=12,w=a-1);let h=m,g=w;l&&c!==n&&(h=n,g=a);const p=this.shifts.filter(I=>I.date.getMonth()===h-1&&I.date.getFullYear()===g);if(p.length===0){t.style.display="none",s.style.display="flex",this.checkDashboardCardsLoaded();return}let k=0,S=0,f=0;p.forEach(I=>{const H=this.calculateShift(I);k+=H.total,S+=H.baseWage,f+=H.bonus});const v=this.taxDeductionEnabled?k*(1-this.taxPercentage/100):k,D=`Opptjent i ${this.MONTHS[h-1]}`,y=u.getDate(),E=this.MONTHS[u.getMonth()],C=`${y}. ${E}`;let T;if(l){const I=Math.ceil((u-i)/864e5);I===0?T="I dag":I===1?T="I morgen":T=`Om ${I} dager`}else T=C;const x=!(u<i)&&l&&Math.ceil((u-i)/(1e3*60*60*24))<=7?" active":"";t.style.display="flex",s.style.display="none",t.innerHTML=`
            <div class="payroll-item${x}" style="cursor: pointer; position: relative;">
                <div class="next-payroll-badge">Lønn</div>
                <div class="shift-info">
                    <div class="shift-date">
                        <span class="shift-countdown-timer">${D}</span>
                    </div>
                    <div class="shift-details">
                        <div class="shift-time-with-hours">
                            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <path d="M12 6v6l4 2"></path>
                            </svg>
                            <span>${T}</span>
                        </div>
                    </div>
                </div>
                <div class="shift-amount-wrapper">
                    <div class="shift-total">${this.formatCurrency(v)}</div>
                    <div class="shift-breakdown">
                        ${this.taxDeductionEnabled?`${this.formatCurrencyShort(k)} - ${this.formatCurrencyShort(k-v)}`:`${this.formatCurrencyShort(S)} + ${this.formatCurrencyShort(f)}`}
                    </div>
                </div>
            </div>
        `,t.dataset.populated="1";const L=t.querySelector(".skeleton");L&&L.remove();const M=t.querySelector(".payroll-item");M&&M.addEventListener("click",I=>{I.stopPropagation(),this.openPaydateSettings()}),this.checkDashboardCardsLoaded()},checkDashboardCardsLoaded(){const e=document.getElementById("nextShiftContent"),t=document.getElementById("nextPayrollContent"),s=e&&(e.dataset.populated==="1"||document.getElementById("nextShiftEmpty")?.style.display==="flex"),o=t&&(t.dataset.populated==="1"||document.getElementById("nextPayrollEmpty")?.style.display==="flex");s&&o&&document.body.classList.add("dashboard-cards-loaded")},cleanup(){this.stopNextShiftTimer(),this.monthNavigationTimeout&&(clearTimeout(this.monthNavigationTimeout),this.monthNavigationTimeout=null),this.chartTooltipGlobalListener&&(document.removeEventListener("click",this.chartTooltipGlobalListener),this.chartTooltipGlobalListener=null),this.wageTooltipGlobalListener&&(document.removeEventListener("click",this.wageTooltipGlobalListener),this.wageTooltipGlobalListener=null)},getPerformanceStats(){return{monthNavigationActive:!!this.monthNavigationTimeout,currentMonth:this.currentMonth,currentYear:this.currentYear}},renderShiftCalendar(){const e=document.getElementById("shiftCalendar");if(!e)return;const t=this.currentYear,s=this.currentMonth-1,o=new Date(t,s,1),n=new Date(t,s+1,0),a=new Date(o),i=o.getDay()===0?6:o.getDay()-1;a.setDate(a.getDate()-i),e.innerHTML="";const r=document.createElement("div");r.className="calendar-header",["M","T","O","T","F","L","S"].forEach(w=>{const h=document.createElement("div");h.textContent=w,h.className="calendar-day-header",r.appendChild(h)}),e.appendChild(r);const d=this.shifts.filter(w=>w.date.getMonth()===s&&w.date.getFullYear()===t),l={};d.forEach(w=>{const h=w.date.getDate();l[h]||(l[h]=[]),l[h].push(w)});const u=new Date(n),c=Math.ceil((u.getTime()-a.getTime())/(1e3*60*60*24))+1,m=Math.ceil(c/7);for(let w=0;w<m;w++){const h=new Date(a);h.setDate(a.getDate()+w*7);const g=this.getISOWeekNumber(h),p=document.createElement("div");p.className="week-separator";const k=document.createElement("div");k.className="week-number-on-separator",k.textContent=g,p.appendChild(k),e.appendChild(p);const S=document.createElement("div");S.className="calendar-grid";for(let f=0;f<7;f++){const v=new Date(a);v.setDate(a.getDate()+w*7+f);const b=document.createElement("div");b.className="calendar-cell";const D=`${v.getFullYear()}-${String(v.getMonth()+1).padStart(2,"0")}-${String(v.getDate()).padStart(2,"0")}`;b.setAttribute("data-date",D),v.getMonth()!==s&&b.classList.add("other-month"),this.calendarDisplayMode==="hours"&&b.classList.add("hours-mode");const y=new Date;v.getDate()===y.getDate()&&v.getMonth()===y.getMonth()&&v.getFullYear()===y.getFullYear()&&b.classList.add("current-date");const E=document.createElement("div");E.className="calendar-cell-content";const C=document.createElement("div");C.className="calendar-day-number",C.textContent=v.getDate(),E.appendChild(C);const T=l[v.getDate()]||[];let B=0,x=0,L=0;if(T.forEach(M=>{if(v.getMonth()===s){const I=this.calculateShift(M);B+=I.baseWage,x+=I.bonus,L+=I.totalHours}}),this.calendarDisplayMode==="money"&&B+x>0||this.calendarDisplayMode==="hours"&&T.length>0){const M=document.createElement("div");if(M.className="calendar-shift-data",this.calendarDisplayMode==="money"){const _=document.createElement("div");_.className="calendar-total",_.textContent=this.formatCurrencyCalendar(B+x),M.appendChild(_)}else{const _=document.createElement("div");_.className="calendar-hours-display";let P=1/0,Y=-1/0,G="",W="",N=!1;T.forEach(j=>{const K=this.timeToMinutes(j.startTime);let z=this.timeToMinutes(j.endTime),Q=!1;z<K&&(z+=1440,Q=!0),K<P&&(P=K,G=j.startTime),z>Y&&(Y=z,W=j.endTime,N=Q)});let R=this.formatTimeShort(W);N&&(R+="*");const A=document.createElement("div");A.className="calendar-total calendar-hours-total",N&&(A.title="* indicates the shift ends the next day"),A.innerHTML=`${this.formatTimeShort(G)} -<br>${R}`,_.appendChild(A),M.appendChild(_)}const I=document.createElement("div");I.className="calendar-employee-chips";const H=new Map;T.forEach(_=>{_.employee&&!H.has(_.employee.id)&&H.set(_.employee.id,_.employee)}),H.forEach(_=>{const P=document.createElement("div");P.className="calendar-employee-chip",P.style.backgroundColor=_.display_color||"#6b7280",P.textContent=_.name.substring(0,2).toUpperCase(),P.title=_.name,I.appendChild(P)}),H.size>0&&E.appendChild(I),E.appendChild(M),b.classList.add("has-shifts"),b.style.cursor="pointer";let $=0,q=null;b.onclick=_=>{_.stopPropagation(),$++,$===1?q=setTimeout(()=>{T.length>0&&this.showShiftDetails(T[0].id),$=0},300):$===2&&(clearTimeout(q),$=0,console.log("Double-click detected on calendar cell with shifts"),T.length>0?(console.log("Opening shift details for shift ID:",T[0].id),this.showShiftDetails(T[0].id)):console.log("No shifts found for this calendar cell"))}}else v.getMonth()===s&&(b.classList.add("empty-date"),b.style.cursor="pointer",b.onclick=M=>{M.stopPropagation(),this.openAddShiftModalWithDate(v)});b.appendChild(E),S.appendChild(b)}e.appendChild(S)}this.lastRenderedMonth=this.currentMonth,this.lastRenderedYear=this.currentYear,this.lastRenderedShiftsKey=this.getMonthShiftsKey()},updateCalendarCells(){const e=document.querySelectorAll(".calendar-cell"),t=this.currentMonth-1,s=this.currentYear,o=this.shifts.filter(a=>a.date.getMonth()===t&&a.date.getFullYear()===s),n={};o.forEach(a=>{const i=a.date.getDate();n[i]||(n[i]=[]),n[i].push(a)}),e.forEach(a=>{const i=a.getAttribute("data-date");if(!i)return;const[r,d,l]=i.split("-").map(f=>parseInt(f,10)),u=new Date(r,d-1,l),c=a.querySelector(".calendar-cell-content");if(!c)return;const m=c.querySelector(".calendar-shift-data");m&&m.remove(),a.classList.remove("has-shifts","empty-date");const w=n[u.getDate()]||[],h=u.getMonth()===t,g=h?w:[];this.calendarDisplayMode==="hours"?a.classList.add("hours-mode"):a.classList.remove("hours-mode");let p=0,k=0,S=0;if(g.forEach(f=>{const v=this.calculateShift(f);p+=v.baseWage,k+=v.bonus,S+=v.totalHours}),this.calendarDisplayMode==="money"&&p+k>0||this.calendarDisplayMode==="hours"&&g.length>0){const f=document.createElement("div");if(f.className="calendar-shift-data",this.calendarDisplayMode==="money"){const D=document.createElement("div");D.className="calendar-total",D.textContent=this.formatCurrencyCalendar(p+k),f.appendChild(D)}else{const D=document.createElement("div");D.className="calendar-hours-display";let y=1/0,E=-1/0,C="",T="",B=!1;g.forEach(M=>{const I=this.timeToMinutes(M.startTime);let H=this.timeToMinutes(M.endTime),$=!1;H<I&&(H+=1440,$=!0),I<y&&(y=I,C=M.startTime),H>E&&(E=H,T=M.endTime,B=$)});let x=this.formatTimeShort(T);B&&(x+="*");const L=document.createElement("div");L.className="calendar-total calendar-hours-total",B&&(L.title="* indicates the shift ends the next day"),L.innerHTML=`${this.formatTimeShort(C)} -<br>${x}`,D.appendChild(L),f.appendChild(D)}c.appendChild(f),a.classList.add("has-shifts"),a.style.cursor="pointer";let v=0,b=null;a.onclick=D=>{D.stopPropagation(),v++,v===1?b=setTimeout(()=>{g.length>0&&this.showShiftDetails(g[0].id),v=0},300):v===2&&(clearTimeout(b),v=0,console.log("Double-click detected on updated calendar cell with shifts"),g.length>0?(console.log("Opening shift details for shift ID:",g[0].id),this.showShiftDetails(g[0].id)):console.log("No shifts found for this updated calendar cell"))}}else h?(a.classList.add("empty-date"),a.style.cursor="pointer",a.onclick=f=>{f.stopPropagation(),this.openAddShiftModalWithDate(u)}):(a.onclick=null,a.style.cursor="default")})},switchShiftView(e){this.shiftView=e,document.querySelectorAll(".view-toggle .tab-btn").forEach((a,i)=>{const r=i===0,d=e==="list"&&r||e==="calendar"&&!r;a.classList.toggle("active",d)});const s=document.getElementById("shiftList"),o=document.getElementById("shiftCalendar"),n=document.querySelector(".calendar-display-toggle");if(!(!s||!o)&&(e==="calendar"?(s.style.display="none",o.style.display="flex",n&&(n.style.display="flex"),this.updateShiftCalendar()):(s.style.display="flex",o.style.display="none",n&&(n.style.display="none")),this.currentView==="employees")){this.ensureMonthPickerVisibility?.();const a=document.querySelector(".employees-container");a&&(a.style.display="block");const i=document.getElementById("employeeCarouselContainer");i&&(i.style.display="block")}},switchCalendarDisplay(e){this.calendarDisplayMode=e,document.querySelectorAll(".calendar-toggle-btn").forEach(s=>{const o=e==="money"&&s.textContent==="Lønn"||e==="hours"&&s.textContent==="Varighet";s.classList.toggle("active",o)}),this.shiftView==="calendar"&&this.updateCalendarCells()},showShiftDetails(e){const t=this.shifts.find(E=>E.id===e);if(!t)return;this.closeStatDetails(),this.closeSettings(!1);const s=document.querySelector(".floating-action-bar"),o=document.querySelector(".floating-action-bar-backdrop");s&&(s.style.display="none"),o&&(o.style.display="none");const n=document.querySelector(".header");n&&n.classList.add("hidden");const a=document.createElement("div");a.className="backdrop-blur",a.onclick=()=>this.closeShiftDetails(),document.body.appendChild(a),a.offsetHeight,a.classList.add("active"),this.shiftDetailsKeydownHandler=E=>{E.key==="Escape"&&this.closeShiftDetails()},document.addEventListener("keydown",this.shiftDetailsKeydownHandler);const i=document.createElement("div");i.className="breakdown-modal shift-detail-modal",i.style.cssText=`
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0.8);
            width: min(95vw, 500px);
            max-height: 85vh;
            background: var(--bg-primary);
            border-radius: 24px;
            box-shadow: 0 20px 60px var(--shadow-blue);
            z-index: 1200;
            opacity: 0;
            transition: all 0.4s var(--ease-default);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        `;const r=document.createElement("div");r.className="breakdown-title-container",r.style.cssText=`
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
            margin-bottom: 20px;
            padding: 24px 24px 0 24px;
            flex-shrink: 0;
        `;const d=document.createElement("div");d.className="breakdown-title-icon",d.innerHTML='<svg class="icon-lg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><path d="M12 6v6l4 2"></path></svg>',d.style.cssText=`
            color: var(--accent3);
            opacity: 0.8;
        `;const l=document.createElement("h3");l.className="breakdown-title",l.textContent="Vaktdetaljer",l.style.cssText=`
            color: var(--accent3);
            margin: 0;
            font-size: 24px;
            font-weight: 600;
        `,r.appendChild(d),r.appendChild(l),i.appendChild(r);const u=document.createElement("div");u.className="shift-detail-content";const c=`
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 0 24px 24px 24px;
            padding-bottom: 80px;
            gap: 16px;
            overflow-y: auto;
        `,m=`
            opacity: 0;
            animation: slideInFromBottom 0.6s var(--ease-default) 0.3s forwards;
        `;u.style.cssText=`${m} ${c}`;const w=this.calculateShift(t),h=this.WEEKDAYS[t.date.getDay()],g=this.MONTHS[t.date.getMonth()],p=`${h} ${t.date.getDate()}. ${g}`,k=this.shifts.indexOf(t),S=this.getWageRateForShift(t);u.innerHTML=`
            <div class="detail-section">
                <div class="detail-label">Dato</div>
                <div class="detail-value">${p}</div>
            </div>

            <div class="detail-section">
                <div class="detail-label">Tid</div>
                <div class="detail-value">${t.startTime} - ${t.endTime} (${w.totalHours.toFixed(2)}t)</div>
            </div>

            <div class="detail-section">
                <div class="detail-label">Timelønn for denne vakten</div>
                <div class="detail-value">${this.formatCurrency(S)}</div>
            </div>

            <div class="detail-section">
                <div class="detail-label">Grunnlønn</div>
                <div class="detail-value accent">${this.formatCurrency(w.baseWage)}</div>
            </div>

            ${w.bonus>0?`
            <div class="detail-section">
                <div class="detail-label">Tillegg</div>
                <div class="detail-value accent">${this.formatCurrency(w.bonus)}</div>
            </div>
            `:""}

            <div class="detail-section total">
                <div class="detail-label">Total</div>
                <div class="detail-value accent large">${this.formatCurrency(w.total)}</div>
            </div>


        `,i.appendChild(u);const f=document.createElement("div");f.className="modal-fixed-footer",f.style.cssText=`
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 16px 24px;
            background: linear-gradient(135deg, var(--bg-secondary), var(--bg-tertiary));
            border-top: 1px solid var(--border);
            display: flex;
            justify-content: space-between;
            align-items: center;
            z-index: 10;
            border-radius: 0 0 24px 24px;
        `;const v=document.createElement("div");v.style.cssText=`
            display: flex;
            gap: 12px;
            align-items: center;
        `;const b=document.createElement("button");b.className="btn btn-secondary edit-shift-btn",b.setAttribute("data-shift-id",t.id),b.style.cssText=`
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 12px 16px;
        `,b.innerHTML=`
            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
            </svg>
            Rediger
        `;const D=document.createElement("button");if(D.className="btn btn-danger delete-shift-btn",D.setAttribute("data-shift-index",k),D.style.cssText=`
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 12px 16px;
        `,D.innerHTML=`
            <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3 6h18"></path>
                <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
            </svg>
            Vakt
        `,b.addEventListener("click",E=>{E.stopPropagation();const C=E.target.closest("button").getAttribute("data-shift-id");this.editShift(C)}),D.addEventListener("click",async E=>{E.stopPropagation();const C=parseInt(E.target.closest("button").getAttribute("data-shift-index"));await this.deleteShift(C)&&this.closeShiftDetails()}),v.appendChild(b),v.appendChild(D),t.seriesId){const E=document.createElement("button");E.className="btn btn-warning delete-series-btn",E.style.cssText=`
                display: flex;
                align-items: center;
                gap: 8px;
                padding: 12px 16px;
            `,E.innerHTML=`
                <svg class="icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M3 6h18"></path>
                    <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                    <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                </svg>
                Serie
            `,E.addEventListener("click",async C=>{C.stopPropagation(),confirm("Vil du slette hele serien?")&&await this.deleteSeries(t.seriesId)&&this.closeShiftDetails()}),v.appendChild(E)}const y=document.createElement("button");y.className="btn btn-secondary modal-close-bottom",y.style.cssText=`
            background: rgba(255, 102, 153, 0.1);
            border: 1px solid rgba(255, 102, 153, 0.3);
            color: var(--danger);
            transition: all 0.2s var(--ease-default);
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            font-size: 0;
            font-weight: 500;
            padding: 0;
            gap: 0;
        `,y.innerHTML=`
            <svg style="width: 16px; height: 16px;" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        `,y.onclick=E=>{E.stopPropagation(),this.closeShiftDetails()},f.appendChild(v),f.appendChild(y),i.appendChild(f),document.body.appendChild(i),requestAnimationFrame(()=>{i.style.opacity="1",i.style.transform="translate(-50%, -50%) scale(1)"})},closeShiftDetails(){const e=document.querySelector(".shift-detail-modal"),t=document.querySelector(".backdrop-blur"),s=document.querySelector(".header");s&&s.classList.remove("hidden"),this.shiftDetailsKeydownHandler&&(document.removeEventListener("keydown",this.shiftDetailsKeydownHandler),this.shiftDetailsKeydownHandler=null);const o=document.querySelector(".floating-action-bar"),n=document.querySelector(".floating-action-bar-backdrop");o&&(o.style.display=""),n&&(n.style.display=""),t&&(t.style.pointerEvents="none",t.onclick=null),e&&(e.style.opacity="0",e.style.transform="translate(-50%, -50%) scale(0.8)",setTimeout(()=>{e.parentNode&&e.remove()},300)),t&&setTimeout(()=>{t.classList.remove("active"),setTimeout(()=>{t.parentNode&&t.remove()},350)},100)},async deleteSeries(e){try{const{data:t,error:s}=await window.supa.from("user_shifts").delete().match({series_id:e});return s?(console.error("Feil ved sletting av serie:",s),alert("Kunne ikke slette serien"),!1):(this.userShifts=this.userShifts.filter(o=>o.seriesId!==e),this.shifts=this.shifts.filter(o=>o.seriesId!==e),this.updateDisplay(),alert("Serien er slettet"),!0)}catch(t){return console.error("deleteSeries error:",t),alert("En uventet feil oppstod"),!1}},async loadProfileData(){try{const{data:{user:e}}=await window.supa.auth.getUser();if(!e)return;const t=document.getElementById("profileName"),s=document.getElementById("profileEmail");t&&(t.value=e.user_metadata?.first_name||""),s&&(s.value=e.email||"");let o="";try{const{data:{session:d}}=await window.supa.auth.getSession(),l=d?.access_token;if(l){const u=await fetch(`${window.CONFIG.apiBase}/settings`,{headers:{Authorization:`Bearer ${l}`}});u.ok&&(o=(await u.json())?.profile_picture_url||"")}}catch{}if(!o)try{const{data:d}=await window.supa.from("user_settings").select("profile_picture_url").eq("user_id",e.id).maybeSingle();o=d?.profile_picture_url||""}catch{}o||(o=e.user_metadata?.avatar_url||"");const n=document.getElementById("profileAvatarImage"),a=document.getElementById("profileAvatarPlaceholder"),i=document.getElementById("userAvatarImg"),r=document.querySelector(".profile-icon");o&&n?(n.src=o,n.onload=()=>{n.style.display="block",a&&(a.style.display="none")},i&&(i.src=o,i.style.display="block"),r&&(r.style.display="none")):(n&&(n.style.display="none"),a&&(a.style.display=""),i&&(i.style.display="none"),r&&(r.style.display=""))}catch(e){console.error("Error loading profile data:",e)}},async updateProfile(){try{const{data:{user:e}}=await window.supa.auth.getUser();if(!e)return;const t=document.getElementById("profileName"),s=document.getElementById("profile-update-msg"),o=t?.value||"";if(!o.trim()){s&&(s.style.color="var(--danger)",s.textContent="Fornavn er påkrevd");return}const{error:n}=await window.supa.auth.updateUser({data:{first_name:o.trim()}});if(n){console.error("Error updating profile:",n),s&&(s.style.color="var(--danger)",s.textContent="Feil ved oppdatering av profil");return}s&&(s.style.color="var(--success)",s.textContent="Profil oppdatert!",setTimeout(()=>{s.textContent=""},3e3));const a=document.getElementById("userNickname");a&&o.trim()&&(a.textContent=o.trim()),window.chatbox&&window.chatbox.updatePlaceholder&&window.chatbox.updatePlaceholder(),this.loadUserNickname()}catch(e){console.error("Error updating profile:",e);const t=document.getElementById("profile-update-msg");t&&(t.style.color="var(--danger)",t.textContent="Kunne ikke oppdatere profil")}},initProfileAvatarControls(){const e=document.getElementById("profileAvatarChooseBtn"),t=document.getElementById("profileAvatarRemoveBtn"),s=document.getElementById("profileAvatarInput");e&&s&&(e.onclick=()=>s.click()),s&&(s.onchange=async o=>{const n=o.target.files&&o.target.files[0];n&&(await this.openCropperWithFile(n),s.value="")}),t&&(t.onclick=()=>this.removeProfileAvatar())},async initGoogleLinkButton(){const e=document.getElementById("btn-link-google"),t=document.getElementById("btn-unlink-google"),s=document.getElementById("google-unlink-warning");if(!e&&!t)return;const[{getAuthSnapshot:o,unlinkGoogleIdentity:n},{linkGoogleIdentity:a}]=await Promise.all([F(()=>import("./oauth-google-manage-DgnRTrnU.js"),__vite__mapDeps([12,1])),F(()=>import("./link-google-SZh-g5A8.js"),__vite__mapDeps([13,1]))]),i=async()=>{try{const{hasGoogle:r,hasEmail:d,otherProviders:l}=await o(),u=d||l&&l.length>0;r?(e&&(e.style.display="none"),t&&(t.style.display="inline-flex"),u?(s&&(s.style.display="none"),t&&(t.disabled=!1,t.classList.remove("disabled"),t.style.opacity="",t.style.cursor="")):(s&&(s.style.display="inline"),t&&(t.disabled=!0,t.classList.add("disabled"),t.style.opacity="0.6",t.style.cursor="not-allowed"))):(e&&(e.style.display="flex"),t&&(t.style.display="none"),s&&(s.style.display="none"))}catch(r){console.error("[oauth] render controls failed",r)}};e&&!e._bound&&(e._bound=!0,e.addEventListener("click",async()=>{e.disabled=!0;const r=e.textContent;e.textContent="Åpner Google...";try{await a()}catch(d){console.error("[oauth] link failed",d),alert("Klarte ikke å koble Google-kontoen.")}finally{e.disabled=!1,e.textContent=r,await i()}})),t&&!t._bound&&(t._bound=!0,t.addEventListener("click",async()=>{t.disabled=!0;try{const r=await n();r.ok?alert("Google-kontoen er koblet fra."):r.reason==="no_alternative"?alert("Kan ikke fjerne Google: du mangler annet innloggingsalternativ."):r.reason==="not_linked"&&alert("Ingen Google-konto er koblet.")}catch(r){console.error("[oauth] unlink failed",r),alert("Klarte ikke å fjerne Google-kontoen. Se konsollen.")}finally{t.disabled=!1,await i()}})),await i()},async openCropperWithFile(e){try{const t=document.getElementById("cropModal"),s=document.getElementById("cropImage");if(!t||!s)return;this._cropObjectUrl&&(URL.revokeObjectURL(this._cropObjectUrl),this._cropObjectUrl=null);const o=URL.createObjectURL(e);this._cropObjectUrl=o,s.src=o,t.style.display="flex",t.classList.add("active"),await new Promise(r=>setTimeout(r,10)),this.cropper&&(this.cropper.destroy(),this.cropper=null);const n=window.Cropper||await(async()=>{try{const r=await F(()=>import("https://unpkg.com/cropperjs@1.6.2/dist/cropper.esm.js"),[]);return r?.default||r?.Cropper||null}catch{return null}})();if(!n)throw new Error("Cropper library not available");this.cropper=new n(s,{aspectRatio:1,viewMode:1,dragMode:"move",guides:!0,background:!1,autoCropArea:1,responsive:!0,checkOrientation:!1,movable:!0,zoomable:!0,scalable:!1,rotatable:!1,minCropBoxWidth:64,minCropBoxHeight:64,ready:()=>{const r=document.getElementById("cropZoomSlider");if(r){const u=this.cropper.getImageData().ratio||1;r.value=u,r.oninput=()=>this.cropper.zoomTo(parseFloat(r.value))}const d=document.getElementById("zoomInBtn"),l=document.getElementById("zoomOutBtn");d&&(d.onclick=()=>this.cropper.zoom(.05)),l&&(l.onclick=()=>this.cropper.zoom(-.05)),s.classList.add("loaded"),this.addMobileTouchEnhancements()}});const a=document.getElementById("confirmCropBtn"),i=document.getElementById("cancelCropBtn");a&&(a.onclick=()=>this.confirmAvatarCrop()),i&&(i.onclick=()=>this.cancelAvatarCrop())}catch(t){console.error("openCropperWithFile error",t),this.showUploadError("Kunne ikke åpne beskjæring")}},async confirmAvatarCrop(){try{if(!this.cropper)return;this.showProfilePictureProgress(!0),this.updateProfilePictureProgress(10,"Behandler...");const e=this.cropper.getCroppedCanvas({width:512,height:512,imageSmoothingQuality:"high"});if(!e)throw new Error("Canvas not available");const t=await new Promise(r=>e.toBlob(r,"image/jpeg",.9));if(!t)throw new Error("Kunne ikke lage bilde");this.updateProfilePictureProgress(30,"Lagrer...");const s=await this.saveAvatarBlob(t);this.updateProfilePictureProgress(90,"Oppdaterer profil...");try{const{data:{session:r}}=await window.supa.auth.getSession(),d=r?.access_token;d&&await fetch(`${window.CONFIG.apiBase}/settings`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${d}`},body:JSON.stringify({profile_picture_url:s})})}catch{}try{const{data:r}=await window.supa.auth.getClaims(),d=await O();if(!d){console.warn("[auth] Missing userId, skipping query");return}if(console.debug("[auth] using userId:",d),d){const{error:l}=await window.supa.from("user_settings").update({profile_picture_url:s}).eq("user_id",d);l&&await window.supa.from("user_settings").upsert({user_id:d,profile_picture_url:s},{onConflict:"user_id"})}}catch{}await window.supa.auth.updateUser({data:{avatar_url:s}});const o=document.getElementById("profileAvatarImage"),n=document.getElementById("profileAvatarPlaceholder"),a=document.getElementById("userAvatarImg");o&&(o.onload=()=>{o.style.display="block"},o.onerror=()=>{o.style.display="none"},o.src=s),n&&(n.style.display="none"),a&&(a.onload=()=>{a.style.display="block"},a.onerror=()=>{a.style.display="none"},a.src=s);const i=document.querySelector(".profile-icon");i&&(i.style.display="none"),this.updateProfilePictureProgress(100,"Ferdig"),this.cancelAvatarCrop(!0)}catch(e){console.error("confirmAvatarCrop error",e),this.showUploadError("Kunne ikke lagre profilbilde")}finally{this.showProfilePictureProgress(!1)}},cancelAvatarCrop(e=!1){const t=document.getElementById("cropModal");if(this.cropper){try{this.cropper.destroy()}catch{}this.cropper=null}(!e&&t||t)&&(t.classList.remove("active"),t.style.display="none"),this._cropObjectUrl&&(URL.revokeObjectURL(this._cropObjectUrl),this._cropObjectUrl=null)},async saveAvatarBlob(e){try{const t=await new Promise((n,a)=>{const i=new FileReader;i.onload=()=>{const d=i.result.split(",")[1]||"";n(d)},i.onerror=()=>a(new Error("Kunne ikke lese bilde")),i.readAsDataURL(e)}),{data:{session:s}}=await window.supa.auth.getSession(),o=s?.access_token;if(o){const n=await fetch(`${window.CONFIG.apiBase}/user/avatar`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({image_base64:t})}),a=await n.json();if(n.ok&&a?.url)return a.url}}catch(t){console.warn("Backend upload failed; trying client storage.",t)}try{const{data:t}=await window.supa.auth.getClaims(),s=await O();if(!s){console.warn("[auth] Missing userId, skipping query");return}if(console.debug("[auth] using userId:",s),!s)throw new Error("Ingen bruker");if(window.supa.storage&&window.supa.storage.from){const o=window.supa.storage.from("profile-pictures"),n=`${s}/profile_${Date.now()}.jpg`,{error:a}=await o.upload(n,e,{contentType:"image/jpeg",upsert:!0});if(a)throw a;const{data:i}=o.getPublicUrl(n);if(i?.publicUrl)return i.publicUrl}}catch(t){console.warn("Supabase Storage upload failed or not available; using data URL.",t)}return await new Promise((t,s)=>{const o=new FileReader;o.onload=()=>t(o.result),o.onerror=()=>s(new Error("Kunne ikke lese bilde")),o.readAsDataURL(e)})},async removeProfileAvatar(){try{try{const{data:{session:n}}=await window.supa.auth.getSession(),a=n?.access_token;a&&await fetch(`${window.CONFIG.apiBase}/settings`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({profile_picture_url:null})})}catch{}try{const{data:n}=await window.supa.auth.getClaims(),a=await O();if(!a){console.warn("[auth] Missing userId, skipping query");return}console.debug("[auth] using userId:",a),a&&await window.supa.from("user_settings").update({profile_picture_url:null}).eq("user_id",a)}catch{}await window.supa.auth.updateUser({data:{avatar_url:null}});const e=document.getElementById("profileAvatarImage"),t=document.getElementById("profileAvatarPlaceholder"),s=document.getElementById("userAvatarImg");e&&(e.style.display="none"),t&&(t.style.display=""),s&&(s.style.display="none");const o=document.querySelector(".profile-icon");o&&(o.style.display="")}catch(e){console.error("removeProfileAvatar error",e),this.showUploadError("Kunne ikke fjerne profilbilde")}},showUploadError(e){this.showProfilePictureProgress(!1);const t=document.getElementById("profile-update-msg");t&&(t.style.color="var(--danger)",t.textContent=e,setTimeout(()=>{t.textContent=""},5e3))},showProfilePictureProgress(e){const t=document.getElementById("profilePictureProgress");t&&(t.style.display=e?"flex":"none")},updateProfilePictureProgress(e,t){const s=document.getElementById("profilePictureProgressFill"),o=document.getElementById("profilePictureProgressText");s&&(s.style.width=e+"%"),o&&(o.textContent=t)},addMobileTouchEnhancements(){if(!this.cropper)return;const e=document.querySelector("#cropModal .cropper-container");if(!e)return;let t=0,s=!1;const o=i=>{if(i.touches.length===2){s=!0;const r=i.touches[0],d=i.touches[1];t=Math.sqrt(Math.pow(d.clientX-r.clientX,2)+Math.pow(d.clientY-r.clientY,2)),i.preventDefault()}},n=i=>{if(s&&i.touches.length===2){const r=i.touches[0],d=i.touches[1],l=Math.sqrt(Math.pow(d.clientX-r.clientX,2)+Math.pow(d.clientY-r.clientY,2));if(t>0){const u=l/t,c=this.cropper.getCanvasData(),w=this.cropper.getImageData()?.naturalWidth||1,h=c.width/w,g=Math.max(.2,Math.min(3,h*u));this.cropper.zoomTo(g);const p=document.getElementById("cropZoomSlider");p&&(p.value=String(g))}t=l,i.preventDefault()}},a=i=>{i.touches.length<2&&(s=!1,t=0)};if(e.addEventListener("touchstart",o,{passive:!1}),e.addEventListener("touchmove",n,{passive:!1}),e.addEventListener("touchend",a,{passive:!1}),this.touchEventListeners={touchstart:o,touchmove:n,touchend:a,element:e},"vibrate"in navigator){const i=this.cropper.crop.bind(this.cropper);this.cropper.crop=(...r)=>(navigator.vibrate(10),i(...r))}e.style.touchAction="none",e.style.userSelect="none",e.style.webkitUserSelect="none"},removeMobileTouchEnhancements(){if(this.touchEventListeners){const{element:e,touchstart:t,touchmove:s,touchend:o}=this.touchEventListeners;e.removeEventListener("touchstart",t),e.removeEventListener("touchmove",s),e.removeEventListener("touchend",o),this.touchEventListeners=null}},calculateShift(e){const t=this.timeToMinutes(e.startTime);let s=this.timeToMinutes(e.endTime);s<t?s+=1440:s===t&&(console.warn("Shift has same start and end time",{startTime:e.startTime,endTime:e.endTime}),s+=1440);const o=(s-t)/60;if(o<=0)return console.error("Invalid shift duration",{startTime:e.startTime,endTime:e.endTime,durationHours:o}),{hours:0,totalHours:0,paidHours:0,pauseDeducted:!1,baseWage:0,bonus:0,total:0,breakDeduction:null};const n=this.getWageRateForShift(e),a=this.getCurrentBonuses(),i=this.calculateLegalBreakDeduction(e,n,a,t,s);let r=o,d=s,l=0,u=0;if(i.shouldDeduct&&(i.method==="proportional"||i.method==="base_only")){const c=this.calculateAdjustedWages(i,n);l=c.baseWage,u=c.bonus,r=c.totalHours}else{i.shouldDeduct&&(r-=i.deductionHours,d=i.adjustedEndMinutes),l=r*n;const c=e.type===0?"weekday":e.type===1?"saturday":"sunday",m=a[c]||[],w=Math.floor(d/60)%24,h=`${String(w).padStart(2,"0")}:${(d%60).toString().padStart(2,"0")}`;u=this.calculateBonus(e.startTime,h,m),o>5.5&&console.log("Traditional calculation (client):",{method:i.method,originalHours:o,paidHours:r,baseWage:l,bonus:u,total:l+u})}return{hours:parseFloat(r.toFixed(2)),totalHours:parseFloat(o.toFixed(2)),paidHours:parseFloat(r.toFixed(2)),pauseDeducted:i.shouldDeduct,baseWage:l,bonus:u,total:l+u,breakDeduction:i.auditTrail}},calculateLegalBreakDeduction(e,t,s,o,n){const a=(n-o)/60,i={enabled:this.pauseDeductionEnabled!==!1,method:this.pauseDeductionMethod||"proportional",thresholdHours:this.pauseThresholdHours||5.5,deductionMinutes:this.pauseDeductionMinutes||30,auditEnabled:this.auditBreakCalculations!==!1};if(!i.enabled||a<=i.thresholdHours)return{shouldDeduct:!1,deductionHours:0,adjustedEndMinutes:n,auditTrail:i.auditEnabled?{originalDuration:a,thresholdHours:i.thresholdHours,method:i.method,reason:i.enabled?"Shift duration below threshold":"Break deduction disabled",wagePeriods:[],deductedHours:0,complianceNotes:[]}:null};const r=i.deductionMinutes/60,d=this.calculateWagePeriods(e,t,s,o,n);let l=null;switch(i.method){case"none":l={deductionHours:0,adjustedEndMinutes:n,deductionDetails:"No break deduction applied - paid pause"};break;case"proportional":l=this.applyProportionalDeduction(d,r,o,n);break;case"base_only":l=this.applyBaseOnlyDeduction(d,r,o,n);break;case"end_of_shift":default:l={deductionHours:r,adjustedEndMinutes:n-i.deductionMinutes,deductionDetails:"Break deducted from end of shift (legacy method)"};break}let u=null;return i.auditEnabled&&(u={originalDuration:a,thresholdHours:i.thresholdHours,method:i.method,deductionMinutes:i.deductionMinutes,wagePeriods:d,deductedHours:l.deductionHours,deductionDetails:l.deductionDetails,complianceNotes:[]},i.method==="end_of_shift"&&u.complianceNotes.push("WARNING: End-of-shift deduction may not comply with labor laws in all jurisdictions")),{shouldDeduct:i.method!=="none",deductionHours:l.deductionHours,adjustedEndMinutes:l.adjustedEndMinutes,method:i.method,auditTrail:u}},calculateWagePeriods(e,t,s,o,n){const a=[],i=u=>u===0?"sunday":u===6?"saturday":"weekday",r=(u,c,m)=>{if(c<=u)return;const w=s[m]||[];let h=[{start:u,end:c,bonuses:[]}];for(const g of w){const p=this.timeToMinutes(g.from);let k=this.timeToMinutes(g.to);k<=p&&(k+=1440);const S=Math.max(u,p),f=Math.min(c,k);if(f<=S)continue;const v=[];for(const b of h){if(b.end<=S||b.start>=f){v.push(b);continue}b.start<S&&v.push({start:b.start,end:S,bonuses:[...b.bonuses]});const D=Math.max(b.start,S),y=Math.min(b.end,f);y>D&&v.push({start:D,end:y,bonuses:[...b.bonuses,g]}),b.end>f&&v.push({start:f,end:b.end,bonuses:[...b.bonuses]})}h=v}for(const g of h){const p=(g.end-g.start)/60;if(p<=0)continue;const k=g.bonuses.reduce((S,f)=>S+f.rate,0);a.push({startMinutes:g.start,endMinutes:g.end,durationHours:p,wageRate:t,bonusRate:k,totalRate:t+k,type:k>0?"bonus":"base",bonuses:g.bonuses})}},d=e?.date instanceof Date?e.date.getDay():e?.type===2?0:e?.type===1?6:1,l=Math.min(n,1440);if(r(o,l,i(d)),n>1440){const u=(d+1)%7;r(0,n-1440,i(u))}return a},testBreakDeductionMethods(){console.log("Testing break deduction methods...");const e={startTime:"16:00",endTime:"22:00",type:1},t=["proportional","base_only","end_of_shift","none"],s={};for(const i of t){const r=this.pauseDeductionMethod,d=this.pauseDeductionEnabled;this.pauseDeductionMethod=i,this.pauseDeductionEnabled=i!=="none";const l=this.calculateShift(e);s[i]={total:l.total,baseWage:l.baseWage,bonus:l.bonus,paidHours:l.paidHours,pauseDeducted:l.pauseDeducted},this.pauseDeductionMethod=r,this.pauseDeductionEnabled=d}console.table(s);const o=1400,n=Object.values(s).map(i=>i.total),a=Math.max(...n);return a>o?console.error("❌ DOUBLING DETECTED! Max total:",a,"Expected max:",o):console.log("✅ No doubling detected. Max total:",a,"Expected max:",o),s},async testBreakDeductionColumns(){const{data:e}=await window.supa.auth.getClaims();if(!!!e){console.log("❌ Not logged in");return}try{const{data:s,error:o}=await window.supa.from("user_settings").select("*").eq("user_id",user.id).single();if(o){console.error("❌ Error fetching settings:",o);return}const n=["pause_deduction_enabled","pause_deduction_method","pause_threshold_hours","pause_deduction_minutes","audit_break_calculations"]}catch(s){console.error("❌ Error checking columns:",s)}},applyProportionalDeduction(e,t,s,o){const n=(o-s)/60;let a=t,i=0;const r=[];for(const d of e){if(a<=0)break;const l=d.durationHours/n,u=Math.min(t*l,a);u>0&&(i+=u,a-=u,r.push(`${u.toFixed(2)}h from ${d.type} rate (${d.totalRate} kr/h)`))}return{deductionHours:i,adjustedEndMinutes:o-i*60,deductionDetails:`Proportional deduction: ${r.join(", ")}`}},applyBaseOnlyDeduction(e,t,s,o){let n=t,a=0;const i=e.filter(d=>d.bonusRate===0),r=[];if(i.length===0){const d=[...e].sort((c,m)=>c.bonusRate-m.bonusRate),l=d[0].bonusRate,u=d.filter(c=>c.bonusRate===l);for(const c of u){if(n<=0)break;const m=Math.min(c.durationHours,n);a+=m,n-=m,r.push(`${m.toFixed(2)}h from lowest bonus rate (${c.totalRate} kr/h)`)}}else for(const d of i){if(n<=0)break;const l=Math.min(d.durationHours,n);a+=l,n-=l,r.push(`${l.toFixed(2)}h from base rate (${d.wageRate} kr/h)`)}return{deductionHours:a,adjustedEndMinutes:o-a*60,deductionDetails:`Base-only deduction: ${r.join(", ")}`}},calculateAdjustedWages(e,t){let s=0,o=0,n=0;if(!e.auditTrail||!e.auditTrail.wagePeriods)return{baseWage:0,bonus:0,totalHours:0};const a=e.auditTrail.wagePeriods,i=e.method,r=e.deductionHours;if(i==="proportional"){const d=a.reduce((l,u)=>l+u.durationHours,0);for(const l of a){const u=l.durationHours/d,c=r*u,m=Math.max(0,l.durationHours-c);n+=m,s+=m*l.wageRate,o+=m*l.bonusRate}}else if(i==="base_only"){let d=r;const l=a.filter(c=>c.bonusRate===0),u=a.filter(c=>c.bonusRate>0);for(const c of l){const m=Math.min(c.durationHours,d),w=c.durationHours-m;d-=m,n+=w,s+=w*c.wageRate}for(const c of u)n+=c.durationHours,s+=c.durationHours*c.wageRate,o+=c.durationHours*c.bonusRate}return{baseWage:parseFloat(s.toFixed(2)),bonus:parseFloat(o.toFixed(2)),totalHours:parseFloat(n.toFixed(2))}},setupBreakDeductionEventListeners(){const e=document.getElementById("pauseDeductionEnabledToggle");e?e.addEventListener("change",n=>{this.pauseDeductionEnabled=n.target.checked,this.toggleBreakDeductionSections(),this.updateDisplay(),this.saveSettingsToSupabase()}):console.warn("pauseDeductionEnabledToggle element not found");const t=document.getElementById("pauseDeductionMethodSelect");t?t.addEventListener("change",n=>{this.pauseDeductionMethod=n.target.value,this.updateMethodExplanation(),this.updateDisplay(),this.saveSettingsToSupabase()}):console.warn("pauseDeductionMethodSelect element not found");const s=document.getElementById("pauseThresholdInput");s&&s.addEventListener("change",n=>{this.pauseThresholdHours=parseFloat(n.target.value)||5.5,this.updateDisplay(),this.saveSettingsToSupabase()});const o=document.getElementById("pauseDeductionMinutesInput");o&&o.addEventListener("change",n=>{this.pauseDeductionMinutes=parseInt(n.target.value)||30,this.updateDisplay(),this.saveSettingsToSupabase()})},toggleBreakDeductionSections(){const e=document.getElementById("pauseDeductionEnabledToggle");if(e){const t=e.closest(".form-group");t&&(this.pauseDeductionEnabled?t.classList.remove("break-settings-disabled"):t.classList.add("break-settings-disabled"))}},updateMethodExplanation(){["proportionalInfo","baseOnlyInfo","endOfShiftInfo","noneInfo"].forEach(o=>{const n=document.getElementById(o);n&&(n.style.display="none")});let t="proportionalInfo";switch(this.pauseDeductionMethod){case"proportional":t="proportionalInfo";break;case"base_only":t="baseOnlyInfo";break;case"end_of_shift":t="endOfShiftInfo";break;case"none":t="noneInfo";break}const s=document.getElementById(t);s&&(s.style.display="block")},timeToMinutes(e){const[t,s]=e.split(":").map(Number);return t*60+s},minutesToTime(e){const t=e%1440,s=Math.floor(t/60),o=t%60;return`${s.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`},timeToSeconds(e){const t=e.split(":").map(Number),s=t[0],o=t[1],n=t[2]||0;return s*3600+o*60+n},calculateBonus(e,t,s){let o=0;const n=this.timeToMinutes(e);let a=this.timeToMinutes(t);a<=n&&(a+=1440);for(const i of s){const r=this.timeToMinutes(i.from);let d=this.timeToMinutes(i.to);d<=r&&(d+=1440);const l=this.calculateOverlap(n,a,r,d);o+=l/60*i.rate}return o},calculateBonusWithSeconds(e,t,s){let o=0;const n=this.timeToSeconds(e);let a=this.timeToSeconds(t);a<=n&&(a+=24*3600);for(const i of s){const r=this.timeToSeconds(i.from);let d=this.timeToSeconds(i.to);d<=r&&(d+=24*3600);const l=this.calculateOverlap(n,a,r,d);o+=l/3600*i.rate}return o},calculateOverlap(e,t,s,o){const n=Math.max(e,s),a=Math.min(t,o);return Math.max(0,a-n)},shiftsOverlap(e,t){const s=new Date(e.date),o=new Date(t.date),n=this.timeToMinutes(e.startTime);let a=this.timeToMinutes(e.endTime);const i=this.timeToMinutes(t.startTime);let r=this.timeToMinutes(t.endTime);if(a<n&&(a+=1440),r<i&&(r+=1440),s.getTime()===o.getTime())return this.calculateOverlap(n,a,i,r)>0;const d=new Date(s);if(d.setDate(d.getDate()+1),d.getTime()===o.getTime()&&a>1440)return a-1440>i;const l=new Date(o);return l.setDate(l.getDate()+1),l.getTime()===s.getTime()&&r>1440?r-1440>n:!1},getOverlappingShifts(e){return this.shifts.filter(t=>t.id===e.id?!1:this.shiftsOverlap(e,t))},shiftHasOverlaps(e){return this.getOverlappingShifts(e).length>0},testOverlapDetection(){console.log("Testing overlap detection...");const e={id:"test1",date:new Date("2024-01-15"),startTime:"09:00",endTime:"17:00",type:0},t={id:"test2",date:new Date("2024-01-15"),startTime:"16:00",endTime:"22:00",type:0},s={id:"test3",date:new Date("2024-01-15"),startTime:"23:00",endTime:"07:00",type:0},o={id:"test4",date:new Date("2024-01-16"),startTime:"06:00",endTime:"14:00",type:0};console.log("Shift1 and Shift2 overlap (same day):",this.shiftsOverlap(e,t)),console.log("Shift3 and Shift4 overlap (midnight crossing):",this.shiftsOverlap(s,o)),console.log("Shift1 and Shift4 overlap (no overlap):",this.shiftsOverlap(e,o)),console.log("Overlap detection test completed.")},addTestPayrollShifts(){console.log("Adding test payroll shifts...");const e=new Date,t=e.getMonth(),s=e.getFullYear(),o=t===0?11:t-1,n=t===0?s-1:s,a=[{id:"test-payroll-1",date:new Date(n,o,5),startTime:"09:00",endTime:"17:00",type:0,seriesId:null},{id:"test-payroll-2",date:new Date(n,o,12),startTime:"10:00",endTime:"18:00",type:0,seriesId:null},{id:"test-payroll-3",date:new Date(n,o,19),startTime:"08:00",endTime:"16:00",type:1,seriesId:null},{id:"test-payroll-4",date:new Date(n,o,26),startTime:"09:00",endTime:"17:00",type:0,seriesId:null}];a.forEach(i=>{this.shifts.push(i)}),console.log(`Added ${a.length} test shifts for payroll card testing`),this.updateDisplay()},addTestOverlappingShifts(){console.log("Adding test overlapping shifts...");const e=new Date,t=new Date(e);t.setDate(e.getDate()+1),[{id:"test-overlap-1",date:new Date(e),startTime:"09:00",endTime:"17:00",type:0,seriesId:null},{id:"test-overlap-2",date:new Date(e),startTime:"16:00",endTime:"22:00",type:0,seriesId:null},{id:"test-overlap-3",date:new Date(e),startTime:"23:00",endTime:"07:00",type:0,seriesId:null},{id:"test-overlap-4",date:new Date(t),startTime:"06:00",endTime:"14:00",type:0,seriesId:null}].forEach(o=>{this.shifts.push(o)}),this.refreshUI(),console.log("Test overlapping shifts added. Check the shift list for warning indicators.")},formatCurrency(e){const t=this.currencyFormat?" NOK":" kr";return Math.round(e).toLocaleString("nb-NO")+t},formatCurrencyShort(e){return Math.round(e).toLocaleString("nb-NO")},formatCurrencyCalendar(e){return Math.round(e).toLocaleString("nb-NO")},formatCurrencyDetailed(e){const t=this.currencyFormat?" NOK":" kr";return e.toFixed(2).replace(".",",")+t},renderEmployeeWorkSummary(){try{const e=document.getElementById("employeeWorkSummary")||document.getElementById("employeesContent");if(!e)return;const t=this.getSelectedEmployee?.();if(!t){e.id==="employeeWorkSummary"&&(e.innerHTML="");return}const s=this.orgSettings?.break_policy,o=s==="proportional_across_periods"?"proportional":s==="from_base_rate"?"base_only":s==="fixed_0_5_over_5_5h"?"end_of_shift":s==="none"?"none":this.pauseDeductionMethod,n=this.pauseDeductionMethod,a=this.pauseDeductionEnabled;let i=!1;const r=()=>{i||(this.pauseDeductionMethod=n,this.pauseDeductionEnabled=a,i=!0)};this.pauseDeductionMethod=o,this.pauseDeductionEnabled=!0;const d=(this.shifts||[]).filter(f=>f.employee_id===t.id&&f.date.getMonth()===this.currentMonth-1&&f.date.getFullYear()===this.currentYear),l=new Map,u=new Map,c=f=>{if(f==="23:59")return"24";const[v,b]=f.split(":");return b==="00"?`${parseInt(v,10)}`:`${v}:${b}`};for(const f of d){const v=this.timeToMinutes(f.startTime);let b=this.timeToMinutes(f.endTime);b<=v&&(b+=1440);const D=this.getWageRateForShift(f),y=this.PRESET_BONUSES,E=this.calculateLegalBreakDeduction(f,D,y,v,b);let C;if(E?.shouldDeduct&&(E.method==="proportional"||E.method==="base_only"))C=this.calculateAdjustedWages(E,D).totalHours;else{const x=(b-v)/60;C=E?.shouldDeduct?Math.max(0,x-(E.deductionHours||0)):x}const T=l.get(D)||{hours:0,rate:D,pay:0};T.hours+=C,T.pay=T.hours*T.rate,l.set(D,T);let B=[];if(E?.method==="end_of_shift"&&E.shouldDeduct?B=this.calculateWagePeriods(f,D,y,v,E.adjustedEndMinutes):E?.auditTrail?.wagePeriods&&E.auditTrail.wagePeriods.length>0?B=E.auditTrail.wagePeriods.map(x=>({...x})):B=this.calculateWagePeriods(f,D,y,v,b),E?.shouldDeduct&&E.method==="proportional"){const x=B.reduce((M,I)=>M+I.durationHours,0)||1,L=E.deductionHours||0;B=B.map(M=>{const I=L*(M.durationHours/x);return{...M,durationHours:Math.max(0,M.durationHours-I)}})}for(const x of B){if(!x||x.durationHours<=0)continue;const L=x.durationHours;for(const M of x.bonuses||[]){const I=`${M.from}-${M.to}|${M.rate}`,H=`UB ${c(M.from)}-${c(M.to)}`,$=u.get(I)||{label:H,rate:M.rate,hours:0,pay:0,sortKey:this.timeToMinutes(M.from)};$.hours+=L,$.pay=$.hours*$.rate,u.set(I,$)}}}const m=Array.from(l.values()).sort((f,v)=>f.rate-v.rate).map(f=>({label:"Grunnlønn",rate:f.rate,hours:f.hours,pay:f.pay,group:"base"})),w=Array.from(u.values()).sort((f,v)=>f.sortKey-v.sortKey||f.rate-v.rate).map(f=>({label:f.label,rate:f.rate,hours:f.hours,pay:f.pay,group:"ub"})),h=[...m,...w],g=h.map(f=>`
                <tr>
                    <td class="col-type">${f.label}</td>
                    <td class="col-rate">${this.formatCurrencyDetailed(f.rate)}</td>
                    <td class="col-hours">${f.hours.toFixed(2).replace(".",",")} t</td>
                    <td class="col-pay">${this.formatCurrencyDetailed(f.pay)}</td>
                </tr>
            `).join(""),p=m.reduce((f,v)=>f+v.hours,0),k=h.reduce((f,v)=>f+v.pay,0),S=`
                <div class="employee-work-summary-header">
                    <h3 style="margin:0 0 12px 0;">${t.name}</h3>
                </div>
                <div class="employee-work-summary-table-wrapper">
                    <table class="employee-work-summary-table">
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Sats</th>
                                <th>Timer</th>
                                <th>Beløp</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${g||'<tr><td colspan="4" style="text-align:center;color:var(--text-secondary);padding:16px;">Ingen vakter i valgt måned</td></tr>'}
                        </tbody>
                        <tfoot>
                            <tr>
                                <td>Totalt</td>
                                <td></td>
                                <td>${p.toFixed(2).replace(".",",")} t</td>
                                <td>${this.formatCurrencyDetailed(k)}</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            `;e.id==="employeeWorkSummary"?e.innerHTML=S:e.innerHTML=`<div class="employee-work-summary" id="employeeWorkSummary">${S}</div>`,r()}catch(e){console.error("Error rendering employee work summary:",e);try{this.pauseDeductionMethod=this.pauseDeductionMethod??this.pauseDeductionMethod}finally{}}},renderCurrentUserWorkSummary(){try{const e=document.getElementById("weeklyHoursChart"),t=e?e.parentElement:null,s=document.querySelector(".statistics-content"),o=t||s;if(!o)return;let n=document.getElementById("currentUserWorkSummary");n?n.parentElement!==o&&(n.parentElement.removeChild(n),o.appendChild(n)):(n=document.createElement("div"),n.id="currentUserWorkSummary",n.style.marginTop="16px",o.appendChild(n));const a=(this.shifts||[]).filter(S=>S.date.getMonth()===this.currentMonth-1&&S.date.getFullYear()===this.currentYear);if(a.length===0){n.innerHTML=`
                    <div class="employee-work-summary">
                        <div class="employee-work-summary-header">
                            <h3 style="margin:0 0 12px 0;">${document.getElementById("userNickname")?.textContent||"Min oversikt"}</h3>
                        </div>
                        <div class="employee-work-summary-table-wrapper">
                            <table class="employee-work-summary-table">
                                <thead>
                                    <tr>
                                        <th>Type</th>
                                        <th>Sats</th>
                                        <th>Timer</th>
                                        <th>Beløp</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td colspan="4" style="text-align:center;color:var(--text-secondary);padding:16px;">Ingen vakter i valgt måned</td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td>Totalt</td>
                                        <td></td>
                                        <td>0,00 t</td>
                                        <td>${this.formatCurrencyDetailed(0)}</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                `;return}const i=this.getCurrentBonuses(),r=new Map,d=new Map,l=S=>{if(S==="23:59")return"24";const[f,v]=S.split(":");return v==="00"?`${parseInt(f,10)}`:`${f}:${v}`};for(const S of a){const f=this.timeToMinutes(S.startTime);let v=this.timeToMinutes(S.endTime);v<=f&&(v+=1440);const b=this.getWageRateForShift(S),D=this.calculateLegalBreakDeduction(S,b,i,f,v);let y;if(D?.shouldDeduct&&(D.method==="proportional"||D.method==="base_only"))y=this.calculateAdjustedWages(D,b).totalHours;else{const T=(v-f)/60;y=D?.shouldDeduct?Math.max(0,T-(D.deductionHours||0)):T}const E=r.get(b)||{hours:0,rate:b,pay:0};E.hours+=y,E.pay=E.hours*E.rate,r.set(b,E);let C=[];if(D?.method==="end_of_shift"&&D.shouldDeduct?C=this.calculateWagePeriods(S,b,i,f,D.adjustedEndMinutes):D?.auditTrail?.wagePeriods&&D.auditTrail.wagePeriods.length>0?C=D.auditTrail.wagePeriods.map(T=>({...T})):C=this.calculateWagePeriods(S,b,i,f,v),D?.shouldDeduct&&D.method==="proportional"){const T=C.reduce((x,L)=>x+L.durationHours,0)||1,B=D.deductionHours||0;C=C.map(x=>{const L=B*(x.durationHours/T);return{...x,durationHours:Math.max(0,x.durationHours-L)}})}for(const T of C){if(!T||T.durationHours<=0)continue;const B=T.durationHours;for(const x of T.bonuses||[]){const L=`${x.from}-${x.to}|${x.rate}`,M=`UB ${l(x.from)}-${l(x.to)}`,I=d.get(L)||{label:M,rate:x.rate,hours:0,pay:0,sortKey:this.timeToMinutes(x.from)};I.hours+=B,I.pay=I.hours*I.rate,d.set(L,I)}}}const u=Array.from(r.values()).sort((S,f)=>S.rate-f.rate).map(S=>({label:"Grunnlønn",rate:S.rate,hours:S.hours,pay:S.pay,group:"base"})),c=Array.from(d.values()).sort((S,f)=>S.sortKey-f.sortKey||S.rate-f.rate).map(S=>({label:S.label,rate:S.rate,hours:S.hours,pay:S.pay,group:"ub"})),m=[...u,...c],w=m.map(S=>`
                <tr>
                    <td class="col-type">${S.label}</td>
                    <td class="col-rate">${this.formatCurrencyDetailed(S.rate)}</td>
                    <td class="col-hours">${S.hours.toFixed(2).replace(".",",")} t</td>
                    <td class="col-pay">${this.formatCurrencyDetailed(S.pay)}</td>
                </tr>
            `).join(""),h=u.reduce((S,f)=>S+f.hours,0),g=m.reduce((S,f)=>S+f.pay,0),k=`
                <div class="employee-work-summary">
                    <div class="employee-work-summary-header">
                        <h3 style="margin:0 0 12px 0;">${document.getElementById("userNickname")?.textContent||"Min oversikt"}</h3>
                    </div>
                    <div class="employee-work-summary-table-wrapper">
                        <table class="employee-work-summary-table">
                            <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Sats</th>
                                    <th>Timer</th>
                                    <th>Beløp</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${w||'<tr><td colspan="4" style="text-align:center;color:var(--text-secondary);padding:16px;">Ingen vakter i valgt måned</td></tr>'}
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td>Totalt</td>
                                    <td></td>
                                    <td>${h.toFixed(2).replace(".",",")} t</td>
                                    <td>${this.formatCurrencyDetailed(g)}</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            `;n.innerHTML=k}catch(e){console.error("Error rendering current user work summary:",e)}},formatHours(e){return e.toFixed(2).replace(".",",")+"t"},formatTimeShort(e){const[t,s]=e.split(":");return s==="00"?t:e},updateWageLevel(e){this.currentWageLevel=parseInt(e),this.updateDisplay(),this.saveSettingsToSupabase()},updateCustomWage(e){this.customWage=parseFloat(e)||200,this.updateDisplay(),this.saveSettingsToSupabase()},captureCustomBonusesFromUI(){const e={};return["weekday","saturday","sunday"].forEach(s=>{e[s]=[];const o=document.getElementById(`${s}BonusSlots`);o&&o.querySelectorAll(".bonus-slot").forEach((a,i)=>{const r=a.querySelectorAll("input");if(r.length>=3){const d=r[0].value,l=r[1].value,u=r[2].value;e[s].push({from:d,to:l,rate:parseFloat(u)||0})}})}),e},async saveCustomBonuses(){const e=this.captureCustomBonusesFromUI(),t={};["weekday","saturday","sunday"].forEach(s=>{t[s]=[],e[s]&&e[s].forEach(o=>{o.from&&o.to&&o.rate&&!isNaN(o.rate)&&o.rate>0&&t[s].push({from:o.from,to:o.to,rate:parseFloat(o.rate)})})}),this.customBonuses=t,this.showSaveStatus("Lagrer tillegg...");try{this.updateDisplay(),await this.saveSettingsToSupabase(),this.saveToLocalStorage(),this.showSaveStatus("Tillegg lagret ✓"),alert("Tillegg lagret!")}catch(s){console.error("Error saving custom bonuses:",s),this.showSaveStatus("Feil ved lagring!"),alert("Feil ved lagring av tillegg!")}},async saveCustomBonusesSilent(){try{const e=this.captureCustomBonusesFromUI(),t={};["weekday","saturday","sunday"].forEach(s=>{t[s]=[],e[s]&&e[s].forEach(o=>{o.from&&o.to&&o.rate&&!isNaN(o.rate)&&o.rate>0&&t[s].push({from:o.from,to:o.to,rate:parseFloat(o.rate)})})}),this.customBonuses=t,this.updateDisplay(),await this.saveSettingsToSupabase(),this.saveToLocalStorage()}catch(e){console.error("Error in saveCustomBonusesSilent:",e)}},async deleteShift(e){const t=this.shifts[e];if(t.seriesId&&confirm("Denne vakten er del av en serie. Vil du slette hele serien?"))return await this.deleteSeries(t.seriesId);const s=this.shifts[e];if(!s||!s.id||!confirm("Er du sikker på at du vil slette denne vakten?"))return!1;try{const{data:o}=await window.supa.auth.getClaims();if(!!!o)return alert("Du er ikke innlogget"),!1;const{error:a}=await window.supa.from("user_shifts").delete().eq("id",s.id);if(a)return console.error("Error deleting shift:",a),alert("Kunne ikke slette vakt fra databasen"),!1;this.shifts.splice(e,1);const i=this.userShifts.findIndex(r=>r.id===s.id);return i!==-1&&this.userShifts.splice(i,1),this.refreshUI(this.shifts),!0}catch(o){return console.error("Error in deleteShift:",o),alert("En feil oppstod ved sletting av vakt"),!1}},async clearAllShifts(){if(confirm("Er du sikker på at du vil slette alle vakter? Dette kan ikke angres."))try{const{data:e}=await window.supa.auth.getClaims(),t=await O();if(!t){console.warn("[auth] Missing userId, skipping query");return}if(console.debug("[auth] using userId:",t),!t)return;const{error:s}=await window.supa.from("user_shifts").delete().eq("user_id",t);if(s){console.error("Error deleting shifts:",s),alert("Kunne ikke slette vakter fra databasen");return}this.shifts=[],this.userShifts=[],this.updateDisplay(),window.chatbox&&window.chatbox.clear&&window.chatbox.clear(),alert("Alle vakter er slettet")}catch(e){console.error("Error in clearAllShifts:",e),alert("En feil oppstod ved sletting av vakter")}},async clearAllData(){if(confirm("Er du sikker på at du vil slette alle vakter og innstillinger? Dette kan ikke angres."))try{const{data:e}=await window.supa.auth.getClaims(),t=await O();if(!t){console.warn("[auth] Missing userId, skipping query");return}if(console.debug("[auth] using userId:",t),!t)return;const{error:s}=await window.supa.from("user_shifts").delete().eq("user_id",t);s&&console.error("Error deleting shifts:",s);const{error:o}=await window.supa.from("user_settings").delete().eq("user_id",t);o&&console.error("Error deleting settings:",o),this.shifts=[],this.userShifts=[],this.setDefaultSettings(),this.updateSettingsUI(),this.updateDisplay(),window.chatbox&&window.chatbox.clear&&window.chatbox.clear(),alert("Alle data er slettet")}catch(e){console.error("Error in clearAllData:",e),alert("En feil oppstod ved sletting av data")}},editShift(e){const t=this.shifts.find(s=>s.id===e);if(!t){console.error("Shift not found:",e);return}this.editingShift=t,this.closeShiftDetails(),this.toggleEmployeeSelectorsVisibility(this.currentView==="employees"),setTimeout(()=>{this.openEditModal(t)},200)},openEditModal(e){const t=document.getElementById("editShiftModal");if(t){t.style.display="flex",t.classList.add("active"),this.populateEditForm(e),this.updateEmployeeAssignmentUIInEditModal?.(e);const s=document.querySelector(".header");s&&s.classList.add("hidden");const o=document.querySelector(".floating-action-bar"),n=document.querySelector(".floating-action-bar-backdrop");o&&(o.style.display="none"),n&&(n.style.display="none");const a=t.querySelector(".modal-backdrop");a&&(a.onclick=()=>this.closeEditShift());const i=r=>{r.key==="Escape"&&this.closeEditShift()};document.addEventListener("keydown",i),t.dataset.keydownHandler="attached"}},closeEditShift(){const e=document.getElementById("editShiftModal");if(e){e.style.display="none",e.classList.remove("active");const t=document.querySelector(".header");t&&t.classList.remove("hidden"),e.dataset.keydownHandler&&(document.removeEventListener("keydown",n=>{n.key==="Escape"&&this.closeEditShift()}),delete e.dataset.keydownHandler);const s=document.querySelector(".floating-action-bar"),o=document.querySelector(".floating-action-bar-backdrop");s&&(s.style.display=""),o&&(o.style.display=""),this.editingShift=null,this.editSelectedDate=null,document.getElementById("editShiftForm").reset(),document.querySelectorAll("#editDateGrid .date-cell").forEach(n=>{n.classList.remove("selected")})}},populateEditForm(e){this.populateEditTimeSelects(),this.populateEditDateGrid(),this.editSelectedDate=new Date(e.date);const[t,s]=e.startTime.split(":"),[o,n]=e.endTime.split(":");document.getElementById("editStartHour").value=t,document.getElementById("editStartMinute").value=s||"00",document.getElementById("editEndHour").value=o,document.getElementById("editEndMinute").value=n||"00",this.populateEmployeeSelectors();const a=document.getElementById("editEmployeeSelect");a&&e.employee_id&&(a.value=e.employee_id),setTimeout(()=>{const i=e.date.getDate(),r=document.querySelector(`#editDateGrid .date-cell[data-day="${i}"]`);r&&r.classList.add("selected")},100)},updateEmployeeAssignmentUIInEditModal(e){try{const t=document.getElementById("editShiftModal");if(!t)return;const s=t.querySelector("#editShiftForm");if(!s)return;const o=document.getElementById("editSelectedEmployeePill");if(o&&o.remove(),!(this.currentView==="employees"))return;const a=this.selectedEmployeeId||e?.employee_id||null,i=a&&this.employees.find(l=>l.id===a)||null,r=t.querySelector("#editEmployeeSelect"),d=r?.closest(".form-group")||r?.parentElement;if(d&&(d.style.display="none"),i){const l=document.createElement("div");l.id="editSelectedEmployeePill",l.className="selected-employee-pill",l.style.cssText="display:flex;align-items:center;gap:8px;padding:10px 12px;border-radius:9999px;background:var(--bg-secondary);border:1px solid var(--border-color);margin:8px 0;";const u=document.createElement("span");u.style.cssText=`width:10px;height:10px;border-radius:9999px;background:${this.getEmployeeDisplayColor?.(i)||i.display_color||"#999"};display:inline-block;`;const c=document.createElement("span");c.textContent=i.name,c.style.fontWeight="600",l.appendChild(u),l.appendChild(c),s.insertBefore(l,s.firstChild),r&&(r.value=i.id),l.dataset.boundEdit||(l.style.cursor="pointer",l.setAttribute("role","button"),l.setAttribute("tabindex","0"),l.title="Rediger ansatt",l.addEventListener("click",m=>{try{m.preventDefault(),m.stopPropagation()}catch{}this.showEditEmployeeModal(i)}),l.addEventListener("keydown",m=>{(m.key==="Enter"||m.key===" ")&&(m.preventDefault(),this.showEditEmployeeModal(i))}),l.dataset.boundEdit="1")}}catch(t){console.warn("updateEmployeeAssignmentUIInEditModal error:",t)}},populateEditTimeSelects(){if(this.directTimeInput)this.replaceEditTimeDropdownsWithInputs();else{this.ensureEditTimeDropdowns();const e=Array.from({length:24},(s,o)=>`<option value="${o.toString().padStart(2,"0")}">${o.toString().padStart(2,"0")}</option>`).join("");let t;this.fullMinuteRange?t=Array.from({length:60},(s,o)=>`<option value="${o.toString().padStart(2,"0")}">${o.toString().padStart(2,"0")}</option>`).join(""):t=["00","15","30","45"].map(s=>`<option value="${s}">${s}</option>`).join(""),document.getElementById("editStartHour").innerHTML='<option value="">Fra time</option>'+e,document.getElementById("editStartMinute").innerHTML='<option value="">Fra minutt</option>'+t,document.getElementById("editEndHour").innerHTML='<option value="">Til time</option>'+e,document.getElementById("editEndMinute").innerHTML='<option value="">Til minutt</option>'+t}},replaceEditTimeDropdownsWithInputs(){[{id:"editStartHour",placeholder:"Fra time (HH)"},{id:"editStartMinute",placeholder:"Fra minutt (MM)"},{id:"editEndHour",placeholder:"Til time (HH)"},{id:"editEndMinute",placeholder:"Til minutt (MM)"}].forEach(t=>{const s=document.getElementById(t.id);if(s&&s.tagName==="SELECT"){const o=s.value,n=document.createElement("input");n.type="text",n.id=t.id,n.className="form-control time-input",n.placeholder=t.placeholder,n.maxLength=2,n.pattern="[0-9]{2}",n.value=o,n.addEventListener("input",a=>{let i=a.target.value.replace(/\D/g,"");if(i.length>2&&(i=i.slice(0,2)),t.id.includes("Hour")){const r=parseInt(i);i.length===2&&r>23&&(i=i.slice(0,1))}else{const r=parseInt(i);i.length===2&&r>59&&(i=i.slice(0,1))}a.target.value=i}),n.addEventListener("blur",a=>{a.target.value.length===1&&(a.target.value="0"+a.target.value)}),s.replaceWith(n)}})},ensureEditTimeDropdowns(){["editStartHour","editStartMinute","editEndHour","editEndMinute"].forEach(t=>{const s=document.getElementById(t);if(s&&s.tagName==="INPUT"){s.value;const o=document.createElement("select");o.id=t,o.className="form-control",s.replaceWith(o)}})},populateEditDateGrid(){const e=document.getElementById("editDateGrid");if(!e)return;e.innerHTML="";const t=this.currentYear,s=this.currentMonth-1,o=new Date(t,s,1),n=new Date(o),a=o.getDay()===0?6:o.getDay()-1;n.setDate(n.getDate()-a);const i=this.shifts.filter(l=>l.date.getMonth()===s&&l.date.getFullYear()===t),r=new Set;i.forEach(l=>{r.add(l.date.getDate())});const d=document.createElement("div");d.textContent="",d.className="week-number header",e.appendChild(d),["M","T","O","T","F","L","S"].forEach(l=>{const u=document.createElement("div");u.textContent=l,u.style.cssText="font-weight:600;font-size:12px;color:var(--text-secondary);text-align:center;padding:8px;",e.appendChild(u)});for(let l=0;l<42;l++){if(l%7===0){const h=new Date(n);h.setDate(n.getDate()+l);const g=this.getISOWeekNumber(h),p=document.createElement("div");p.className="week-number",p.textContent=g,e.appendChild(p)}const u=new Date(n);u.setDate(n.getDate()+l);const c=document.createElement("div");c.className="date-cell";const m=document.createElement("div");if(m.className="date-cell-content",m.textContent=u.getDate(),u.getMonth()===s&&r.has(u.getDate())){const h=document.createElement("div");h.className="shift-indicator-dot",m.appendChild(h),c.classList.add("has-shift")}const w=new Date;if(u.getDate()===w.getDate()&&u.getMonth()===w.getMonth()&&u.getFullYear()===w.getFullYear()&&c.classList.add("current-date"),c.appendChild(m),c.dataset.day=u.getDate(),u.getMonth()!==s)c.classList.add("disabled");else{const h=u.getDay();h===0?c.classList.add("sunday"):h===6?c.classList.add("saturday"):c.classList.add("weekday"),c.addEventListener("click",()=>{document.querySelectorAll("#editDateGrid .date-cell").forEach(g=>g.classList.remove("selected")),c.classList.add("selected"),this.editSelectedDate=new Date(u)})}e.appendChild(c)}},async updateShift(){if(!this.editingShift){console.error("No shift being edited"),alert("Ingen vakt valgt for redigering");return}try{if(!this.editSelectedDate){alert("Vennligst velg en dato");return}const e=document.getElementById("editStartHour").value,t=document.getElementById("editStartMinute").value||"00",s=document.getElementById("editEndHour").value,o=document.getElementById("editEndMinute").value||"00";if(!e||!s){alert("Vennligst fyll ut arbeidstid");return}const n=`${this.editSelectedDate.getFullYear()}-${(this.editSelectedDate.getMonth()+1).toString().padStart(2,"0")}-${this.editSelectedDate.getDate().toString().padStart(2,"0")}`,a=`${e}:${t}`,i=`${s}:${o}`;if(this.currentView==="employees"){const{data:{session:p}}=await window.supa.auth.getSession();if(!p){alert("Du er ikke innlogget");return}const k={Authorization:`Bearer ${p.access_token}`,"Content-Type":"application/json"},S=document.getElementById("editEmployeeSelect"),f=S&&S.value||null,v={shift_date:n,start_time:a,end_time:i};f&&(v.employee_id=f);let b=this.editingShift?.id||null;if(!b){const y=this.editingShift?.date instanceof Date?`${this.editingShift.date.getFullYear()}-${String(this.editingShift.date.getMonth()+1).padStart(2,"0")}-${String(this.editingShift.date.getDate()).padStart(2,"0")}`:n,E=this.editingShift?.employee_id||f||this.selectedEmployeeId||null;if(!E){alert("Kunne ikke finne ansatt for vakten. Oppdater siden og prøv igjen.");return}const C=new URLSearchParams({from:y,to:y,limit:"200",employee_id:E,bust:String(Date.now())}),T=await fetch(`${window.CONFIG.apiBase}/employee-shifts?${C.toString()}`,{headers:k,cache:"no-store"});if(!T.ok){alert("Kunne ikke hente eksisterende vakt for oppdatering.");return}const{shifts:B=[]}=await T.json().catch(()=>({shifts:[]})),x=this.editingShift?.startTime,L=this.editingShift?.endTime;let M=B.find(I=>I.start_time===x&&I.end_time===L);if(!M&&B.length===1&&(M=B[0]),!M||!M.id){alert("Fant ikke vakten å oppdatere. Last inn på nytt og prøv igjen.");return}b=M.id}const D=await fetch(`${window.CONFIG.apiBase}/employee-shifts/${b}`,{method:"PUT",headers:k,body:JSON.stringify(v)});if(!D.ok){const y=await D.json().catch(()=>({}));console.error("updateShift (employee) failed:",y),alert(y.error||"Kunne ikke oppdatere vakt");return}await this.fetchAndDisplayEmployeeShifts?.(),this.closeEditShift(),alert("Vakt oppdatert!");return}const{data:r}=await window.supa.auth.getClaims();if(!!!r){alert("Feil ved autentisering");return}const l=this.editSelectedDate.getDay(),u=l===0?2:l===6?1:0,c={shift_date:n,start_time:a,end_time:i,shift_type:u,series_id:null},{data:m,error:w}=await window.supa.from("user_shifts").update(c).eq("id",this.editingShift.id).eq("user_id",user.id).select().single();if(w){console.error("updateShift: Database error when updating shift:",w),alert(`Kunne ikke oppdatere vakt i databasen: ${w.message}`);return}const h=this.editingShift;h.date=new Date(this.editSelectedDate),h.startTime=a,h.endTime=i,h.type=u,h.seriesId=null;const g=this.userShifts.findIndex(p=>p.id===h.id);g!==-1&&(this.userShifts[g]={...h}),this.shifts=[...this.userShifts],this.refreshUI(this.shifts),this.closeEditShift(),alert("Vakt oppdatert!")}catch(e){console.error("updateShift: Critical error:",e),alert(`En uventet feil oppstod: ${e.message}`)}},setupTabBarEventListeners(){document.querySelectorAll(".tab-bar .tab-btn[data-view]").forEach(t=>{t.addEventListener("click",s=>{const o=t.getAttribute("data-view");o&&this.switchToView(o)})})},switchToView(e){if(!new Set(["dashboard","stats","chatgpt","employees"]).has(e)){console.warn("switchToView: ignoring invalid view",e);return}if(document.querySelectorAll(".tab-btn").forEach(o=>{o.classList.toggle("active",o.getAttribute("data-view")===e)}),e!=="dashboard"){const o=document.querySelector(".total-card"),n=document.querySelector(".next-shift-card"),a=document.querySelector(".next-payroll-card"),i=document.querySelector(".dashboard-month-nav"),r=document.querySelector(".floating-action-bar");o&&(o.style.display="none"),n&&(n.style.display="none"),a&&(a.style.display="none"),i&&(i.style.display="none"),r&&(r.style.display="none")}switch(this.cleanupAllViews(),e){case"dashboard":this.showDashboardView();break;case"stats":this.showStatsView();break;case"chatgpt":this.showChatGPTView();break;case"employees":this.showEmployeesView().catch(o=>{console.error("Error showing employees view:",o)});break}},cleanupAllViews(){document.body.classList.remove("stats-view","chatbox-view","employees-view"),this.employeeCarousel&&this.employeeCarousel.cleanup?.();const t=document.querySelector(".chatbox-container"),s=document.querySelector(".employees-container"),o=document.querySelector(".dashboard-stats-container");if(t){t.style.display="none";const n=document.getElementById("chatboxPill"),a=document.getElementById("chatboxExpandedContent"),i=document.getElementById("chatboxClose");n&&n.classList.remove("expanded"),a&&(a.style.display="none"),i&&(i.style.display="none")}if(s&&(s.style.display="none"),o){const n=document.getElementById("weeklyHoursChart"),a=document.querySelector(".statistics-section");if(n&&a){const i=a.querySelector(".statistics-content");i&&(i.appendChild(n),console.log("Moved chart back to statistics section during cleanup"))}o.remove()}this.ensureMonthPickerVisibility()},ensureMonthPickerVisibility(){const e=document.querySelector(".dashboard-month-nav");e&&(e.style.display="flex",e.style.visibility="visible",e.style.opacity="1",e.style.position="relative",e.style.left="auto",e.style.height="auto",e.style.width="auto")},showDashboardView(){document.body.classList.remove("stats-view","chatbox-view","employees-view"),this.currentView="dashboard",this.selectedEmployeeId=null,localStorage.removeItem("selectedEmployeeId"),this.shifts=[...this.userShifts];const t=document.querySelector(".total-card"),s=document.querySelector(".next-shift-card"),o=document.querySelector(".next-payroll-card"),n=document.querySelector(".floating-action-bar"),a=document.querySelector(".chatbox-container");if(t&&(t.style.display=""),s&&(s.style.display=""),o&&(o.style.display=""),this.ensureMonthPickerVisibility(),n&&(n.style.display="flex"),a){a.style.display="none";const r=document.getElementById("chatboxPill"),d=document.getElementById("chatboxExpandedContent");r&&r.classList.remove("expanded"),d&&(d.style.display="none")}const i=document.querySelector(".dashboard-stats-container");if(i){const r=document.getElementById("weeklyHoursChart"),d=document.querySelector(".statistics-section");if(r&&d){const l=d.querySelector(".statistics-content");l&&(l.appendChild(r),console.log("Moved chart back to statistics section from dashboard view"))}i.remove()}this.updateDisplay()},async fetchAndDisplayEmployeeShifts(){try{const{data:{session:e}}=await window.supa.auth.getSession();if(!e){console.warn("No session for employee-shifts fetch");return}const t={Authorization:`Bearer ${e.access_token}`},s=new URLSearchParams;this.selectedEmployeeId&&s.set("employee_id",this.selectedEmployeeId);const o=`${this.currentYear}-${String(this.currentMonth).padStart(2,"0")}-01`,n=new Date(this.currentYear,this.currentMonth,0),a=`${n.getFullYear()}-${String(n.getMonth()+1).padStart(2,"0")}-${String(n.getDate()).padStart(2,"0")}`;s.set("from",o),s.set("to",a),s.set("limit","200"),s.set("bust",String(Date.now()));const i=await fetch(`${window.CONFIG.apiBase}/employee-shifts?${s.toString()}`,{headers:t,cache:"no-store"});if(!i.ok){const d=await i.json().catch(()=>({}));console.error("Failed to fetch employee shifts:",d);return}const{shifts:r}=await i.json();this.shifts=(r||[]).map(d=>({id:d.id,date:new Date(d.shift_date+"T00:00:00.000Z"),startTime:d.start_time,endTime:d.end_time,type:(()=>{const l=new Date(d.shift_date+"T00:00:00Z").getDay();return l===0?2:l===6?1:0})(),seriesId:null,employee_id:d.employee_id,employee:this.employees.find(l=>l.id===d.employee_id)||null,hourly_wage_snapshot:Number(d.hourly_wage_snapshot)})),this.updateHeader(),this.updateStats(!1),this.updateWeeklyHoursChart(),this.updateShiftList(),this.updateShiftCalendar(),this.currentView==="employees"&&this.renderEmployeeWorkSummary?.()}catch(e){console.error("fetchAndDisplayEmployeeShifts error:",e)}},showStatsView(){const e=document.body;e.classList.remove("chatbox-view","employees-view"),e.classList.add("stats-view"),this.currentView="stats",this.selectedEmployeeId=null,localStorage.removeItem("selectedEmployeeId"),this.shifts=[...this.userShifts],requestAnimationFrame(()=>{this.ensureMonthPickerVisibility()}),this.dashboardView="stats",this.applyDashboardView(),this.updateDisplay()},showChatGPTView(){const e=document.body;e.classList.remove("stats-view","employees-view"),e.classList.add("chatbox-view"),this.currentView="chatgpt",this.selectedEmployeeId=null,localStorage.removeItem("selectedEmployeeId"),this.shifts=[...this.userShifts];const t=document.querySelector(".chatbox-container");t&&(t.style.display="block"),this.ensureMonthPickerVisibility(),this.expandChatboxForTabView(),this.updateDisplay()},expandChatboxForTabView(){const e=document.getElementById("chatboxPill"),t=document.getElementById("chatboxExpandedContent"),s=document.getElementById("chatboxClose"),o=document.getElementById("chatboxLog");if(e&&t){e.classList.add("expanded"),t.style.display="block",s&&(s.style.display="block"),o&&o.children.length===0&&this.addChatGreetingMessage();const n=document.getElementById("chatboxInput");n&&setTimeout(()=>{n.focus()},100)}},addChatGreetingMessage(){const e=document.getElementById("chatboxLog");if(!e)return;const t=document.getElementById("userNickname"),o=`Hei ${t?t.textContent:"Bruker"}! :)

Jeg er LønnAI, din assistent for vakter og lønn. 
Jeg kan registrere vakter, opprette serier, svare på lønnsspørsmål og gi planleggingstips.
Hva trenger du hjelp med i dag?`;if(window.chatbox&&window.chatbox.appendMessage)window.chatbox.appendMessage("assistant",o,{streaming:!0,streamSpeed:25});else{const n=document.createElement("div");if(n.className="chatbox-message assistant",typeof streamText=="function")n.innerHTML="",e.appendChild(n),streamText(n,o,25);else{if(typeof marked<"u"&&typeof DOMPurify<"u"){const a=DOMPurify.sanitize(marked.parse(o));n.innerHTML=a}else n.textContent=o;e.appendChild(n)}setTimeout(()=>{e.scrollTop=e.scrollHeight},50)}},async showEmployeesView(){const e=document.body;e.classList.remove("stats-view","chatbox-view"),e.classList.add("employees-view"),this.ensureMonthPickerVisibility();try{const s=document.querySelector(".total-card"),o=document.querySelector(".next-shift-card"),n=document.querySelector(".next-payroll-card");s&&(s.style.display="none"),o&&(o.style.display="none"),n&&(n.style.display="none")}catch(s){console.warn("Could not hide dashboard cards in employees view",s)}this.currentView="employees",await U()?(this.showEmployeesPlaceholder(),this.employees.length===0&&!this.employeesLoading&&this.loadEmployees().catch(s=>{console.error("Failed to load employees:",s)}),this.shifts=[],this.updateDisplay(),this.fetchAndDisplayEmployeeShifts?.(),this.employeeCarousel&&this.employeeCarousel.preloadAvatars?.()):(window.showToast&&window.showToast("Ansatte krever Enterprise-abonnement","info"),this.switchToView("dashboard"))},showEmployeesPlaceholder(){let e=document.querySelector(".employees-container");if(!e){e=document.createElement("div"),e.className="employees-container",e.innerHTML=`
                <div class="employees-header">
                    <h2>Ansatte</h2>
                    <div class="employees-summary" id="employeesSummary"></div>
                </div>
                <div class="employee-carousel-container" id="employeeCarouselContainer">
                    <!-- Employee carousel will be rendered here -->
                </div>
                <div class="employees-content" id="employeesContent">
                    <div class="employee-work-summary" id="employeeWorkSummary"></div>
                </div>
            `;const t=document.querySelector(".tab-bar-container");t&&t.parentNode.insertBefore(e,t.nextSibling)}e.style.display="block",this.initializeEmployeeCarousel()},showEmployeeUpgradePrompt(){let e=document.querySelector(".employees-container");if(!e){e=document.createElement("div"),e.className="employees-container";const s=document.querySelector(".tab-bar-container");s&&s.parentNode.insertBefore(e,s.nextSibling)}e.innerHTML=`
            <div class="employees-upgrade-container">
                <div class="upgrade-prompt-card">
                    <div class="upgrade-prompt-icon">
                        <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                            <circle cx="8.5" cy="7" r="4"></circle>
                            <path d="M20 8v6M23 11l-3-3-3 3"></path>
                        </svg>
                    </div>
                    <h3>Ansattadministrasjon</h3>
                    <p class="upgrade-description">
                        Med Enterprise-abonnementet kan du administrere ansatte, 
                        beregne lønn for teamet ditt og få avanserte rapporter.
                    </p>
                    <div class="upgrade-features">
                        <div class="feature-item">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polyline points="20,6 9,17 4,12"></polyline>
                            </svg>
                            <span>Administrer ansatte</span>
                        </div>
                        <div class="feature-item">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polyline points="20,6 9,17 4,12"></polyline>
                            </svg>
                            <span>Lønnsberegning for ansatte</span>
                        </div>
                        <div class="feature-item">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polyline points="20,6 9,17 4,12"></polyline>
                            </svg>
                            <span>Avanserte rapporter</span>
                        </div>
                        <div class="feature-item">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polyline points="20,6 9,17 4,12"></polyline>
                            </svg>
                            <span>Dedikert støtte</span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary upgrade-to-enterprise-btn" id="upgradeToEnterpriseBtn">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                        </svg>
                        Oppgrader til Enterprise
                    </button>
                </div>
            </div>
        `,e.style.display="block";const t=e.querySelector("#upgradeToEnterpriseBtn");t&&t.addEventListener("click",async()=>{const s=t,o=s.disabled;s.disabled=!0,s.setAttribute("aria-busy","true");try{window.startCheckout?await window.startCheckout("price_1RzQC1Qiotkj8G58tYo4U5oO",{mode:"subscription"}):(console.warn("startCheckout not available"),window.showToast&&window.showToast("Kunne ikke starte oppgradering","error"))}catch(n){console.error("Upgrade to Enterprise failed:",n),window.showToast&&window.showToast("Kunne ikke starte oppgradering","error")}finally{s.removeAttribute("aria-busy"),s.disabled=o}})},async initializeEmployeeCarousel(){try{const e=document.getElementById("employeeCarouselContainer");if(!e)return;const{EmployeeCarousel:t}=await F(async()=>{const{EmployeeCarousel:s}=await import("./employeeCarousel-BIfKttFx.js");return{EmployeeCarousel:s}},__vite__mapDeps([14,1]));this.employeeCarousel&&this.employeeCarousel.destroy(),this.employeeCarousel=new t(e,this),this.employees.length===0&&!this.employeesLoading&&await this.loadEmployees(),this.updateEmployeesSummary()}catch(e){console.error("Error initializing employee carousel:",e)}},updateEmployeeCarousel(){this.employeeCarousel&&this.employeeCarousel.update(),this.updateEmployeesSummary()},updateEmployeesSummary(){const e=document.getElementById("employeesSummary");if(!e)return;const t=this.employees.filter(o=>!o.archived_at);this.getSelectedEmployee();const s=`${t.length} aktive ansatte`;e.textContent=s,this.currentView==="employees"&&this.renderEmployeeWorkSummary?.()},async updateTabBarVisibility(){const e=document.getElementById("tabAnsatte");if(!e)return;const t=await U();e.style.display=t?"flex":"none",!t&&this.currentView==="employees"&&this.switchToView("dashboard")},setupChatboxCloseOverride(){const e=document.getElementById("chatboxClose");if(e){const t=e.cloneNode(!0);e.parentNode.replaceChild(t,e),t.addEventListener("click",s=>{s.stopPropagation(),s.preventDefault(),this.switchToView("dashboard")})}},async toggleWageCaregiver(){const e=document.getElementById("isWageCaregiverToggle");if(e){const t=await U();e.checked=t,e.disabled=!0,!t&&window.showToast&&window.showToast("Enterprise abonnement kreves for ansattfunksjoner","info"),await this.updateTabBarVisibility()}},exportData(e){try{const t={shifts:this.shifts.map(s=>({id:s.id,date:s.date.toISOString(),startTime:s.startTime,endTime:s.endTime,type:s.type,seriesId:s.seriesId||null})),settings:{usePreset:this.usePreset,customWage:this.customWage,currentWageLevel:this.currentWageLevel,customBonuses:this.customBonuses,pauseDeduction:this.pauseDeduction,fullMinuteRange:this.fullMinuteRange,directTimeInput:this.directTimeInput,monthlyGoal:this.monthlyGoal,currencyFormat:this.currencyFormat},exportDate:new Date().toISOString(),version:"1.0"};e==="csv"?this.exportAsCSV(t):e==="pdf"?this.exportAsPDF(t):this.exportAsJSON(t)}catch(t){console.error("Error exporting data:",t),alert("Kunne ikke eksportere data. Prøv igjen.")}},exportAsCSV(e){const t=[["Dato","Dag","Start","Slutt","Timer","Grunnlønn","Tillegg","Totalt","Type","Serie"].join(","),...e.shifts.map(s=>{const o=new Date(s.date),n=this.calculateShift({...s,date:o});return[o.toLocaleDateString("no-NO"),this.WEEKDAYS[o.getDay()],s.startTime,s.endTime,n.hours.toFixed(2),n.baseWage.toFixed(2),n.bonus.toFixed(2),n.total.toFixed(2),s.type===0?"Ukedag":s.type===1?"Lørdag":"Søndag",s.seriesId?"Ja":"Nei"].join(",")})].join(`
`);this.downloadFile(t,"vaktdata.csv","text/csv")},exportAsJSON(e){const t=JSON.stringify(e,null,2);this.downloadFile(t,"vaktdata.json","application/json")},exportAsPDF(e){try{if(typeof window.jspdf?.jsPDF!="function"){alert("PDF-biblioteket (jsPDF) ble ikke funnet. Prøv å laste siden på nytt.");return}const{jsPDF:t}=window.jspdf,s=new t;s.setProperties({title:"Vaktrapport",subject:"Lønn og vaktdetaljer",author:"Vaktkalkulator",creator:"Vaktkalkulator"});const o=new Date().toLocaleDateString("no-NO",{year:"numeric",month:"long",day:"numeric"}),n=e.shifts.map(y=>({...y,date:new Date(y.date)}));let a=0,i=0,r=0,d=0;const l={weekday:0,saturday:0,sunday:0},u=n.map(y=>{const E=this.calculateShift(y);a+=E.hours,i+=E.total,r+=E.bonus,d+=E.baseWage;const C=y.type===0?"weekday":y.type===1?"saturday":"sunday";return l[C]++,{...y,calc:E}});u.sort((y,E)=>y.date-E.date);let c=20;const m=20,w=190,h=210,g=297,p=y=>c+y>g-20?(s.addPage(),c=20,!0):!1;if(s.setFontSize(20),s.setFont("helvetica","bold"),s.text("Vaktrapport",m,c),c+=15,s.setFontSize(10),s.setFont("helvetica","normal"),s.text(`Eksportert: ${o}`,m,c),c+=10,u.length>0){const y=u[0].date,E=u[u.length-1].date,C=`Periode: ${y.toLocaleDateString("no-NO")} - ${E.toLocaleDateString("no-NO")}`;s.text(C,m,c),c+=15}p(60),s.setFontSize(14),s.setFont("helvetica","bold"),s.text("Sammendrag",m,c),c+=10,s.setFontSize(10),s.setFont("helvetica","normal"),[["Totalt antall vakter:",n.length.toString()],["Totale timer:",a.toFixed(2)+" timer"],["Total grunnlønn:",this.formatCurrencyShort(d)+" kr"],["Totale tillegg:",this.formatCurrencyShort(r)+" kr"],["Total lønn:",this.formatCurrencyShort(i)+" kr"],["",""],["Vakter per type:",""],["  Ukedager:",l.weekday.toString()],["  Lørdager:",l.saturday.toString()],["  Søndager/helligdager:",l.sunday.toString()]].forEach(([y,E])=>{y&&(s.text(y,m,c),E&&s.text(E,m+60,c)),c+=5}),c+=10,p(50),s.setFontSize(14),s.setFont("helvetica","bold"),s.text("Detaljert vaktliste",m,c),c+=10,s.setFontSize(8),s.setFont("helvetica","bold");const S=["Dato","Dag","Start","Slutt","Timer","Grunnlønn","Tillegg","Totalt"],f=[25,20,15,15,15,25,25,25],v=[m];for(let y=1;y<f.length;y++)v.push(v[y-1]+f[y-1]);S.forEach((y,E)=>{s.text(y,v[E],c)}),c+=5,s.setLineWidth(.5),s.line(m,c,w,c),c+=5,s.setFont("helvetica","normal"),u.forEach(y=>{p(8),[y.date.toLocaleDateString("no-NO"),this.WEEKDAYS[y.date.getDay()].substring(0,3),y.startTime,y.endTime,y.calc.hours.toFixed(2),this.formatCurrencyShort(y.calc.baseWage),this.formatCurrencyShort(y.calc.bonus),this.formatCurrencyShort(y.calc.total)].forEach((C,T)=>{s.text(C,v[T],c)}),c+=5}),c+=5,s.setLineWidth(.5),s.line(m,c,w,c),c+=5,s.setFont("helvetica","bold"),s.text("Sum:",v[0],c),s.text(a.toFixed(2),v[4],c),s.text(this.formatCurrencyShort(d),v[5],c),s.text(this.formatCurrencyShort(r),v[6],c),s.text(this.formatCurrencyShort(i),v[7],c);const b=s.internal.getNumberOfPages();for(let y=1;y<=b;y++)s.setPage(y),s.setFontSize(8),s.setFont("helvetica","normal"),s.text(`Side ${y} av ${b}`,w-20,g-10),s.text("Generert av Vaktkalkulator",m,g-10);const D=`vaktrapport_${new Date().toISOString().split("T")[0]}.pdf`;s.save(D)}catch(t){console.error("Error generating PDF:",t),alert("Kunne ikke generere PDF. Prøv igjen eller bruk CSV-eksport.")}},downloadFile(e,t,s){const o=new Blob([e],{type:s}),n=URL.createObjectURL(o),a=document.createElement("a");a.href=n,a.download=t,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(n)},async importData(){const t=document.getElementById("importFile").files[0];if(!t){alert("Velg en fil å importere");return}const s=new FileReader;s.onload=async o=>{try{const n=o.target.result;if(t.name.endsWith(".json")){const a=JSON.parse(n);await this.importFromJSON(a)}else if(t.name.endsWith(".csv"))await this.importFromCSV(n);else{alert("Ikke støttet filformat. Bruk JSON eller CSV.");return}alert("Data importert successfully!"),this.updateDisplay()}catch(n){console.error("Error importing data:",n),alert("Kunne ikke importere data. Sjekk filformatet.")}},s.readAsText(t)},detectDuplicateShifts(e){const t=[],s=[];return e.forEach(o=>{const n=this.createShiftKey(o);this.shifts.some(i=>{const r=this.createShiftKey(i);return n===r})?s.push(o):t.push(o)}),{newShifts:t,duplicates:s}},createShiftKey(e){return`${`${e.date.getFullYear()}-${(e.date.getMonth()+1).toString().padStart(2,"0")}-${e.date.getDate().toString().padStart(2,"0")}`}_${e.startTime}_${e.endTime}_${e.type}`},getMonthShiftsKey(){const e=this.currentMonth-1,t=this.currentYear;return this.shifts.filter(o=>o.date.getMonth()===e&&o.date.getFullYear()===t).map(o=>this.createShiftKey(o)).join("|")},async saveImportedShiftsToSupabase(e){try{const{data:t}=await window.supa.auth.getClaims();if(!!!t)throw new Error("Du er ikke innlogget");const o=e.map(i=>{const r=`${i.date.getFullYear()}-${(i.date.getMonth()+1).toString().padStart(2,"0")}-${i.date.getDate().toString().padStart(2,"0")}`;return{user_id:user.id,shift_date:r,start_time:i.startTime,end_time:i.endTime,shift_type:i.type,series_id:i.seriesId||null}}),{data:n,error:a}=await window.supa.from("user_shifts").insert(o).select();if(a)throw console.error("Error saving imported shifts to Supabase:",a),new Error(`Kunne ikke lagre importerte vakter: ${a.message}`);n.forEach((i,r)=>{e[r].id=i.id})}catch(t){throw console.error("Error in saveImportedShiftsToSupabase:",t),t}},async importFromJSON(e){if(e.shifts&&Array.isArray(e.shifts)){const t=e.shifts.map(n=>({...n,date:new Date(n.date)}));t.forEach(n=>{n.id||(n.id=Date.now()+Math.random())});const{newShifts:s,duplicates:o}=this.detectDuplicateShifts(t);if(o.length>0){const n=o.length;if(!confirm(`Fant ${n} duplikat vakter som allerede eksisterer. Vil du fortsatt importere de ${s.length} nye vaktene?`))return}s.length>0&&(await this.saveImportedShiftsToSupabase(s),this.shifts=[...this.shifts,...s],this.userShifts=[...this.userShifts,...s])}e.settings&&confirm("Vil du også importere innstillinger? Dette vil overskrive dine nåværende innstillinger.")&&(Object.assign(this,e.settings),this.saveSettingsToSupabase(),this.updateSettingsUI())},async importFromCSV(e){const t=e.split(`
`),s=[];for(let a=1;a<t.length;a++){const i=t[a].trim();if(!i)continue;const r=i.split(",");if(r.length>=6){const d=r[0].split("."),l=new Date(parseInt(d[2]),parseInt(d[1])-1,parseInt(d[0])),u={id:Date.now()+Math.random(),date:l,startTime:r[2],endTime:r[3],type:r[8]==="Ukedag"?0:r[8]==="Lørdag"?1:2,seriesId:r[9]==="Ja"?"imported-series":null};s.push(u)}}const{newShifts:o,duplicates:n}=this.detectDuplicateShifts(s);if(n.length>0){const a=n.length;if(!confirm(`Fant ${a} duplikat vakter som allerede eksisterer. Vil du fortsatt importere de ${o.length} nye vaktene?`))return}o.length>0&&(await this.saveImportedShiftsToSupabase(o),this.shifts=[...this.shifts,...o],this.userShifts=[...this.userShifts,...o])},setupNewSettingsListeners(){const e=document.getElementById("currencyFormatToggle");e&&e.addEventListener("change",()=>{this.currencyFormat=e.checked,this.saveSettingsToSupabase(),this.updateDisplay()});const t=document.getElementById("defaultShiftsViewToggle");t&&t.addEventListener("change",()=>{this.defaultShiftsView=t.checked?"calendar":"list",this.saveSettingsToSupabase()});const s=document.getElementById("isWageCaregiverToggle"),o=document.querySelector("#isWageCaregiverToggle + .toggle-slider");s&&s.addEventListener("change",()=>{this.toggleWageCaregiver()}),s&&o&&o.addEventListener("click",n=>{n.preventDefault(),s.checked=!s.checked,this.toggleWageCaregiver()}),this.setupTabBarEventListeners(),this.setupChatboxCloseOverride()},setupExportPeriodOptions(){this.updateCurrentMonthLabel();const e=document.querySelectorAll('input[name="exportPeriod"]'),t=document.getElementById("customPeriodSection");e.forEach(o=>{o.addEventListener("change",()=>{if(o.value==="custom"){t.style.display="block";const n=document.getElementById("exportStartDate"),a=document.getElementById("exportEndDate");if(!n.value){const i=new Date,r=new Date(i.getFullYear(),i.getMonth(),1);n.value=r.toISOString().split("T")[0]}if(!a.value){const i=new Date,r=new Date(i.getFullYear(),i.getMonth()+1,0);a.value=r.toISOString().split("T")[0]}}else t.style.display="none"})});const s=document.querySelector('input[name="exportPeriod"]:checked');s&&s.value==="custom"&&(t.style.display="block")},updateCurrentMonthLabel(){const e=document.getElementById("currentMonthLabel");if(e){const t=this.MONTHS[this.currentMonth-1];e.textContent=`${t.charAt(0).toUpperCase()+t.slice(1)} ${this.currentYear}`}},exportDataWithPeriod(e){try{const t=document.querySelector('input[name="exportPeriod"]:checked');if(!t){alert("Vennligst velg en periode for eksport først.");return}const s=t.value;let o=[...this.shifts];if(s==="current")o=this.shifts.filter(a=>a.date.getMonth()===this.currentMonth-1&&a.date.getFullYear()===this.currentYear);else if(s==="custom"){const a=document.getElementById("exportStartDate").value,i=document.getElementById("exportEndDate").value;if(!a||!i){alert("Vennligst fyll ut både start- og sluttdato for egendefinert periode.");return}const r=new Date(a),d=new Date(i);if(r>d){alert("Startdato må være før sluttdato.");return}o=this.shifts.filter(l=>{const u=new Date(l.date);return u>=r&&u<=d})}if(o.length===0){alert("Ingen vakter funnet for den valgte perioden.");return}const n={shifts:o.map(a=>({id:a.id,date:a.date.toISOString(),startTime:a.startTime,endTime:a.endTime,type:a.type,seriesId:a.seriesId||null})),settings:{usePreset:this.usePreset,customWage:this.customWage,currentWageLevel:this.currentWageLevel,customBonuses:this.customBonuses,pauseDeduction:this.pauseDeduction,fullMinuteRange:this.fullMinuteRange,directTimeInput:this.directTimeInput,monthlyGoal:this.monthlyGoal,currencyFormat:this.currencyFormat},exportDate:new Date().toISOString(),exportPeriod:s,version:"1.0"};e==="csv"?this.exportAsCSV(n):e==="pdf"?this.exportAsPDF(n):this.exportAsJSON(n)}catch(t){console.error("Error exporting data:",t),alert("Kunne ikke eksportere data. Prøv igjen.")}},async importDataFromDataTab(){const e=document.getElementById("importFileData"),t=e.files[0];if(!t){alert("Velg en fil å importere");return}const s=new FileReader;s.onload=async o=>{try{const n=o.target.result;if(t.name.endsWith(".json")){const a=JSON.parse(n);await this.importFromJSON(a)}else if(t.name.endsWith(".csv"))await this.importFromCSV(n);else{alert("Ikke støttet filformat. Bruk JSON eller CSV.");return}alert("Data importert successfully!"),this.updateDisplay(),e.value=""}catch(n){console.error("Error importing data:",n),alert("Kunne ikke importere data. Sjekk filformatet.")}},s.readAsText(t)},openAddShiftModalWithDate(e){if(!e){this.openAddShiftModal();return}const t=new Date(e),s=t.getMonth()+1,o=t.getFullYear();this.openAddShiftModal(s,o),this.selectedDates=[new Date(t)],setTimeout(()=>{document.querySelectorAll("#dateGrid .date-cell").forEach(a=>{a.classList.remove("selected");const i=a.querySelector(".date-cell-content");i&&parseInt(i.textContent)===t.getDate()&&!a.classList.contains("disabled")&&a.classList.add("selected")}),this.updateSelectedDatesInfo()},10)},initializeEmployeeState(){try{const t=new URLSearchParams(window.location.search).get("employee"),s=localStorage.getItem("selectedEmployeeId");t!==null?this.selectedEmployeeId=t==="all"?null:t:s!==null&&this.currentView==="employees"?this.selectedEmployeeId=s==="null"?null:s:this.selectedEmployeeId=null,this.employeeCache.clear()}catch(e){console.error("Error initializing employee state:",e),this.selectedEmployeeId=null}},setSelectedEmployee(e){try{this.selectedEmployeeId=e,localStorage.setItem("selectedEmployeeId",e===null?"null":e);const t=new URL(window.location);e===null?t.searchParams.set("employee","all"):t.searchParams.set("employee",e),window.history.replaceState({},"",t),this.onEmployeeSelectionChange()}catch(t){console.error("Error setting selected employee:",t)}},getSelectedEmployee(){return this.selectedEmployeeId===null?null:this.employees.find(e=>e.id===this.selectedEmployeeId)||null},isEmployeeSelected(e){return this.selectedEmployeeId===e},isAllEmployeesSelected(){return this.selectedEmployeeId===null},onEmployeeSelectionChange(){console.log("Employee selection changed to:",this.selectedEmployeeId),this.applyEmployeeFilter?.(),this.updateEmployeeCarousel?.(),this.updateShiftList?.(),this.updateStats?.()},getEmployeeCache(e,t){const s=this.employeeCache.get(e);return s?s[t]:void 0},setEmployeeCache(e,t,s){this.employeeCache.has(e)||this.employeeCache.set(e,{}),this.employeeCache.get(e)[t]=s},clearEmployeeCache(e){this.employeeCache.delete(e)},clearAllEmployeeCaches(){this.employeeCache.clear()},async loadEmployees(e=!1){try{this.employeesLoading=!0,this.employeesError=null;const{employeeService:t}=await F(async()=>{const{employeeService:o}=await import("./employeeService-BzRZ7ePp.js");return{employeeService:o}},__vite__mapDeps([15,7])),s=await t.fetchEmployees(e);this.employees=s,this.onEmployeesLoaded()}catch(t){console.error("Error loading employees:",t),this.employeesError=t.message,this.employees=[]}finally{this.employeesLoading=!1}},onEmployeesLoaded(){console.log("Employees loaded:",this.employees.length),this.updateEmployeeCarousel?.(),this.selectedEmployeeId&&!this.employees.find(e=>e.id===this.selectedEmployeeId)&&(console.warn('Selected employee no longer exists, resetting to "All"'),this.selectedEmployeeId=null),this.populateEmployeeFilterBar(),this.applyEmployeeFilter(),this.populateEmployeeSelectors(),this.updateEmployeeModals?.()},updateEmployeeModals(){console.log("Updating employee modals with new data")},async showCreateEmployeeModal(){try{const{EmployeeModal:e}=await F(async()=>{const{EmployeeModal:t}=await import("./employeeModal-DFVszCK8.js");return{EmployeeModal:t}},__vite__mapDeps([16,1]));this.employeeModal||(this.employeeModal=new e(this)),await this.employeeModal.showCreate()}catch(e){console.error("Error showing create employee modal:",e)}},async showEditEmployeeModal(e){try{const{EmployeeModal:t}=await F(async()=>{const{EmployeeModal:s}=await import("./employeeModal-DFVszCK8.js");return{EmployeeModal:s}},__vite__mapDeps([16,1]));this.employeeModal||(this.employeeModal=new t(this)),await this.employeeModal.showEdit(e)}catch(t){console.error("Error showing edit employee modal:",t)}},getEmployeeInitials(e){if(!e?.name)return"?";const t=e.name.trim().split(/\s+/);return t.length===1?t[0].substring(0,2).toUpperCase():(t[0][0]+t[t.length-1][0]).toUpperCase()},getEmployeeDisplayColor(e){return e?.display_color||"#6366f1"},async openCsvExportModal(e=null){const t=document.getElementById("csvExportModal");if(!t)return;if(this.employees.length===0&&!this.employeesLoading)try{await this.loadEmployees()}catch(d){console.warn("Could not load employees for CSV export:",d)}const s=document.getElementById("csvExportEmployeeSelect");if(s){s.innerHTML='<option value="">Alle ansatte</option>';const d=this.employees||[];d.filter(l=>!l.archived_at).forEach(l=>{const u=document.createElement("option");u.value=l.id,u.textContent=l.name,e&&l.id===e&&(u.selected=!0),s.appendChild(u)}),d.length===0&&console.info("No employees available for selection")}const o=new Date,n=new Date(o.getFullYear(),o.getMonth(),1),a=new Date(o.getFullYear(),o.getMonth()+1,0),i=document.getElementById("csvExportFromDate"),r=document.getElementById("csvExportToDate");i&&(i.value=n.toISOString().split("T")[0]),r&&(r.value=a.toISOString().split("T")[0]),t.classList.add("active")},closeCsvExportModal(){const e=document.getElementById("csvExportModal");e&&e.classList.remove("active")},async exportCsvReport(){try{const e=document.getElementById("csvExportEmployeeSelect")?.value||"",t=document.getElementById("csvExportFromDate")?.value||"",s=document.getElementById("csvExportToDate")?.value||"",o=new URLSearchParams;e&&o.append("employee_id",e),t&&o.append("from",t),s&&o.append("to",s);const a=`${window.CONFIG?.apiBase||window.location.origin}/reports/wages?${o.toString()}`;let i=null;try{const{data:{session:w}}=await window.supa.auth.getSession();i=w?.access_token}catch(w){console.error("Failed to get auth session:",w)}if(!i){alert("Du må være innlogget for å eksportere data");return}const r=await fetch(a,{method:"GET",headers:{Authorization:`Bearer ${i}`}});if(!r.ok)throw new Error(`Export failed: ${r.statusText}`);const d=await r.blob(),l=window.URL.createObjectURL(d),u=document.createElement("a");u.style.display="none",u.href=l;const c=new Date().toISOString().split("T")[0],m=e?document.getElementById("csvExportEmployeeSelect")?.options[document.getElementById("csvExportEmployeeSelect")?.selectedIndex]?.text.replace(/[^a-zA-Z0-9]/g,"_"):"alle_ansatte";u.download=`lønnsrapport_${m}_${c}.csv`,document.body.appendChild(u),u.click(),window.URL.revokeObjectURL(l),document.body.removeChild(u),this.closeCsvExportModal(),this.showNotification("CSV-rapport lastet ned","success")}catch(e){console.error("CSV export error:",e),alert("Kunne ikke eksportere CSV: "+e.message)}},showNotification(e,t="info"){const s=document.createElement("div");s.className=`notification notification-${t}`,s.textContent=e,s.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            background: ${t==="success"?"#10b981":"#3b82f6"};
            color: white;
            border-radius: 8px;
            z-index: 10000;
            animation: slideIn 0.3s ease-out;
        `,document.body.appendChild(s),setTimeout(()=>{s.style.animation="slideOut 0.3s ease-out",setTimeout(()=>{document.body.removeChild(s)},300)},3e3)}};export{he as app};
